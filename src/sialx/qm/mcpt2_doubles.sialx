import "mcpt2_defs.sialx" 
import "mcpt2_vars.sialx"
#
SIAL mcpt2_doubles
# 
# -----------------------------------------------------------------------------
# 
      PROC FORM_T2_0GUESS
#     ------------------- 

      sip_barrier 

# -----------------------------------------------------------------------------
# First form the initial guess to Taiai 
# -----------------------------------------------------------------------------

      esum = 0.0 

      PARDO ifrag, a, i, a1, i1  "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

	     GET                             Vaibj[a,i,a1,i1]  
	     tppqq[a,i,a1,i1]              = Vaibj[a,i,a1,i1] 
	     execute energy_denominator_rhf  tppqq[a,i,a1,i1] fock_a  
	     PUT T2old[a,i,a1,i1]         += tppqq[a,i,a1,i1] 

      ENDPARDO ifrag, a, i, a1, i1

      pardo ifrag
          PUT e20c[ifrag] = 0.0
      endpardo ifrag

      server_barrier


      PARDO ifrag, a, i, a1, i1  "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

		   GET                T2old[a,i,a1,i1] 
		   GET                Vaibj[a,i,a1,i1]  
		   GET                Vaibj[a,i1,a1,i]  

		   t1ppqq[a,i,a1,i1] = Vaibj[a,i,a1,i1]  
		   t3ppqq[a,i1,a1,i] = Vaibj[a,i1,a1,i]  
		   t2ppqq[a,i,a1,i1] = t3ppqq[a,i1,a1,i] 
		   t1ppqq[a,i,a1,i1]*= 2.0  
		   t1ppqq[a,i,a1,i1]-= t2ppqq[a,i,a1,i1] 

		   etemp = T2old[a,i,a1,i1]*t1ppqq[a,i,a1,i1] 
		   PUT e20c[ifrag] += etemp

      ENDPARDO ifrag, a, i, a1, i1
       sip_barrier   


# -----------------------------------------------------------------------------
# Now form the initial guess to Taibj 
# -----------------------------------------------------------------------------

      PARDO ifrag, jfrag, a, i, b, j   "Frag{NRij}{vo}{vo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwVirtA_frag[(index)b] == jfrag
      where (int)SwOccA_frag[(index)j] == jfrag

	     GET                             Vaibj[a,i,b,j]  
	     tppqq[a,i,b,j]                = Vaibj[a,i,b,j] 
	     execute energy_denominator_rhf  tppqq[a,i,b,j] fock_a  
	     PUT T2old[a,i,b,j]           += tppqq[a,i,b,j] 

      ENDPARDO ifrag, jfrag, a, i, b, j

      sip_barrier

      ENDPROC FORM_T2_0GUESS
#
# -----------------------------------------------------------------------------
# 
#
      PROC FORM_T2_GUESS
#     ------------------ 
# Zero out the T20aiai array at the beginning of the microiterations 
# This is the updated doubles V_X + H_0XY*T_XY

      PARDO ifrag, jfrag, a, i, b, j    "Frag{Rij}{vo}{vo}"
      where (int)rcut_dist[ifrag,jfrag] == ifrag
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)b] == jfrag
	  where (int)SwOccA_frag[(index)j] == jfrag

            PUT T20aiai[a,i,b,j] = 0.0

      ENDPARDO ifrag, jfrag, a, i, b, j

      sip_barrier 

# -----------------------------------------------------------------------------
# First form the initial guess to Taiai 
# -----------------------------------------------------------------------------

      PARDO ifrag, a, i, a1, i1    "Frag{i}{vovo}{}"
	 where (int)SwVirtA_frag[(index)a] == ifrag
	 where (int)SwOccA_frag[(index)i] == ifrag
	 where (int)SwVirtA_frag[(index)a1] == ifrag
	 where (int)SwOccA_frag[(index)i1] == ifrag

	     GET                Vaibj[a,i,a1,i1]  
	     xaiai[a,i,a1,i1] = 0.0  
	     
	     DO jfrag 
	     where ifrag != jfrag
	     where (int)rcut_dist[ifrag,jfrag] == ifrag


		  DO b
	 where (int)SwVirtA_frag[(index)b] == jfrag
		  DO j
	 where (int)SwOccA_frag[(index)j] == jfrag

		      GET                         Viabj[i1,a1,b,j] 
		      GET                         T2old[a,i,b,j] 

		      t3ppqq[b,j,a1,i1]         = Viabj[i1,a1,b,j]  
		      t1ppqq[a,i,a1,i1]         = T2old[a,i,b,j]*t3ppqq[b,j,a1,i1] 
		      xaiai[a,i,a1,i1]         += t1ppqq[a,i,a1,i1] 

		ENDDO j
		ENDDO b
             enddo jfrag

	     t1ppqq[a1,i1,a,i]     = xaiai[a,i,a1,i1] 
	     tppqq[a,i,a1,i1]      = xaiai[a,i,a1,i1] 
	     tppqq[a,i,a1,i1]     += Vaibj[a,i,a1,i1] 
	     t1ppqq[a1,i1,a,i]     = t1ppqq[a1,i1,a,i] 

	     PUT T20aiai[a,i,a1,i1]+= tppqq[a,i,a1,i1] 
	     PUT T20aiai[a1,i1,a,i]+= t1ppqq[a1,i1,a,i] 

      ENDPARDO ifrag, a, i, a1, i1


      server_barrier

#      PARDO ifrag    #: Fragment_i_vovo__
#	  where (int)SwVirtA_frag[(index)a] == ifrag
#	  where (int)SwOccA_frag[(index)i] == ifrag
#	  where (int)SwVirtA_frag[(index)a1] == ifrag
#	  where (int)SwOccA_frag[(index)i1] == ifrag
#
#	  esum = 0.0 
#
#
#               GET                T20aiai[a,i,a1,i1] 
#               GET                Vaibj[a,i,a1,i1]  
#               GET                Vaibj[a,i1,a1,i]  
#
#               tppqq[a,i,a1,i1] = T20aiai[a,i,a1,i1] 
#
#               execute energy_denominator_rhf tppqq[a,i,a1,i1] fock_a  
#
#               t1ppqq[a,i,a1,i1] = Vaibj[a,i,a1,i1]  
#               t3ppqq[a,i1,a1,i] = Vaibj[a,i1,a1,i]  
#               t2ppqq[a,i,a1,i1]   = t3ppqq[a,i1,a1,i] 
#               t1ppqq[a,i,a1,i1]*= 2.0  
#               t1ppqq[a,i,a1,i1]-= t2ppqq[a,i,a1,i1] 
#
#               etemp = tppqq[a,i,a1,i1]*t1ppqq[a,i,a1,i1] 
#               esum += etemp 
#
# 
#      ENDPARDO ifrag 

# -----------------------------------------------------------------------------
# Now form the initial guess to Taibj 
# -----------------------------------------------------------------------------

      PARDO ifrag, jfrag, a, i, b, j     "Frag{NRij}{vo}{vo}"
      where jfrag != ifrag 
      where (int)rcut_dist[ifrag,jfrag] == ifrag
	 where (int)SwVirtA_frag[(index)a] == ifrag
	 where (int)SwOccA_frag[(index)i] == ifrag
	 where (int)SwVirtA_frag[(index)b] == jfrag
	 where (int)SwOccA_frag[(index)j] == jfrag

	     GET                            Vaibj[a,i,b,j]  
	     t2ppqq[a,i,b,j]              = Vaibj[a,i,b,j]  
#

	     DO a1
	     where (int)SwVirtA_frag[(index)a1] == ifrag
	     DO i1  
	     where (int)SwOccA_frag[(index)i1] == ifrag

		  GET T2old[a,i,a1,i1] 
		  GET T2old[a,i1,a1,i] 
		  GET Viabj[i1,a1,b,j] 

		  tppqq[a,i,a1,i1]  = T2old[a,i,a1,i1] 
		  t1ppqq[a,i,a1,i1] = T2old[a,i1,a1,i] 
		  tppqq[a,i,a1,i1] *= 2.0  
		  tppqq[a,i,a1,i1] -= t1ppqq[a,i,a1,i1] 

		  taiai[a,i,b,j]    = tppqq[a,i,a1,i1]*Viabj[i1,a1,b,j] 
		  t2ppqq[a,i,b,j]  += taiai[a,i,b,j] 

	     ENDDO i1
	     ENDDO a1 

	     DO b1
	     where (int)SwVirtA_frag[(index)b1] == jfrag
	     DO j1
	     where (int)SwOccA_frag[(index)j1] == jfrag

		  GET T2old[b,j,b1,j1] 
		  GET T2old[b,j1,b1,j] 
		  GET Viabj[j1,b1,a,i] 

		  tppqq[b,j,b1,j1]  = T2old[b,j,b1,j1] 
		  t1ppqq[b,j,b1,j1] = T2old[b,j1,b1,j] 
		  tppqq[b,j,b1,j1] *= 2.0  
		  tppqq[b,j,b1,j1] -= t1ppqq[b,j,b1,j1] 

		  taiai[a,i,b,j]    = tppqq[b,j,b1,j1]*Viabj[j1,b1,a,i] 
		  t2ppqq[a,i,b,j]  += taiai[a,i,b,j] 

	     ENDDO j1
	     ENDDO b1 

	     PUT T20aiai[a,i,b,j]        += t2ppqq[a,i,b,j] 

      ENDPARDO ifrag, jfrag, a, i, b, j  

      sip_barrier

      ENDPROC FORM_T2_GUESS
# 
# -----------------------------------------------------------------------------
# 
      PROC FORM_T2_FRAGMENT_ITERS
# -----------------------------------------------------------------------------
#     START OF FRAGMENT ITERATIONS 
# -----------------------------------------------------------------------------
      PARDO ifrag  
         PUT e20c_old[ifrag] = 0.0
         PUT e2error[ifrag]  = 1.0
      ENDPARDO ifrag  
      sip_barrier
#
      eold = 0.0
      print "Performing a fragment CCPT2 calc"
      DO kiter 
      print kiter
#
      sip_barrier
      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 
         do_iter = 1.0 

              GET                    T20aiai[a,i,a1,i1] 
              PUT T2new[a,i,a1,i1] = T20aiai[a,i,a1,i1] 

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, a, i, a1, i1


      PARDO ifrag, mu, nu, i, i1 "Frag{i}{aaoo}{}"
	  where (int)SwAO_frag[(index)mu] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwAO_frag[(index)nu] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 
         do_iter = 1.0 


              txpxq[mu,i,nu,i1]       = 0.0 
              PUT TAO_ab[mu,i,nu,i1]  = txpxq[mu,i,nu,i1] 
              PUT T2AO_ab[mu,i,nu,i1] = txpxq[mu,i,nu,i1] 

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, mu, nu, i, i1

      sip_barrier

      if do_nonhf == 1

      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 
         do_iter = 1.0 

             xaiai[a,i,a1,i1] = 0.0

	     do a2
	     where (int)SwVirtA_frag[(index)a2] == ifrag
	         get T2old[a,i,a2,i1]
		 get wC[a1,a2]
		 Tpp[a1,a2] = wC[a1,a2]
		 if a1==a2
		     execute remove_diagonal Tpp[a1,a2]
		 endif
		 t1ppqq[a,i,a1,i1]  = Tpp[a1,a2]*T2old[a,i,a2,i1]
		 xaiai[a,i,a1,i1]  += t1ppqq[a,i,a1,i1] 
	     enddo a2

	     do i2
	     where (int)SwOccA_frag[(index)i2] == ifrag
	         get T2old[a,i,a1,i2]
		 get wC[i1,i2]
		 Tpp[i1,i2] = wC[i1,i2]
		 if i1==i2
		     execute remove_diagonal Tpp[i1,i2]
		 endif 
		 t1ppqq[a,i,a1,i1]  = Tpp[i1,i2]*T2old[a,i,a1,i2]
                 t1ppqq[a,i,a1,i1] *= -1.0
		 xaiai[a,i,a1,i1]  += t1ppqq[a,i,a1,i1]
	     enddo i2

	     t1ppqq[a1,i1,a,i]     = xaiai[a,i,a1,i1] 
	     tppqq[a,i,a1,i1]      = xaiai[a,i,a1,i1] 

              PUT T2new[a,i,a1,i1] += tppqq[a,i,a1,i1] 
              PUT T2new[a1,i1,a,i] += t1ppqq[a1,i1,a,i]

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, a, i, a1, i1

      endif

# Form backtransformed amplitudes 
      PARDO ifrag, mu, i, a, j "Frag{i}{aovo}{}"
	  where (int)SwAO_frag[(index)mu] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)j] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 

	     taixj[a,i,mu,j] = 0.0

	      DO b
	      where (int)SwVirtA_frag[(index)b] == ifrag

		     GET                T2old[a,i,b,j] 
		     T1aixj[a,i,mu,j] = T2old[a,i,b,j]*ca[mu,b]
		     Taixj[a,i,mu,j] += T1aixj[a,i,mu,j]

	      ENDDO b

	      DO nu
	      where (int)SwAO_frag[(index)nu] == ifrag

		     Txixi[nu,i,mu,j]       = Taixj[a,i,mu,j]*ca[nu,a]
		     PUT TAO_ab[nu,i,mu,j] += Txixi[nu,i,mu,j]

	       ENDDO nu

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, mu, i, a, j


      server_barrier # barrier because of put tau_ab
#
# Do Ladder contraction 
#
      PARDO ifrag, mu, nu, lambda, sigma "Frag{i}{aaaa}{}"
	  where (int)SwAO_frag[(index)mu] == ifrag
	  where (int)SwAO_frag[(index)nu] == ifrag
	  where (int)SwAO_frag[(index)lambda] == ifrag
	  where (int)SwAO_frag[(index)sigma] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 
         do_iter = 1.0 

                 aoint[lambda,mu,sigma,nu]  = 0.0 
                 execute compute_integral_batch aoint[lambda,mu,sigma,nu] #  1 1 2 2  

		  DO i  
		  where (int)SwOccA_frag[(index)i] == ifrag
		  DO j  
		  where (int)SwOccA_frag[(index)j] == ifrag

                     GET                       TAO_ab[lambda,i,sigma,j] 
                     txixi[mu,i,nu,j]        = aoint[lambda,mu,sigma,nu]*TAO_ab[lambda,i,sigma,j] 
                     PUT T2AO_ab[mu,i,nu,j] += txixi[mu,i,nu,j] 

                  ENDDO j 
                  ENDDO i 

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, mu, nu, lambda, sigma

#
# Add the WMEBJ term 
#
      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 

#     AA 

	     GET                 Viabj[i,a,a1,i1]  
	     GET                 Vaajj[a1,a,i,i1] 

	     t2ppqq[i,a,a1,i1] = Viabj[i,a,a1,i1] 
	     tppqq[a,i,a1,i1]  = t2ppqq[i,a,a1,i1] 

	     t3ppqq[a1,a,i,i1] = Vaajj[a1,a,i,i1] 
	     t1ppqq[a,i,a1,i1] = t3ppqq[a1,a,i,i1] 

	     tppqq[a,i,a1,i1] -= t1ppqq[a,i,a1,i1]  

	      DO b
	      where (int)SwVirtA_frag[(index)b] == ifrag
	      DO j  
	      where (int)SwOccA_frag[(index)j] == ifrag
		   GET                   T2old[a1,i1,b,j] 
		   xaiai[a,i,b,j]      = tppqq[a,i,a1,i1]*T2old[a1,i1,b,j]  
		   t2ppqq[b,j,a,i]     = xaiai[a,i,b,j] 
		   PUT T2new[a,i,b,j] += xaiai[a,i,b,j] 
		   PUT T2new[b,j,a,i] += t2ppqq[b,j,a,i] 
	      ENDDO j 
	      ENDDO b 

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, a, i, a1, i1


      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 

#     AB 

	     GET                 T2old[a1,i1,a,i] 
	     GET                 T2old[a1,i,a,i1]  

	     tppqq[a1,i1,a,i]  = T2old[a1,i1,a,i] 
	     t3ppqq[a1,i,a,i1] = T2old[a1,i,a,i1]  
	     t1ppqq[a1,i1,a,i] = t3ppqq[a1,i,a,i1]  

	     tppqq[a1,i1,a,i] -= t1ppqq[a1,i1,a,i]  
	     t2ppqq[a1,i1,i,a] = tppqq[a1,i1,a,i] 

	      DO b
	      where (int)SwVirtA_frag[(index)b] == ifrag
	      DO j  
	      where (int)SwOccA_frag[(index)j] == ifrag
		   GET                     Viabj[i,a,b,j] 
		   xaiai[a1,i1,b,j]      = t2ppqq[a1,i1,i,a]*Viabj[i,a,b,j]  
		   t3ppqq[b,j,a1,i1]     = xaiai[a1,i1,b,j] 

		   PUT T2new[a1,i1,b,j] += xaiai[a1,i1,b,j] 
		   PUT T2new[b,j,a1,i1] += t3ppqq[b,j,a1,i1] 
	      ENDDO j 
	      ENDDO b 

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, a, i, a1, i1


      PARDO ifrag, a, j, b1, i1 "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)j] == ifrag
	  where (int)SwVirtA_frag[(index)b1] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 

#     AB 

	     GET                 T2old[a,i1,b1,j] 
	     t1ppqq[a,i1,b1,j] = T2old[a,i1,b1,j] 

	      DO b
	      where (int)SwVirtA_frag[(index)b] == ifrag
	      DO i  
	      where (int)SwOccA_frag[(index)i] == ifrag
		   GET                   Vaajj[b,b1,i1,i] 
		   xaiai[a,i,b,j]      = t1ppqq[a,i1,b1,j]*Vaajj[b,b1,i1,i]   
		   xaiai[a,i,b,j]     *= -1.0  
		   t3ppqq[b,j,a,i]     = xaiai[a,i,b,j] 

		   PUT T2new[a,i,b,j] += xaiai[a,i,b,j] 
		   PUT T2new[b,j,a,i] += t3ppqq[b,j,a,i] 
	      ENDDO i 
	      ENDDO b 

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, a, j, b1, i1


      PARDO ifrag, a, i1, b, j1 "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwVirtA_frag[(index)b] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag
	  where (int)SwOccA_frag[(index)j1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 

#     v^2 o^4 term  

	     GET                 T2old[a,i1,b,j1] 
	     t1ppqq[a,i1,b,j1] = T2old[a,i1,b,j1] 

	      DO i  
	      where (int)SwOccA_frag[(index)i] == ifrag
	      DO j  
	      where (int)SwOccA_frag[(index)j] == ifrag
		   GET                   Viijj[i1,i,j1,j] 
		   tppqq[i1,i,j1,j]    = Viijj[i1,i,j1,j] 
		   xaiai[a,i,b,j]      = t1ppqq[a,i1,b,j1]*tppqq[i1,i,j1,j]  
		   PUT T2new[a,i,b,j] += xaiai[a,i,b,j] 
	       ENDDO j 
	       ENDDO i 

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, a, i1, b, j1

      server_barrier # barrier because of put t2au_ab
# 
#    Perform final transformation of LADDER contribution
#    ---------------------------------------------------
#
      PARDO ifrag, nu, i, j "Frag{i}{aoo}{}"
	  where (int)SwAO_frag[(index)nu] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwOccA_frag[(index)j] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 
#
	      DO a
	      where (int)SwVirtA_frag[(index)a] == ifrag
                    allocate LDaixj[a,i,nu,j]
              ENDDO a
#
	      DO mu
	      where (int)SwAO_frag[(index)mu] == ifrag
#
                 GET                T2AO_ab[mu,i,nu,j] 
                 txixj[mu,i,nu,j] = T2AO_ab[mu,i,nu,j] 
#
		  DO a
		  where (int)SwVirtA_frag[(index)a] == ifrag
                       Taixj[a,i,nu,j]   = txixj[mu,i,nu,j]*ca[mu,a]
                       LDaixj[a,i,nu,j] += Taixj[a,i,nu,j]
                  ENDDO a

              ENDDO mu

	      DO a
	      where (int)SwVirtA_frag[(index)a] == ifrag
	      DO b
	      where (int)SwVirtA_frag[(index)b] == ifrag
                 Tppqq[a,i,b,j]      = LDaixj[a,i,nu,j]*ca[nu,b]
                 PUT T2new[a,i,b,j] += Tppqq[a,i,b,j]
              ENDDO b
              ENDDO a
#
	      DO a
	      where (int)SwVirtA_frag[(index)a] == ifrag
                    deallocate LDaixj[a,i,nu,j]
              ENDDO a
#

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, nu, i, j

      server_barrier
#
# Form the new ampllitude 
#
      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 
      IF etemp > cc_conv 

              GET                        T2new[a,i,a1,i1] 
              tppqq[a,i,a1,i1]         = T2new[a,i,a1,i1] 
              execute energy_denominator_rhf tppqq[a,i,a1,i1] fock_a  
              PUT T2old[a,i,a1,i1] = tppqq[a,i,a1,i1] 

      ENDIF #etemp > c_conv
      ENDPARDO ifrag, a, i, a1, i1

      server_barrier
      pardo ifrag
          put e20c[ifrag] = 0.0
      endpardo ifrag
      server_barrier
#
# Form the new energy 
#
      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwOccA_frag[(index)i] == ifrag
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwOccA_frag[(index)i1] == ifrag

      #   GET     e2error[ifrag] 
#	 etemp = e2error[ifrag]
#         if etemp < zero  
#            etemp *= -1.0 
#         endif 
#      IF etemp > cc_conv 
         do_iter = 1.0 

               GET                T2old[a,i,a1,i1] 
               GET                Vaibj[a,i,a1,i1]  
               GET                Vaibj[a,i1,a1,i]  

               t1ppqq[a,i,a1,i1] = Vaibj[a,i,a1,i1]  
               t3ppqq[a,i1,a1,i] = Vaibj[a,i1,a1,i]  
               t2ppqq[a,i,a1,i1] = t3ppqq[a,i1,a1,i] 
               t1ppqq[a,i,a1,i1]*= 2.0  
               t1ppqq[a,i,a1,i1]-= t2ppqq[a,i,a1,i1] 

               etemp = T2old[a,i,a1,i1]*t1ppqq[a,i,a1,i1] 

               PUT e20c[ifrag]  += etemp

#      ENDIF # etemp > cc_conv 
      ENDPARDO ifrag, a, i, a1, i1
      sip_barrier
      esum = 0.0
      sip_barrier
      PARDO ifrag 
         GET                  e20c[ifrag] 
         GET                  e20c_old[ifrag] 
	 etemp = e20c[ifrag]
	 esum += etemp
         tp[ifrag]          = e20c_old[ifrag]  
         tp[ifrag]         -= e20c[ifrag]  
         PUT e2error[ifrag] = tp[ifrag] 
         PUT e20c_old[ifrag]= e20c[ifrag] 
      ENDPARDO ifrag 
      sip_barrier 
#
# -----------------------------------------------------------------------------
#     END OF FRAGMENT ITERATIONS 
# -----------------------------------------------------------------------------
#
      fragment_doubles = 0.0
      sip_barrier 
      collective fragment_doubles += esum
      sip_barrier 
      print fragment_doubles
      ediff = fragment_doubles - eold
      escr = ediff**2.0
      ediff = escr**0.5
      print ediff
      if ediff < cc_conv
	  exit #kiter
      endif
      eold = fragment_doubles
      sip_barrier
      ENDDO kiter 
      sip_barrier
#
      PARDO ifrag, jfrag 
      where ifrag == jfrag 
         GET                        e20c[ifrag] 
         t20disp[ifrag,jfrag]     = e20c[ifrag]  
         PUT e20disp[ifrag,jfrag] = t20disp[ifrag,jfrag] 
      ENDPARDO ifrag, jfrag  
#
# -----------------------------------------------------------------------------
#     END OF FRAGMENT CALCULATIONS  
# -----------------------------------------------------------------------------
# 
      ENDPROC FORM_T2_FRAGMENT_ITERS
#
# -----------------------------------------------------------------------------
#
      PROC FORM_T2_DIMER_ITERS
# -----------------------------------------------------------------------------
#     Dimer calculations   
# -----------------------------------------------------------------------------
#     ------------------------  
# 
      PARDO ifrag, jfrag   
       WHERE ifrag != jfrag 
         PUT d20c_old[ifrag,jfrag] = 0.0
         PUT d2error[ifrag,jfrag]  = 10.0
      ENDPARDO ifrag, jfrag   
      sip_barrier
#
      eold = 0.0

         print "Performing a dimer CCPT2 calc"
      DO diter 
	 print diter
#
      PARDO ifrag, jfrag, a, i, a1, i1 "Frag{NRij}{vo}{vo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwVirtA_frag[(index)a1] == jfrag
      where (int)SwOccA_frag[(index)i1] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

              GET                    T20aiai[a,i,a1,i1] 

              PUT T2new[a,i,a1,i1] = T20aiai[a,i,a1,i1] 

      ENDIF
      ENDPARDO ifrag, jfrag, a, i, a1, i1

      PARDO ifrag, jfrag, mu, i, nu, i1 "Frag{NRij}{ao}{ao}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwAO_frag[(index)mu] == ifrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwAO_frag[(index)nu] == jfrag
      where (int)SwOccA_frag[(index)i1] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

              PUT TAO_ab[mu,i,nu,i1]  = 0.0
              PUT T2AO_ab[mu,i,nu,i1] = 0.0

      ENDIF
      ENDPARDO ifrag, jfrag, mu, i, nu, i1

      server_barrier

      if do_nonhf == 1

      PARDO ifrag, jfrag, a, i, a1, i1 "Frag{NRij}{vo}{vo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwVirtA_frag[(index)a1] == jfrag
      where (int)SwOccA_frag[(index)i1] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

             xaiai[a,i,a1,i1] = 0.0

	     do a2
	     where (int)SwVirtA_frag[(index)a2] == ifrag
	         get T2old[a2,i,a1,i1]
		 get wC[a,a2]
		 Tpp[a,a2] = wC[a,a2]
		 if a==a2
		     execute remove_diagonal Tpp[a,a2]
		 endif
		 t1ppqq[a,i,a1,i1]  = Tpp[a,a2]*T2old[a2,i,a1,i1]
		 xaiai[a,i,a1,i1]  += t1ppqq[a,i,a1,i1] 
	     enddo a2

	     do i2
	     where (int)SwOccA_frag[(index)i2] == ifrag
	         get T2old[a,i2,a1,i1]
		 get wC[i,i2]
		 Tpp[i,i2] = wC[i,i2]
		 if i==i2
		     execute remove_diagonal Tpp[i,i2]
		 endif
		 t1ppqq[a,i,a1,i1]  = Tpp[i,i2]*T2old[a,i2,a1,i1]
                 t1ppqq[a,i,a1,i1] *= -1.0
		 xaiai[a,i,a1,i1]  += t1ppqq[a,i,a1,i1]
	     enddo i2

	     do a2
	     where (int)SwVirtA_frag[(index)a2] == jfrag
	         get T2old[a,i,a2,i1]
		 get wC[a1,a2]
		 Tpp[a1,a2] = wC[a1,a2]
		 if a1==a2
		     execute remove_diagonal Tpp[a1,a2]
		 endif
		 t1ppqq[a,i,a1,i1]  = Tpp[a1,a2]*T2old[a,i,a2,i1]
		 xaiai[a,i,a1,i1]  += t1ppqq[a,i,a1,i1] 
	     enddo a2

	     do i2
	     where (int)SwOccA_frag[(index)i2] == jfrag
	         get T2old[a,i,a1,i2]
		 get wC[i1,i2]
		 Tpp[i1,i2] = wC[i1,i2]
		 if i1==i2
		     execute remove_diagonal Tpp[i1,i2]
		 endif
		 t1ppqq[a,i,a1,i1]  = Tpp[i1,i2]*T2old[a,i,a1,i2]
                 t1ppqq[a,i,a1,i1] *= -1.0
		 xaiai[a,i,a1,i1]  += t1ppqq[a,i,a1,i1]
	     enddo i2

	     t1ppqq[a1,i1,a,i]     = xaiai[a,i,a1,i1] 
	     tppqq[a,i,a1,i1]      = xaiai[a,i,a1,i1] 

              PUT T2new[a,i,a1,i1] += tppqq[a,i,a1,i1] 

      ENDIF
      ENDPARDO ifrag, jfrag, a, i, a1, i1

      endif

# Form backtransformed amplitudes 
      PARDO ifrag, jfrag, a, i, mu, j "Frag{NRij}{vo}{ao}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwAO_frag[(index)mu] == jfrag
      where (int)SwOccA_frag[(index)j] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

	     taixj[a,i,mu,j] = 0.0

	      DO b
	      where (int)SwVirtA_frag[(index)b] == jfrag

		     GET                T2old[a,i,b,j]
		     T1aixj[a,i,mu,j] = T2old[a,i,b,j]*ca[mu,b]
		     Taixj[a,i,mu,j] += T1aixj[a,i,mu,j]

	      ENDDO b

	      DO nu 
	      where (int) SwAO_frag[(index)nu] == ifrag

		     Txixi[nu,i,mu,j]       = Taixj[a,i,mu,j]*ca[nu,a]
		     PUT TAO_ab[nu,i,mu,j] += Txixi[nu,i,mu,j]

	       ENDDO nu

      ENDIF
      ENDPARDO ifrag, jfrag, a, i, mu, j


      server_barrier


# Do Ladder contraction 
      PARDO ifrag, jfrag, mu, lambda, nu, sigma "Frag{NRij}{aa}{aa}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
	  where (int)SwAO_frag[(index)mu] == ifrag
	  where (int)SwAO_frag[(index)lambda] == ifrag
	  where (int)SwAO_frag[(index)nu] == jfrag
	  where (int)SwAO_frag[(index)sigma] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

                 aoint[lambda,mu,sigma,nu]  = 0.0
                 execute compute_integral_batch aoint[lambda,mu,sigma,nu] #  1 1 2 2  

                 DO i
		 where (int)SwOccA_frag[(index)i] == ifrag
                 DO j
		 where (int)SwOccA_frag[(index)j] == jfrag

                     GET                       TAO_ab[lambda,i,sigma,j]
                     txixi[mu,i,nu,j]        = aoint[lambda,mu,sigma,nu]*TAO_ab[lambda,i,sigma,j]
                     PUT T2AO_ab[mu,i,nu,j] += txixi[mu,i,nu,j]

                 ENDDO j
                 ENDDO i

      ENDIF
      ENDPARDO ifrag, jfrag, mu, lambda, nu, sigma


# Add the WMEBJ term 
      PARDO ifrag, jfrag, a, i1, b1, j "Frag{NRij}{vo}{vo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOccA_frag[(index)i1] == ifrag
      where (int)SwVirtA_frag[(index)b1] == jfrag
      where (int)SwOccA_frag[(index)j] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

#     AB 

	     GET                 T2old[a,i1,b1,j]
	     t1ppqq[a,i1,b1,j] = T2old[a,i1,b1,j]

	     DO b
	     where (int)SwVirtA_frag[(index)b] == jfrag
	     DO i
	     where (int)SwOccA_frag[(index)i] == ifrag

		   GET                   Vaajj[b,b1,i1,i]
		   xaiai[a,i,b,j]      = t1ppqq[a,i1,b1,j]*Vaajj[b,b1,i1,i]
		   xaiai[a,i,b,j]     *= -1.0
		   PUT T2new[a,i,b,j] += xaiai[a,i,b,j]

	     ENDDO i
	     ENDDO b

      ENDIF
      ENDPARDO ifrag, jfrag, a, i1, b1, j

      PARDO ifrag, jfrag, a, a1, j, j1 "Frag{NRij}{vv}{oo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
	  where (int)SwVirtA_frag[(index)a] == ifrag
	  where (int)SwVirtA_frag[(index)a1] == ifrag
	  where (int)SwOccA_frag[(index)j] == jfrag
	  where (int)SwOccA_frag[(index)j1] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

	     DO b
	     where (int)SwVirtA_frag[(index)b] == jfrag
	     DO i
	     where (int)SwOccA_frag[(index)i] == ifrag

		   GET                 T2old[a1,i,b,j1]
		   t1ppqq[a1,i,b,j1] = T2old[a1,i,b,j1]

		   GET                   Vaajj[a,a1,j1,j]
		   xaiai[a,i,b,j]      = t1ppqq[a1,i,b,j1]*Vaajj[a,a1,j1,j]
		   xaiai[a,i,b,j]     *= -1.0
		   PUT T2new[a,i,b,j] += xaiai[a,i,b,j]

	     ENDDO i
	     ENDDO b

      ENDIF
      ENDPARDO ifrag, jfrag, a, a1, j, j1

#     v^2 o^4 term  
      PARDO ifrag, jfrag, a, i1, b, j1 "Frag{NRij}{vo}{vo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOCcA_frag[(index)i1] == ifrag
      where (int)SwVirtA_frag[(index)b] == jfrag
      where (int)SwOccA_frag[(index)j1] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

	     GET                 T2old[a,i1,b,j1]
	     t1ppqq[a,i1,b,j1] = T2old[a,i1,b,j1]

	     DO i
	     where (int)SwOCcA_frag[(index)i] == ifrag
	     DO j
	     where (int)SwOccA_frag[(index)j] == jfrag
		   GET                   Viijj[i1,i,j1,j]
		   tppqq[i1,i,j1,j]    = Viijj[i1,i,j1,j]
		   xaiai[a,i,b,j]      = t1ppqq[a,i1,b,j1]*tppqq[i1,i,j1,j]
		   PUT T2new[a,i,b,j] += xaiai[a,i,b,j]

	     ENDDO j
	     ENDDO i

      ENDIF
      ENDPARDO ifrag, jfrag, a, i1, b, j1

      server_barrier

#    Perform final transformation of LADDER contribution
      PARDO ifrag, jfrag, i, nu, j "Frag{NRij}{o}{ao}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwAO_frag[(index)nu] == jfrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwOccA_frag[(index)j] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
#
		DO a
		where (int)SwVirtA_frag[(index)a] == ifrag
			allocate LDaixj[a,i,nu,j]
		ENDDO a
#
		DO mu
		where (int)SwAO_frag[(index)mu] == ifrag
#
		   GET                T2AO_ab[mu,i,nu,j]
		   txixj[mu,i,nu,j] = T2AO_ab[mu,i,nu,j]
#
		   DO a
		   where (int)SwVirtA_frag[(index)a] == ifrag
			   Taixj[a,i,nu,j]   = txixj[mu,i,nu,j]*ca[mu,a]
			   LDaixj[a,i,nu,j] += Taixj[a,i,nu,j]
		   ENDDO a

		ENDDO mu


		DO a
		where (int)SwVirtA_frag[(index)a] == ifrag
		DO b
		where (int)SwVirtA_frag[(index)b] == jfrag
		     Tppqq[a,i,b,j]      = LDaixj[a,i,nu,j]*ca[nu,b]
		     PUT T2new[a,i,b,j] += Tppqq[a,i,b,j]
		ENDDO b
		ENDDO a
#
		DO a
		where (int)SwVirtA_frag[(index)a] == ifrag
			deallocate LDaixj[a,i,nu,j]
		ENDDO a
#
      ENDIF
      ENDPARDO ifrag, jfrag, i, nu, j


#    Add the contributions coming from Vaiai  
      PARDO ifrag, jfrag, a, i, b, j "Frag{NRij}{vo}{vo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwVirtA_frag[(index)b] == jfrag
      where (int)SwOccA_frag[(index)j] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

	     t2ppqq[a,i,b,j]              = 0.0  

	     DO a1 
	     where (int)SwVirtA_frag[(index)a1] == ifrag
	     DO i1 
	     where (int)SwOccA_frag[(index)i1] == ifrag

		   GET T2old[a1,i1,b,j] 
		   GET Viabj[i1,a1,a,i] 
		   GET Vaajj[a1,a,i,i1] 

		   tppqq[a1,i1,a,i]  = Viabj[i1,a1,a,i]  
		   t1ppqq[a1,i1,a,i] = Vaajj[a1,a,i,i1]  
		   tppqq[a1,i1,a,i] *= 2.0  
		   tppqq[a1,i1,a,i] -= t1ppqq[a1,i1,a,i] 

		   taiai[a,i,b,j]    = T2old[a1,i1,b,j]*tppqq[a1,i1,a,i]   
		   t2ppqq[a,i,b,j]  += taiai[a,i,b,j] 

	     ENDDO i1
	     ENDDO a1 

	     DO b1 
             where (int)SwVirtA_frag[(index)b1] == jfrag
	     DO j1 
	     where (int)SwOccA_frag[(index)j1] == jfrag

		   GET T2old[a,i,b1,j1] 
		   GET Viabj[j1,b1,b,j] 
		   GET Vaajj[b1,b,j,j1] 

		   tppqq[b1,j1,b,j]  = Viabj[j1,b1,b,j]  
		   t1ppqq[b1,j1,b,j] = Vaajj[b1,b,j,j1]  
		   tppqq[b1,j1,b,j] *= 2.0  
		   tppqq[b1,j1,b,j] -= t1ppqq[b1,j1,b,j] 

		   taiai[a,i,b,j]    = T2old[a,i,b1,j1]*tppqq[b1,j1,b,j]   
		   t2ppqq[a,i,b,j]  += taiai[a,i,b,j] 

	     ENDDO j1
	     ENDDO b1 

	     PUT T2new[a,i,b,j]        += t2ppqq[a,i,b,j] 

      ENDIF
      ENDPARDO ifrag, jfrag, a, i, b, j

      server_barrier

# Form the new amplitude 
      PARDO ifrag, jfrag, a, i, a1, i1 "Frag{NRij}{vo}{vo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwVirtA_frag[(index)a1] == jfrag
      where (int)SwOccA_frag[(index)i1] == jfrag

         GET     d2error[ifrag,jfrag] 
         etemp = d2error[ifrag,jfrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 

              GET                        T2new[a,i,a1,i1]
              tppqq[a,i,a1,i1]         = T2new[a,i,a1,i1]
              execute energy_denominator_rhf tppqq[a,i,a1,i1] fock_a
              PUT T2old[a,i,a1,i1] = tppqq[a,i,a1,i1]

      ENDIF
      ENDPARDO ifrag, jfrag, a, i, a1, i1

      server_barrier
      pardo ifrag,jfrag
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
	       PUT d20c[ifrag,jfrag] = 0.0
      endpardo ifrag,jfrag
      server_barrier

# Form the new energy 
      PARDO ifrag, jfrag, a, i, a1, i1 "Frag{NRij}{vo}{vo}"
      where ifrag != jfrag
      where (int)rcut_dist[ifrag,jfrag] == ifrag
      where (int)SwVirtA_frag[(index)a] == ifrag
      where (int)SwOccA_frag[(index)i] == ifrag
      where (int)SwVirtA_frag[(index)a1] == jfrag
      where (int)SwOccA_frag[(index)i1] == jfrag

               GET                T2old[a,i,a1,i1]
               GET                Vaibj[a,i,a1,i1]

               etemp = T2old[a,i,a1,i1]*Vaibj[a,i,a1,i1]
               etemp*= 4.0  
	       PUT d20c[ifrag,jfrag] += etemp

      ENDPARDO ifrag, jfrag, a, i, a1, i1

      esum = 0.0 
      dimer_doubles = 0.0 
      sip_barrier 

      PARDO ifrag, jfrag  
      WHERE ifrag != jfrag 
      where (int)rcut_dist[ifrag,jfrag] == ifrag

         GET                        d20c[ifrag,jfrag] 
         GET                        d20c_old[ifrag,jfrag] 
         t20disp[ifrag,jfrag]     = d20c_old[ifrag,jfrag]  
         t20disp[ifrag,jfrag]    -= d20c[ifrag,jfrag]  
         PUT d2error[ifrag,jfrag] = t20disp[ifrag,jfrag] 
         PUT d20c_old[ifrag,jfrag]= d20c[ifrag,jfrag] 

         etemp = d20c[ifrag,jfrag]
         if jfrag > ifrag 
            esum += etemp 
         endif 

      ENDPARDO ifrag, jfrag  
      sip_barrier 
      collective dimer_doubles += esum 
      print dimer_doubles
      escr = dimer_doubles - eold
      ediff = (escr**2.0)**0.5
      print ediff
      if ediff < cc_conv
	  exit #diter
      endif
      eold = dimer_doubles
      sip_barrier
#
      ENDDO diter 
# 
      ENDPROC FORM_T2_DIMER_ITERS
#
# -----------------------------------------------------------------------------
#
      PROC FORM_T2_MONOMER  
# -----------------------------------------------------------------------------
#     Fragment only calculation  
# -----------------------------------------------------------------------------
      PARDO ifrag  
         PUT e20c_old[ifrag] = 0.0
         PUT e2error[ifrag]  = 1.0
      ENDPARDO ifrag  
#
      sip_barrier
      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwVirtA_frag[(index)a1] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag

              GET                         T2old[a,i,a1,i1] 
              PUT T2old_mono[a,i,a1,i1] = T2old[a,i,a1,i1] 

      ENDPARDO ifrag, a, i, a1, i1
      sip_barrier
#
      eold = 0.0
      print " "
      print "Performing a LCCD calc on fragment "
      DO kiter 
         do_iter = 0.0 
#
      sip_barrier
      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwVirtA_frag[(index)a1] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 


              GET                    Vaibj[a,i,a1,i1] 
              PUT T2new[a,i,a1,i1] = Vaibj[a,i,a1,i1] 

      ENDIF
      ENDPARDO ifrag, a, i, a1, i1


      PARDO ifrag, mu, nu, i, i1 "Frag{i}{aaoo}{}"
	where (int)SwAO_frag[(index)mu] == ifrag
	where (int)SwAO_frag[(index)nu] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

              txpxq[mu,i,nu,i1]       = 0.0 
              PUT TAO_ab[mu,i,nu,i1]  = txpxq[mu,i,nu,i1] 
              PUT T2AO_ab[mu,i,nu,i1] = txpxq[mu,i,nu,i1] 

      ENDIF
      ENDPARDO ifrag, mu, nu, i, i1

      server_barrier

      PARDO ifrag, mu, i, a, j "Frag{i}{aovo}{}"
	where (int)SwAO_frag[(index)mu] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwOccA_frag[(index)j] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

# Form backtransformed amplitudes 

         taixj[a,i,mu,j] = 0.0

          DO b
	  where (int)SwVirtA_frag[(index)b] == ifrag

                 GET                T2old_mono[a,i,b,j] 
                 T1aixj[a,i,mu,j] = T2old_mono[a,i,b,j]*ca[mu,b]
                 Taixj[a,i,mu,j] += T1aixj[a,i,mu,j]

          ENDDO b

          DO nu
	  where (int)SwAO_frag[(index)nu] == ifrag

                 Txixi[nu,i,mu,j]       = Taixj[a,i,mu,j]*ca[nu,a]
                 PUT TAO_ab[nu,i,mu,j] += Txixi[nu,i,mu,j]

           ENDDO nu

      ENDIF
      ENDPARDO ifrag, mu, i, a, j

      server_barrier

      PARDO ifrag, mu, nu, lambda, sigma "Frag{i}{aaaa}{}"
	where (int)SwAO_frag[(index)mu] == ifrag
	where (int)SwAO_frag[(index)nu] == ifrag
	where (int)SwAO_frag[(index)lambda] == ifrag
	where (int)SwAO_frag[(index)sigma] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

#
# Do Ladder contraction 
#

                 aoint[lambda,mu,sigma,nu]  = 0.0 
                 execute compute_integral_batch aoint[lambda,mu,sigma,nu] #  1 1 2 2  

                 DO i 
	         where (int)SwOccA_frag[(index)i] == ifrag
                 DO j 
   	         where (int)SwOccA_frag[(index)j] == ifrag

                     GET                       TAO_ab[lambda,i,sigma,j] 
                     txixi[mu,i,nu,j]        = aoint[lambda,mu,sigma,nu]*TAO_ab[lambda,i,sigma,j] 
                     PUT T2AO_ab[mu,i,nu,j] += txixi[mu,i,nu,j] 

                 ENDDO j 
                 ENDDO i 

      ENDIF
      ENDPARDO ifrag, mu, nu, lambda, sigma


      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwVirtA_frag[(index)a1] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

#
# Add the WMEBJ term 
#
#     AA 
#

         GET                 Viabj[i,a,a1,i1]  
         GET                 Vaajj[a1,a,i,i1] 

         t2ppqq[i,a,a1,i1] = Viabj[i,a,a1,i1] 
         tppqq[a,i,a1,i1]  = t2ppqq[i,a,a1,i1] 

         t3ppqq[a1,a,i,i1] = Vaajj[a1,a,i,i1] 
         t1ppqq[a,i,a1,i1] = t3ppqq[a1,a,i,i1] 

         tppqq[a,i,a1,i1] -= t1ppqq[a,i,a1,i1]  

         DO b 
	 where (int)SwVirtA_frag[(index)b] == ifrag
         DO j 
	 where (int)SwOccA_frag[(index)j] == ifrag
               GET                   T2old_mono[a1,i1,b,j] 
               xaiai[a,i,b,j]      = tppqq[a,i,a1,i1]*T2old_mono[a1,i1,b,j]  
               t2ppqq[b,j,a,i]     = xaiai[a,i,b,j] 
               PUT T2new[a,i,b,j] += xaiai[a,i,b,j] 
               PUT T2new[b,j,a,i] += t2ppqq[b,j,a,i] 
         ENDDO j 
         ENDDO b 

      ENDIF
      ENDPARDO ifrag, a, i, a1, i1


      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	where (int)SwVirtA_frag[(index)a1] == ifrag
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

#
#     AB 
#

         GET                 T2old_mono[a1,i1,a,i] 
         GET                 T2old_mono[a1,i,a,i1]  

         tppqq[a1,i1,a,i]  = T2old_mono[a1,i1,a,i] 
         t3ppqq[a1,i,a,i1] = T2old_mono[a1,i,a,i1]  
         t1ppqq[a1,i1,a,i] = t3ppqq[a1,i,a,i1]  

         tppqq[a1,i1,a,i] -= t1ppqq[a1,i1,a,i]  
         t2ppqq[a1,i1,i,a] = tppqq[a1,i1,a,i] 

         DO b 
	 where (int)SwVirtA_frag[(index)b] == ifrag
         DO j 
	 where (int)SwOccA_frag[(index)j] == ifrag
               GET                     Viabj[i,a,b,j] 
               xaiai[a1,i1,b,j]      = t2ppqq[a1,i1,i,a]*Viabj[i,a,b,j]  
               t3ppqq[b,j,a1,i1]     = xaiai[a1,i1,b,j] 

               PUT T2new[a1,i1,b,j] += xaiai[a1,i1,b,j] 
               PUT T2new[b,j,a1,i1] += t3ppqq[b,j,a1,i1] 
         ENDDO j 
         ENDDO b 

      ENDIF
      ENDPARDO ifrag, a, i, a1, i1


      PARDO ifrag, a, i1, b1, j "Frag{i}{vovo}{}"
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwOccA_frag[(index)j] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag
	where (int)SwVirtA_frag[(index)b1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

#
#     AB 
#

         GET                 T2old_mono[a,i1,b1,j] 
         t1ppqq[a,i1,b1,j] = T2old_mono[a,i1,b1,j] 

         DO b 
	 where (int)SwVirtA_frag[(index)b] == ifrag
         DO i 
	 where (int)SwOccA_frag[(index)i] == ifrag
               GET                   Vaajj[b,b1,i1,i] 
               xaiai[a,i,b,j]      = t1ppqq[a,i1,b1,j]*Vaajj[b,b1,i1,i]   
               xaiai[a,i,b,j]     *= -1.0  
               t3ppqq[b,j,a,i]     = xaiai[a,i,b,j] 

               PUT T2new[a,i,b,j] += xaiai[a,i,b,j] 
               PUT T2new[b,j,a,i] += t3ppqq[b,j,a,i] 
         ENDDO i 
         ENDDO b 

      ENDIF
      ENDPARDO ifrag, a, i1, b1, j


      PARDO ifrag, a, i1, b, j1 "Frag{i}{vovo}{}"
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwVirtA_frag[(index)b] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag
	where (int)SwOccA_frag[(index)j1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

#
#     v^2 o^4 term  
#

         GET                 T2old_mono[a,i1,b,j1] 
         t1ppqq[a,i1,b,j1] = T2old_mono[a,i1,b,j1] 

         DO i 
	 where (int)SwOccA_frag[(index)i] == ifrag
         DO j 
	 where (int)SwOccA_frag[(index)j] == ifrag
               GET                   Viijj[i1,i,j1,j] 
               tppqq[i1,i,j1,j]    = Viijj[i1,i,j1,j] 
               xaiai[a,i,b,j]      = t1ppqq[a,i1,b,j1]*tppqq[i1,i,j1,j]  
               PUT T2new[a,i,b,j] += xaiai[a,i,b,j] 
         ENDDO j 
         ENDDO i 

      ENDIF
      ENDPARDO ifrag, a, i1, b, j1

      server_barrier

      PARDO ifrag, nu, i, j "Frag{i}{aoo}{}"
	where (int)SwAO_frag[(index)nu] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwOccA_frag[(index)j] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

# 
#    Perform final transformation of LADDER contribution
#    ---------------------------------------------------
#

              DO a
	      where (int)SwVirtA_frag[(index)a] == ifrag
                    allocate LDaixj[a,i,nu,j]
              ENDDO a
#
              DO mu
	      where (int)SwAO_frag[(index)mu] == ifrag
#
                 GET                T2AO_ab[mu,i,nu,j] 
                 txixj[mu,i,nu,j] = T2AO_ab[mu,i,nu,j] 
#
                 DO a
	         where (int)SwVirtA_frag[(index)a] == ifrag
                       Taixj[a,i,nu,j]   = txixj[mu,i,nu,j]*ca[mu,a]
                       LDaixj[a,i,nu,j] += Taixj[a,i,nu,j]
                 ENDDO a

              ENDDO mu

              DO a
	      where (int)SwVirtA_frag[(index)a] == ifrag
              DO b
	      where (int)SwVirtA_frag[(index)b] == ifrag
                 Tppqq[a,i,b,j]      = LDaixj[a,i,nu,j]*ca[nu,b]
                 PUT T2new[a,i,b,j] += Tppqq[a,i,b,j]
              ENDDO b
              ENDDO a
#
              DO a
	      where (int)SwVirtA_frag[(index)a] == ifrag
                    deallocate LDaixj[a,i,nu,j]
              ENDDO a

      ENDIF
      ENDPARDO ifrag, nu, i, j
      
      server_barrier


      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwVirtA_frag[(index)a1] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag

         GET     e2error[ifrag] 
	 etemp = e2error[ifrag]
         if etemp < zero  
            etemp *= -1.0 
         endif 

      IF etemp > cc_conv 
         do_iter = 1.0 

#
# Form the new ampllitude 
#

              GET                        T2new[a,i,a1,i1] 
              tppqq[a,i,a1,i1]         = T2new[a,i,a1,i1] 
              execute energy_denominator_rhf tppqq[a,i,a1,i1] fock_a  
              PUT T2old_mono[a,i,a1,i1] = tppqq[a,i,a1,i1] 

      ENDIF
      ENDPARDO ifrag, a, i, a1, i1


      server_barrier
      pardo ifrag
        PUT e20c[ifrag] = 0.0
      endpardo ifrag
      server_barrier
      esum = 0.0
      PARDO ifrag, a, i, a1, i1 "Frag{i}{vovo}{}"
	where (int)SwVirtA_frag[(index)a] == ifrag
	where (int)SwOccA_frag[(index)i] == ifrag
	where (int)SwVirtA_frag[(index)a1] == ifrag
	where (int)SwOccA_frag[(index)i1] == ifrag

         do_iter = 1.0 

# Form the new energy 

               GET                T2old_mono[a,i,a1,i1] 
               GET                Vaibj[a,i,a1,i1]  
               GET                Vaibj[a,i1,a1,i]  

               t1ppqq[a,i,a1,i1] = Vaibj[a,i,a1,i1]  
               t3ppqq[a,i1,a1,i] = Vaibj[a,i1,a1,i]  
               t2ppqq[a,i,a1,i1] = t3ppqq[a,i1,a1,i] 
               t1ppqq[a,i,a1,i1]*= 2.0  
               t1ppqq[a,i,a1,i1]-= t2ppqq[a,i,a1,i1] 

               etemp = T2old_mono[a,i,a1,i1]*t1ppqq[a,i,a1,i1] 
	       esum += etemp

               PUT e20c[ifrag] += etemp

      ENDPARDO ifrag, a, i, a1, i1
      sip_barrier 

      PARDO ifrag 
         GET                  e20c[ifrag] 
         GET                  e20c_old[ifrag] 
         tp[ifrag]          = e20c_old[ifrag]  
         tp[ifrag]         -= e20c[ifrag]  
         PUT e2error[ifrag] = tp[ifrag] 
         PUT e20c_old[ifrag]= e20c[ifrag] 
      ENDPARDO ifrag 
      sip_barrier 
#
# -----------------------------------------------------------------------------
#     END OF FRAGMENT ITERATIONS 
# -----------------------------------------------------------------------------
      elccd = 0.0
      sip_barrier
      collective elccd += esum
      sip_barrier

      print elccd
      escr = elccd - eold
      ediff = (escr**2.0)**0.5
      if ediff < cc_conv
	  exit #kiter
      endif
      eold = elccd
#
      ENDDO kiter 
      mono_lccd = 0.0 
      esum = 0.0 
      sip_barrier
#
      print "Final CCPT2 energy of MONOMER" 
      execute get_my_rank rank
      if rank == 0.0
      do ifrag
         GET                        e20c[ifrag] 
         monomer_lccd[ifrag:ifrag] = e20c[ifrag]  
	 print monomer_lccd[ifrag:ifrag]
         etemp = e20c[ifrag] 
         esum -= etemp 
      enddo ifrag
      endif
      sip_barrier
      collective mono_lccd += esum  
#
# -----------------------------------------------------------------------------
#     END OF T2 MONOMER CALCULATIONS  
# -----------------------------------------------------------------------------
# 
      ENDPROC FORM_T2_MONOMER  
#
# ----------------------------------------------------------------------------
#
      PROC DOUBLES_MANAGER
#
#     Compute the CCPT(2) dimer_doubles amplitudes for Fragment 1.  
#     ------------------------------------------------------ 
      CALL FORM_T2_0GUESS 
      sip_barrier 
      print "Done forming T2_0guess" 

# allocate energy arrays all at once.
     execute get_my_rank rank
     if rank == 0.0
     DO ifrag
	allocate contiguous macro_e20[ifrag:ifrag]
	allocate contiguous monomer_lccd[ifrag:ifrag]
     ENDDO ifrag   
     do ifrag
     do jfrag
     WHERE jfrag > ifrag 
     where (int)rcut_dist[ifrag,jfrag] == ifrag
	 allocate contiguous macro_d20[ifrag:ifrag,jfrag:jfrag]
     enddo jfrag
     enddo ifrag
     endif
      sip_barrier 
#
# Start macro-iterations 
      DO jiter 
         sip_barrier 
	 print " "
	 print "------------------------------------------------------"
	 print "Macro iteration"
	 print jiter
	 print " "

         PARDO ifrag 
           GET                   e20c[ifrag] 
           PUT e2_macro[ifrag] = e20c[ifrag] 
         ENDPARDO ifrag  

         sip_barrier 
         CALL FORM_T2_GUESS 
         sip_barrier 
	 print "Entering FORM_T2_FRAGMENT_ITERS"
         CALL FORM_T2_FRAGMENT_ITERS 
         sip_barrier 
	 print " "
	 print "Entering FORM_T2_DIMER_ITERS"
         CALL FORM_T2_DIMER_ITERS 
         esum = 0.0 
         sip_barrier 

# Print out energies after each macroiteration  
         execute get_my_rank rank
         if rank == 0.0
	 print " "
         print "MCPT(2) monomer macro-iteration energies"
	 fragment_doubles = 0.0
         DO ifrag
            GET                 e20c[ifrag] 
            macro_e20[ifrag:ifrag]  = e20c[ifrag] 
            print macro_e20[ifrag:ifrag] 
            etemp = e20c[ifrag] 
            fragment_doubles += etemp 
         ENDDO ifrag   

	 print " "
         print "MCPT(2) dimer macro-iteration energies"
	 do ifrag
	 do jfrag
	 WHERE jfrag > ifrag 
	 where (int)rcut_dist[ifrag,jfrag] == ifrag
		 get d20c[ifrag,jfrag]
		 macro_d20[ifrag:ifrag,jfrag:jfrag] = d20c[ifrag,jfrag]
		 print macro_d20[ifrag:ifrag,jfrag:jfrag]
	 enddo jfrag
	 enddo ifrag
         endif

# Determine if full macro convergence is met 
         do_iter = 0.0 
         DO ifrag 
           GET          e20c[ifrag] 
           GET          e2_macro[ifrag] 
           tp[ifrag]  = e20c[ifrag]  
           tp[ifrag] -= e2_macro[ifrag]  
	   etemp = tp[ifrag]
	   etemp2 = (etemp**2.0)**0.5
           IF etemp2 > cc_conv 
              do_iter = 2.0 
           ENDIF 
         ENDDO ifrag 
         sip_barrier 
         print dimer_doubles  
         print fragment_doubles  
         sip_barrier 
         if do_iter < 1.0 
            exit 
         endif 
#
      ENDDO jiter 
      sip_barrier
#
# Compute the LCCD amplitudes for each monomer

      CALL FORM_T2_MONOMER  

      sip_barrier

      ENDPROC DOUBLES_MANAGER
#
# ----------------------------------------------------------------------------
ENDSIAL mcpt2_doubles
##
################################################################################
