import "mcpt2_defs.sialx" 
import "mcpt2_vars.sialx"
import "mcpt2_util.sialx"
import "mcpt2_doubles.sialx"
#
                           SIAL FRAG_2ORDER_CORR 
#
# -----------------------------------------------------------------------------
# 
PROC FRAG_TRAN_NO_WC
#     -------------- 

sip_barrier

# ---------------------------------------------------------------------------- 
#     First stage --> form Vxxxj (1122) 
# ---------------------------------------------------------------------------- 

PARDO ifrag, jfrag, mu, nu, lambda "Frag{ij}{aa}{a}"

    DO j 
    where (int)SwMOA_frag[(index)j] == jfrag
	  allocate LVxxxq[mu,nu,lambda,j] 
    ENDDO j 

    DO sigma 
    where (int)SwAO_frag[(index)sigma] == jfrag

	  aoint[mu,nu,lambda,sigma]  = 0.0 
	  execute compute_integral_batch aoint[mu,nu,lambda,sigma] #  1 1 2 2  

	  DO j 
	  where (int)SwMOA_frag[(index)j] == jfrag
	      txxxq[mu,nu,lambda,j]   = aoint[mu,nu,lambda,sigma]*ca[sigma,j] 
	      LVxxxq[mu,nu,lambda,j] += txxxq[mu,nu,lambda,j] 
	  ENDDO j 
    ENDDO sigma 

    DO j 
    where (int)SwMOA_frag[(index)j] == jfrag

        put Vxxxq[mu,nu,lambda,j] = LVxxxq[mu,nu,lambda,j]

    ENDDO j 

    DO j 
    where (int)SwMOA_frag[(index)j] == jfrag
	  deallocate LVxxxq[mu,nu,lambda,j] 
    ENDDO j 

ENDPARDO ifrag, jfrag, mu, nu, lambda

print "Done first stage of two-electron integral transformation" 
sip_barrier

PARDO ifrag, jfrag, mu, nu, lambda "Frag{ij}{aa}{a}"
    DO j 
    where (int)SwMOA_frag[(index)j] == jfrag
          get Vxxxq[mu,nu,lambda,j]
	  DO i1 
	  where (int)SwMOA_frag[(index)i1] == ifrag
	      txpxq[mu,i1,lambda,j]      = Vxxxq[mu,nu,lambda,j]*ca[nu,i1] 
	      PUT Vxpxq[mu,i1,lambda,j] += txpxq[mu,i1,lambda,j] 
	  ENDDO i1 
    ENDDO j 
ENDPARDO ifrag, jfrag, mu, nu, lambda

PARDO ifrag, jfrag, mu, nu, lambda "Frag{ij}{aa}{a}"
    DO j 
    where (int)SwMOA_frag[(index)j] == jfrag
          get Vxxxq[mu,nu,lambda,j]
	  DO i1 
	  where (int)SwMOA_frag[(index)i1] == ifrag
	      tpxxq[i1,nu,lambda,j]      = Vxxxq[mu,nu,lambda,j]*ca[mu,i1] 
	      PUT Vpxxq[i1,nu,lambda,j] += tpxxq[i1,nu,lambda,j] 
	  ENDDO i1 
    ENDDO j 
ENDPARDO ifrag, jfrag, mu, nu, lambda

PARDO ifrag, jfrag, mu, nu, lambda "Frag{ij}{aa}{a}"
    DO j 
    where (int)SwMOA_frag[(index)j] == jfrag
          get Vxxxq[mu,nu,lambda,j]
	  DO j1  
	  where (int)SwMOA_frag[(index)j1] == jfrag
	      txxqq[mu,nu,j1,j]      = Vxxxq[mu,nu,lambda,j]*ca[lambda,j1] 
	      PUT Vxxqq[mu,nu,j1,j] += txxqq[mu,nu,j1,j] 
	  ENDDO j1  
    ENDDO j 
ENDPARDO ifrag, jfrag, mu, nu, lambda

PARDO ifrag, jfrag, mu, nu, lambda "Frag{ij}{aa}{a}"
    DO j 
    where (int)SwMOA_frag[(index)j] == jfrag
	get Vxxxq[mu,nu,lambda,j]
	DO a1
	where (int)SwMOA_frag[(index)a1] == jfrag
	    txxqq[mu,nu,a1,j]= Vxxxq[mu,nu,lambda,j]*ca[lambda,a1] 
	    PUT Vxxai[mu,nu,a1,j] += txxqq[mu,nu,a1,j] 
	ENDDO a1
    ENDDO j 
ENDPARDO ifrag, jfrag, mu, nu, lambda

sip_barrier 
print "Done second stage"

# ---------------------------------------------------------------------------- 
#     Third stage --> form Vxibj (1122) 
# ---------------------------------------------------------------------------- 

PARDO ifrag, jfrag, mu, i, lambda, j "Frag{ij}{ao}{ao}"

    GET                    Vxpxq[mu,i,lambda,j] 
    DO b 
    where (int)SwMOA_frag[(index)b] == jfrag
	txpqq[mu,i,b,j]      = Vxpxq[mu,i,lambda,j]*ca[lambda,b] 
	PUT Vxpbq[mu,i,b,j] += txpqq[mu,i,b,j] 
    ENDDO b 

ENDPARDO ifrag,jfrag, mu, i, lambda, j

# ---------------------------------------------------------------------------- 
#     Third stage --> form Vixbj (1122) 
# ---------------------------------------------------------------------------- 
#
PARDO ifrag, jfrag, nu, i, lambda, j "Frag{ij}{ao}{ao}"

    GET                    Vpxxq[i,nu,lambda,j] 

    DO b 
    where (int)SwMOA_frag[(index)b] == jfrag
	tpxqq[i,nu,b,j]      = Vpxxq[i,nu,lambda,j]*ca[lambda,b] 
	PUT Vixbj[i,nu,b,j] += tpxqq[i,nu,b,j] 
    ENDDO b 

    DO j1 
    where (int)SwMOA_frag[(index)j1] == jfrag
	tpxqq[i,nu,j1,j]      = Vpxxq[i,nu,lambda,j]*ca[lambda,j1] 
	PUT Vixjj[i,nu,j1,j] += tpxqq[i,nu,j1,j] 
    ENDDO j1  
ENDPARDO ifrag,jfrag, nu, i, lambda, j
#
PARDO ifrag, jfrag, nu, mu, j, j1 "Frag{ij}{aa}{oo}"

    GET                 Vxxqq[mu,nu,j1,j] 

    DO a 
    where (int)SwMOA_frag[(index)a] == ifrag
	tpxqq[a,nu,j1,j]      = Vxxqq[mu,nu,j1,j]*ca[mu,a] 
	PUT Vaxjj[a,nu,j1,j] += tpxqq[a,nu,j1,j] 
    ENDDO a 

ENDPARDO ifrag,jfrag, nu, mu, j, j1

PARDO ifrag, jfrag, mu, nu, b, j "Frag{ij}{aa}{vo}"

    get Vxxai[mu,nu,b,j]

    do a1
    where (int)SwMOA_frag[(index)a1] == ifrag
	tpxqq[a1,nu,b,j]= Vxxai[mu,nu,b,j]*ca[mu,a1]
	PUT Vaxaj[a1,nu,b,j] += tpxqq[a1,nu,b,j]
    enddo a1

ENDPARDO ifrag, jfrag, mu, nu, b, j

print "Done third stage"
sip_barrier 

# ---------------------------------------------------------------------------- 
#     Fourth stage --> form Vaibj (1122) 
# ---------------------------------------------------------------------------- 

PARDO ifrag, jfrag, mu, i, b, j "Frag{ij}{ap}{pp}"

GET               Vxpbq[mu,i,b,j] 

DO a 
where (int)SwMOA_frag[(index)a] == ifrag
tppqq[a,i,b,j]      = Vxpbq[mu,i,b,j]*ca[mu,a] 
PUT Vaibj[a,i,b,j] += tppqq[a,i,b,j] 
ENDDO a 

ENDPARDO ifrag, jfrag, mu, i, b, j

# ---------------------------------------------------------------------------- 
#     Fourth stage --> form Viabj (1122) 
# ---------------------------------------------------------------------------- 
PARDO ifrag, jfrag, nu, i, b, j  "Frag{ij}{ap}{pp}"

    GET               Vixbj[i,nu,b,j]  

    DO a 
    where (int)SwMOA_frag[(index)a] == ifrag
	tppqq[i,a,b,j]      = Vixbj[i,nu,b,j]*ca[nu,a] 
	PUT Viabj[i,a,b,j] += tppqq[i,a,b,j] 
    ENDDO a 

ENDPARDO ifrag,jfrag, nu, i, b, j

PARDO ifrag, jfrag, nu, a, j, j1 "Frag{ij}{ap}{pp}"

    GET                Vaxjj[a,nu,j1,j] 

    DO a1 
    where (int)SwMOA_frag[(index)a1] == ifrag
	tppqq[a,a1,j1,j]      = Vaxjj[a,nu,j1,j]*ca[nu,a1] 
	PUT Vaajj[a,a1,j1,j] += tppqq[a,a1,j1,j] 
    ENDDO a1 

ENDPARDO ifrag,jfrag, nu, a, j, j1

# ---------------------------------------------------------------------------- 
#     Fourth stage --> form Viijj (1122) 
# ---------------------------------------------------------------------------- 
#
PARDO ifrag, jfrag, nu, i, j, j1  "Frag{ij}{ap}{pp}"

    GET                Vixjj[i,nu,j1,j] 

    DO i1 
    where (int)SwMOA_frag[(index)i1] == ifrag
	tppqq[i,i1,j1,j]      = Vixjj[i,nu,j1,j]*ca[nu,i1] 
	PUT Viijj[i,i1,j1,j] += tppqq[i,i1,j1,j] 
    ENDDO i1 

ENDPARDO ifrag, jfrag, nu, i, j, j1

PARDO ifrag, jfrag, nu, i, j, j1  "Frag{ij}{ap}{pp}"

    GET          Vixjj[i,nu,j1,j] 

    DO a1 
    where (int)SwMOA_frag[(index)a1] == ifrag
	tppqq[i,a1,j1,j]= Vixjj[i,nu,j1,j]*ca[nu,a1] 
	PUT Viaii[i,a1,j1,j] += tppqq[i,a1,j1,j] 
    ENDDO a1 

ENDPARDO ifrag, jfrag, nu, i, j, j1

PARDO ifrag, jfrag, nu, a, b, j "Frag{ij}{ap}{pp}"

    get Vaxaj[a,nu,b,j]

    do a1
    where (int)SwMOA_frag[(index)a1] == ifrag
	tppqq[a,a1,b,j]= Vaxaj[a,nu,b,j]*ca[nu,a1]
	PUT Vaaai[a,a1,b,j] += tppqq[a,a1,b,j]
    enddo a1

ENDPARDO ifrag, jfrag, nu, a, b, j

print "Done fourth stage"

      sip_barrier 
#
      ENDPROC FRAG_TRAN_NO_WC
#
# Form guess to second-order singles from T2 contributions
#
    PROC form_t1_secondorder_guess

    print " "
    print "------------------------------------------------------"
    print " "
    print "Forming guess to second-order T1 amplitudes"
    print " "
    server_barrier

#
# 3v monomer
#
    pardo ifrag, a, a1, a2, i1 "Frag{i}{pppp}{}"
    
	get Vaaai[a1,a,a2,i1]

	do i
	where (int)SwMOA_frag[(index)i] == ifrag
	    get T2old[a1,i,a2,i1]
	    get T2old[a2,i,a1,i1]

	    Taibj[a1,i,a2,i1]  = T2old[a1,i,a2,i1]
	    Taibj[a1,i,a2,i1] *= 2.0
	    T1aibj[a1,i,a2,i1] = T2old[a2,i,a1,i1]
	    Taibj[a1,i,a2,i1] -= T1aibj[a1,i,a2,i1]

	    Tai[a,i] = Vaaai[a1,a,a2,i1]*Taibj[a1,i,a2,i1]

	    put Mck_a[a,i] += Tai[a,i]
	enddo i
    endpardo ifrag, a, a1, a2, i1
#
# 3o monomer 
#
    pardo ifrag, a2,i2,i,i1 "Frag{i}{pppp}{}"

        get Viaii[i2,a2,i,i1]

	do a1
	where (int)SwMOA_frag[(index)a1] == ifrag

	    get T2old[a1,i1,a2,i2]
	    get T2old[a1,i2,a2,i1]

	    Taibj[a1,i1,a2,i2]  = T2old[a1,i1,a2,i2]
	    Taibj[a1,i1,a2,i2] *= 2.0
	    T1aibj[a1,i1,a2,i2] = T2old[a1,i2,a2,i1]
	    Taibj[a1,i1,a2,i2] -= T1aibj[a1,i1,a2,i2]

	    Tai[a1,i] = Viaii[i2,a2,i,i1]*Taibj[a1,i1,a2,i2]
	    Tai[a1,i] *= -1.0
	    
	    put Mck_a[a1,i] += Tai[a1,i]
	enddo a1
    endpardo ifrag, a2,i2,i,i1
#
# 3v dimer
#
    pardo ifrag,jfrag, a, a1, a2, i1 "Frag{NRij}{pp}{pp}"
    
	get Vaaai[a1,a,a2,i1]

	do i
	where (int)SwMOA_frag[(index)i] == ifrag
	    get T2old[a1,i,a2,i1]

	    Tai[a,i] = Vaaai[a1,a,a2,i1]*T2old[a1,i,a2,i1]
	    Tai[a,i] *= 2.0

	    put Mck_a[a,i] += Tai[a,i]
	enddo i
    endpardo ifrag,jfrag, a, a1, a2, i1
#
# 3o dimer
#
    pardo ifrag,jfrag, i,i1,a2,i2 "Frag{NRij}{pp}{pp}"

        get Viaii[i2,a2,i,i1]

	do a1
	where (int)SwMOA_frag[(index)a1] == ifrag

	    get T2old[a1,i1,a2,i2]

	    Tai[a1,i] = Viaii[i2,a2,i,i1]*T2old[a1,i1,a2,i2]
	    Tai[a1,i] *= -2.0
	    
	    put Mck_a[a1,i] += Tai[a1,i]
	enddo a1
    endpardo ifrag,jfrag, i,i1,a2,i2

    server_barrier
    pardo ifrag
        put p2t1_norm[ifrag] = 0.0
        put p2t1_norm_old[ifrag] = 0.0
        put p2t1_norm_delta[ifrag] = 0.0
    endpardo ifrag

    server_barrier
# t1(2) guess
    esum = 0.0
    pardo ifrag,a,i "Frag{i}{pp}{}"

	get Mck_a[a,i]
	Tai[a,i] = Mck_a[a,i]
	execute energy_denominator_rhf Tai[a,i] fock_a
	T1ai[a,i] = tai[a,i]
	put p2t1old[a,i] = Tai[a,i]

	etemp2 = tai[a,i]*t1ai[a,i]

	put p2t1_norm[ifrag] += etemp2
	put p2t1_norm_old[ifrag] += etemp2
	put p2t1_norm_delta[ifrag] += etemp2
    endpardo ifrag,a,i
    server_barrier

    PARDO ifrag, a, i "Frag{i}{pp}{}"
	    PUT p2t1new[a,i] = 0.0
    ENDPARDO ifrag, a, i

    server_barrier
    ENDPROC form_t1_secondorder_guess

    PROC form_t1_secondorder

    call form_t1_secondorder_guess

    print "Starting second-order t1 iterations"
    sip_barrier 

    DO jiter
    print jiter
    server_barrier

    PARDO ifrag, a, i "Frag{i}{pp}{}"

	GET     p2t1_norm_delta[ifrag] 
	etemp = p2t1_norm_delta[ifrag] 
	if etemp < zero  
	    etemp *= -1.0 
	endif 

	IF etemp > cc_conv 
	    PUT p2t1new[a,i] = 0.0
	endif

    ENDPARDO ifrag, a, i

    server_barrier

#
# monomer ring term
#
    PARDO ifrag, a, i, a1, i1 "Frag{i}{pppp}{}"

	GET     p2t1_norm_delta[ifrag] 
	etemp = p2t1_norm_delta[ifrag] 
	if etemp < zero  
	    etemp *= -1.0 
	endif 

	IF etemp > cc_conv 

	t1ai[a,i] = 0.0 

	GET Viabj[i,a,a1,i1]  
	GET Vaajj[a,a1,i,i1] 
	GET     p2t1old[a1,i1] 

	tppqq[i,a,a1,i1]  = Viabj[i,a,a1,i1] 

	t2ppqq[a,a1,i,i1] = Vaajj[a,a1,i,i1] 
	t1ppqq[i,a,a1,i1] = t2ppqq[a,a1,i,i1] 

	tppqq[i,a,a1,i1] *= 2.0  
	tppqq[i,a,a1,i1] -= t1ppqq[i,a,a1,i1]

	tai[a,i] = tppqq[i,a,a1,i1]*p2t1old[a1,i1]
	t1ai[a,i] += tai[a,i]  

	PUT p2t1new[a,i] += t1ai[a,i] 

	ENDIF # etemp > cc_conv 

    ENDPARDO ifrag, a, i, a1, i1
#
# dimer ring term
#
    PARDO ifrag, jfrag, a, i, a1, i1 "Frag{NRij}{pp}{pp}"

	GET     p2t1_norm_delta[ifrag] 
	etemp = p2t1_norm_delta[ifrag] 
	if etemp < zero  
	    etemp *= -1.0 
	endif 

	IF etemp > cc_conv 


	    GET Viabj[i,a,a1,i1]  
	    GET p2t1old[a1,i1] 

	    tppqq[i,a,a1,i1]  = Viabj[i,a,a1,i1] 
	    tppqq[i,a,a1,i1] *= 2.0  
	    tai[a,i] = tppqq[i,a,a1,i1]*p2t1old[a1,i1]

	    PUT p2t1new[a,i] += tai[a,i] 

	ENDIF # etemp > cc_conv 

    ENDPARDO ifrag, jfrag, a, i, a1, i1
#
# done with forming new second-order singles amplitude
#
    sip_barrier 
    pardo ifrag
	put e3m1[ifrag] = 0.0
	put p2t1_norm[ifrag] = 0.0
    endpardo ifrag
    sip_barrier 

    PARDO ifrag, a, i "Frag{i}{pp}{}"

	GET        p2t1new[a,i] 
	tai[a,i] = p2t1new[a,i] 
	execute energy_denominator_rhf tai[a,i] fock_a  
	t1ai[a,i] = tai[a,i]
	PUT p2t1old[a,i] = tai[a,i] 

	etemp2 = tai[a,i]*t1ai[a,i]

	put p2t1_norm[ifrag] += etemp2

    ENDPARDO ifrag, a, i
    sip_barrier 
    esum2 = 0.0
    PARDO ifrag 
	GET                   p2t1_norm[ifrag] 
	GET                   p2t1_norm_old[ifrag] 
	etemp2              = p2t1_norm_old[ifrag]  
	etemp2             -= p2t1_norm[ifrag]  
	PUT p2t1_norm_delta[ifrag]  = etemp2
	esum2 += (etemp2**2.0)**0.5
    ENDPARDO ifrag 
    sip_barrier 
    PARDO ifrag 
	get p2t1_norm[ifrag]
	put p2t1_norm_old[ifrag] = p2t1_norm[ifrag]
    ENDPARDO ifrag 
    sip_barrier 
    ediff = 0.0
    collective ediff += esum2
    print ediff
    if ediff < cc_conv
	exit
    endif
#
    ENDDO jiter
    print "Done second-order singles T1" 
    sip_barrier 

##
    ENDPROC form_t1_secondorder
#
# -----------------------------------------------------------------------------
# 
      PROC FEF_END_PRINT
      server_barrier
      print " "
      print "------------------------------------------------------"
      print " "
      restore_persistent gas_scf_energy "total_gas_scf_energy"
      restore_persistent pol_scf_energy "frag_pol_scf_energy"
      restore_persistent total_scf_exchange "total_scf_exchange"
      total_scf_energy  = pol_scf_energy
      total_scf_energy += total_scf_exchange

# with the polarization SCF reference, there cannot be any GAS phase lccd result computed in this code.
#      eint_tot  = gas_scf_energy
#      eint_tot *= -1.0
#      eint_tot += total_scf_energy
#      eint_tot += dimer_doubles  
#      eint_tot += fragment_doubles  
#      eint_tot += mono_lccd   

      fef_ccpt_corr  = dimer_doubles  
      fef_ccpt_corr += fragment_doubles  

      print pol_scf_energy
      print total_scf_exchange
      print total_scf_energy
      print " "

      print dimer_doubles
      print fragment_doubles
      print fef_ccpt_corr
      print " "

      fef_total_energy  = total_scf_energy
      fef_total_energy + fef_ccpt_corr
      print fef_total_energy
      print " "
      print "-----------"

#      mono_lccd *= -1.0
#      print mono_lccd  
#      print " "

#      print eint_tot 
      sip_barrier

      ENDPROC FEF_END_PRINT

PROC FORM_JFRAG_HBAR
    server_barrier
    pardo fi,fi1
	put HBAR_ii[fi,fi1] = 0.0
    endpardo fi,fi1
    PARDO fa, fa1
	put HBAR_aa[fa,fa1] = 0.0
    ENDPARDO fa, fa1
    PARDO fi1,fa1,fa,fi
	    put HBAR_AJIB[fi1,fa1,fa,fi] = 0.0
    ENDPARDO fi1,fa1,fa,fi
    PARDO fi1,fi2,fa,fi
	put HBAR_IAJK[fi1,fi2,fa,fi] = 0.0
    ENDPARDO fi1,fi2,fa,fi
    PARDO fa1,fa2,fa,fi
	put HBAR_ABCI[fa1,fa2,fa,fi] = 0.0
    ENDPARDO fa1,fa2,fa,fi
    server_barrier

#-----------
    PARDO ifrag, jfrag, fi, fi1, b, j "Frag{NRij}{pp}{pp}"
    where ifrag != jfrag
    where (int)rcut_dist[ifrag,jfrag] == ifrag
    where (int)SwOccA_frag[(index)fi] == ifrag
    where (int)SwOccA_frag[(index)fi1] == ifrag
    where (int)SwVirtA_frag[(index)b] == jfrag
    where (int)SwOccA_frag[(index)j] == jfrag
	do fa1
	    where (int)SwVirtA_frag[(index)fa1] == ifrag

	    get Vaibj[fa1,fi1,b,j]
	    get T2old[fa1,fi,b,j]

	    tpp[fi,fi1] = T2old[fa1,fi,b,j]*Vaibj[fa1,fi1,b,j]
# 2 for alpha + beta jfrag
	    tpp[fi,fi1] *= 2.0

	    put HBAR_ii[fi,fi1] += tpp[fi,fi1]

	enddo fa1

    ENDPARDO ifrag, jfrag, fi, fi1, b, j
#-----------
    PARDO ifrag, jfrag, fa, fa1, b, j "Frag{NRij}{pp}{pp}"
    where ifrag != jfrag
    where (int)rcut_dist[ifrag,jfrag] == ifrag
    where (int)SwVirtA_frag[(index)fa] == ifrag
    where (int)SwVirtA_frag[(index)fa1] == ifrag
    where (int)SwVirtA_frag[(index)b] == jfrag
    where (int)SwOccA_frag[(index)j] == jfrag
	do fi
	where (int)SwOccA_frag[(index)fi] == ifrag

	    get Vaibj[fa1,fi,b,j]
	    get T2old[fa,fi,b,j]

	    tpp[fa,fa1] = T2old[fa,fi,b,j]*Vaibj[fa1,fi,b,j] 
# 2 for alpha + beta jfrag
	    tpp[fa,fa1]  *= -2.0

	    put HBAR_aa[fa,fa1] += tpp[fa,fa1]

	enddo fi

    ENDPARDO ifrag, jfrag, fa, fa1, b, j
#-----------
    PARDO ifrag, jfrag, fa, fi, b, j "Frag{NRij}{pp}{pp}"
    where ifrag != jfrag
    where (int)rcut_dist[ifrag,jfrag] == ifrag
    where (int)SwVirtA_frag[(index)fa] == ifrag
    where (int)SwOccA_frag[(index)fi] == ifrag
    where (int)SwVirtA_frag[(index)b] == jfrag
    where (int)SwOccA_frag[(index)j] == jfrag

	get Vaibj[fa,fi,b,j]

	do fa1
	where (int)SwVirtA_frag[(index)fa1] == ifrag
	do fi1
	where (int)SwOccA_frag[(index)fi1] == ifrag

	    get T2old[fa1,fi1,b,j]

	    Tppqq[fi1,fa1,fa,fi] = T2old[fa1,fi1,b,j]*Vaibj[fa,fi,b,j]
# 2 for alpha + beta jfrag
	    Tppqq[fi1,fa1,fa,fi] *= 2.0

	    put HBAR_AJIB[fi1,fa1,fa,fi] += Tppqq[fi1,fa1,fa,fi]

	enddo fi1
	enddo fa1

    ENDPARDO ifrag, jfrag, fa, fi, b, j
#-----------
    PARDO ifrag, jfrag, fa, fi, b, j "Frag{NRij}{pp}{pp}"
    where ifrag != jfrag
    where (int)rcut_dist[ifrag,jfrag] == ifrag
    where (int)SwVirtA_frag[(index)fa] == ifrag
    where (int)SwOccA_frag[(index)fi] == ifrag
    where (int)SwVirtA_frag[(index)b] == jfrag
    where (int)SwOccA_frag[(index)j] == jfrag
	get T2old[fa,fi,b,j]

	do fi1
	where (int)SwOccA_frag[(index)fi1] == ifrag
	do fi2
	where (int)SwOccA_frag[(index)fi2] == ifrag

	get Viaii[j,b,fi1,fi2]
	T1ppqq[fi1,fi2,b,j] = Viaii[j,b,fi1,fi2]

	Tppqq[fi1,fi2,fa,fi]  = T1ppqq[fi1,fi2,b,j]*T2old[fa,fi,b,j]
# 2 for alpha + beta jfrag
	Tppqq[fi1,fi2,fa,fi] *= 2.0

	put HBAR_IAJK[fi1,fi2,fa,fi] += Tppqq[fi1,fi2,fa,fi]

	enddo fi2
	enddo fi1

    ENDPARDO ifrag, jfrag, fa, fi, b, j
#-----------
    PARDO ifrag, jfrag, fa, fi, b, j "Frag{NRij}{pp}{pp}"
    where ifrag != jfrag
    where (int)rcut_dist[ifrag,jfrag] == ifrag
    where (int)SwVirtA_frag[(index)fa] == ifrag
    where (int)SwOccA_frag[(index)fi] == ifrag
    where (int)SwVirtA_frag[(index)b] == jfrag
    where (int)SwOccA_frag[(index)j] == jfrag

	get T2old[fa,fi,b,j]

	do fa1
	where (int)SwVirtA_frag[(index)fa1] == ifrag
	do fa2
	where (int)SwVirtA_frag[(index)fa2] == ifrag

	get Vaaai[fa1,fa2,b,j]

	Tppqq[fa1,fa2,fa,fi] = Vaaai[fa1,fa2,b,j]*T2old[fa,fi,b,j]
# 2 for alpha + beta jfrag
	Tppqq[fa1,fa2,fa,fi] *= -2.0

	put HBAR_ABCI[fa1,fa2,fa,fi] += Tppqq[fa1,fa2,fa,fi]

	enddo fa2
	enddo fa1

    ENDPARDO ifrag, jfrag, fa, fi, b, j

###

    server_barrier
ENDPROC FORM_JFRAG_HBAR

PROC MOI_MANAGER
print "Forming HBAR elements"
call FORM_JFRAG_HBAR


server_barrier

    pardo fa, fi
        get p2t1old[fa,fi]
	put FP2T1old[fa,fi] = p2t1old[fa,fi]
    endpardo fa, fi

    pardo fa, fi, fa1, fi1

        get T2old[fa,fi,fa1,fi1]

	t1ppqq[fa,fi,fa1,fi1] = T2old[fa,fi,fa1,fi1]

	put FT2old[fa,fi,fa1,fi1] = t1ppqq[fa,fi,fa1,fi1]
	
    endpardo fa, fi, fa1, fi1

server_barrier
set_persistent FP2T1old "MOI_p2T1"
set_persistent FT2old "MOI_T2ab"
set_persistent HBAR_ii "MOI_HBAR_ii"
set_persistent HBAR_aa "MOI_HBAR_aa"
set_persistent HBAR_AJIB "MOI_HBAR_ajib"
set_persistent HBAR_IAJK "MOI_HBAR_iajk"
set_persistent HBAR_ABCI "MOI_HBAR_abci"
server_barrier
ENDPROC MOI_MANAGER
#
# -----------------------------------------------------------------------------
# 
#     START OF MAIN PROGRAM  
#
# -----------------------------------------------------------------------------

print " "
print "-- Fragment Effective Field Coupled-Cluster Perturbation Theory"
print "-- Written by Jason N. Byrd, 2016"
print " "

# 
#     Set fragment parameters   
#     ----------------------- 
#
      sip_barrier
      restore_persistent Dca "ca" 
      restore_persistent DFock_a "fock_a"
      rmaster = 0
      do_nonhf = 0
      zero = 0.0 
      one  = 1.0 
      print r_thresh 
      print elst_thresh 
      mone = -1.0 
      print cc_conv 
      sip_barrier
#
      CALL SET_FRAG_PARMS   
      sip_barrier 
      print "Done setting fragment parameters" 
      call set_fock_mos
      sip_barrier 
      CALL FRAG_TRAN_NO_WC
#      sip_barrier 
#      call OVERLAP_EXCHANGE
      sip_barrier 
# compute the fef-ccpt2 first-order doubles amplitudes
      call DOUBLES_MANAGER

# compute the fef-ccpt2 second-order singles amplitudes
      call form_t1_secondorder
#
#
# with the polarization SCF reference, there cannot be any GAS phase lccd result computed in this code.
# Compute the LCCD amplitudes for each monomer
#      CALL FORM_T2_MONOMER  
# for now, we forgo the HBAR build
#      call MOI_MANAGER
      sip_barrier
      call FEF_END_PRINT
      sip_barrier

      set_persistent T2old "fef_t2old"
      set_persistent T2old_mono "fef_t2old_monomer"
      set_persistent fef_ccpt_corr "fef_ccpt_corr"
      sip_barrier

                           ENDSIAL FRAG_2ORDER_CORR 
##
###############################################################################
