import "tran_rhf_no4v_defs.sialx" 
#
SIAL tran_uhf_no4v
#
#***********************************************************
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#
# Declare indeces
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#
aoindex mu     = 1: norb
aoindex nu     = 1: norb
aoindex lambda = 1: norb
aoindex sigma  = 1: norb
#
moaindex i = baocc: eaocc
moaindex i1= baocc: eaocc
moaindex i2= baocc: eaocc
moaindex i3= baocc: eaocc
#
moaindex a = bavirt: eavirt
moaindex a1= bavirt: eavirt
moaindex a2= bavirt: eavirt
moaindex a3= bavirt: eavirt
#
moaindex j = baocc: eaocc
moaindex j1= baocc: eaocc
moaindex j2= baocc: eaocc
moaindex j3= baocc: eaocc
#
moaindex b = bavirt: eavirt
moaindex b1= bavirt: eavirt
moaindex b2= bavirt: eavirt
moaindex b3= bavirt: eavirt
#
moaindex p = baocc: eavirt
moaindex p1= baocc: eavirt
moaindex p2= baocc: eavirt
moaindex p3= baocc: eavirt
#
moaindex q = baocc: eavirt
moaindex q1= baocc: eavirt
moaindex q2= baocc: eavirt
moaindex q3= baocc: eavirt

#
scalar srank
int myrank
int root
#
temp  tpipi [p,i,p1,i1]
temp  tiaia [i,a,i1,a1]
temp  tjbjb [j,b,j1,b1]
temp  tiajb [i,a,j ,b ]
temp  taibj [a,i,b ,j ]
temp  taibj1[a,i,b ,j ]
temp  tbjai[b,j,a,i]
temp  taiai [a,i,a1,i1]
temp  taiai1[a,i,a1,i1]
temp  tbjbj [b,j,b1,j1]
temp  tpppp [p,p1,q,q1] 

temp  tia  [i,a]
temp  tia1 [i,a]
temp  tia2 [i,a]
temp  tia3 [i,a]
temp  tai  [a,i]
temp  tai1 [a,i]
temp  tai2 [a,i]
temp  tjb  [j,b]
temp  tjb1 [j,b]
temp  tjb2 [j,b]
temp  tjb3 [j,b]
temp  tbj  [b,j]
temp  tbj2 [b,j]
temp  tbj3 [b,j]
temp  tii  [i1,i]
temp  tjj  [j1,j]
temp  taa  [a,a1]
temp  taa2 [a,a1]
temp  tbb  [b,b1]
temp  tbb2 [b,b1]

temp  tij[i,j]
temp  tii1 [i,i1]
temp  tii2 [i,i1]
temp  tjj1 [j,j1]
temp  tjj2 [j,j1]
temp  taa1 [a,a1]
temp  tbb1 [b,b1]

local  lai [a,i]
local  lbj [b,j]
local  lia [i,a]
local  ljb [j,b]
local  laa [a,a1]
local  lbb [b,b1]
local  lii [i,i1]
local  ljj [j,j1]
local  lxx [mu,nu]

temp  txx  [mu,nu]
temp  txx2 [mu,nu]
temp  txx3 [mu,nu]
temp  txi  [mu,i]
temp  txj  [mu,j]
temp  txa  [mu,a]
temp  txb  [mu,b]

served  Vaaii  [a,a1,i,i1]
served  Viaai  [i,a,a1,i1]
served  Vaaai  [a,a1,a2,i]

local  liaia  [i,a,i1,a1]
local  laiai  [a,i,a1,i1]
local  laibj  [a,i,b, j ]
local  liajb  [i,a,j, b ]
local  laiai2 [a,i,a1,i1]
local  laibj2 [a,i1,b,j ]
local  laiai3 [a,i,a1,i2]
local  laiai4 [a,i2,a1,i] 
local  laiai5 [a,i2,a1,i] 
local  laibj3 [a,i1,b, j]
local  laibj4 [a,j,b,i] 
local  laibj5 [a,j,b,i] 
local  lbiaj  [b,i,a,j] 
local  lbiaj2 [b,i,a,j] 

local  lbjbj  [b,j,b1,j1]
local  lbjbj2 [b,j,b1,j1]
local  lbjbj3 [b,j,b1,j2]
local  lbjbj4 [b,j2,b1,j] 
local  lbjbj5 [b,j2,b1,j] 

temp Txixj[lambda,i,sigma,j]
temp Txjxj[lambda,j,sigma,j1]
temp Txixi[lambda,i,sigma,i1]
temp Txiai[lambda,i,a1,i1]
temp Txjbj[lambda,j,b1,j1]
temp Txibj[lambda,i,b,j]
temp Taixi[a,i,nu,i1]
temp Tbjxj[b,j,nu,j1]
temp Taixj[a,i,nu,j]
temp  T3aiai[a,i,a1,i1]
temp  T4aiai[a,i,a1,i1]
temp  T3bjbj[b,j,b1,j1]
temp  T4bjbj[b,j,b1,j1]
temp  TSaiai[a,i,a1,i1]
temp  TSiaai[i,a,a1,i1]
temp  TS2iaai[i,a,a1,i1]
temp  TSbjbj[b,j,b1,j1]
temp  Taaii[a,a2,i,i2]
temp  T1aaii[a,a2,i,i2]
temp  Tbbjj[b,b1,j,j1]
temp  T2bbjj[b,b1,j,j1]
temp  T2aibj[a,i,b,j]
temp  T3aibj[a,i,b,j]
temp  T4aibj[a,i,b,j]
temp  T1ii[i,i1]
temp  T1jj[j,j1]
temp  Tdaa[a,a1]
temp  Tiijj[i,i1,j,j1]
temp  T1iijj[i,i1,j,j1]
temp  Tiiii[i,i1,i2,i3]
temp  T1iiii[i,i1,i2,i3]
temp  Tjjjj[j,j1,j2,j3]
temp  T1jjjj[j,j1,j2,j3]
temp  Taajj[a,a1,j,j1]
temp  T1aajj[a,a1,j,j1]
temp  Tbbii[b,b1,i,i1]
temp  T1bbii[b,b1,i,i1]
temp  R1aiai[a1,i1,a,i]
temp  R2aiai[a1,i,a,i1]
temp  R3aiai[a,i1,a1,i]
temp  R4aiai[a,i1,a1,i]
temp  R1bjbj[b1,j1,b,j]
temp  R2bjbj[b1,j,b,j1]
temp  R3bjbj[b,j1,b1,j]
temp  R4bjbj[b,j1,b1,j]
temp  t11ai[a,i]
temp  t1aa[a,a1]
temp  t11aa[a,a1]
temp  t1bb[b,b1]
temp  t11bb[b,b1]
temp  t111bb[b,b1]
temp  t2ia[i,a]
temp  t2jb[j,b]
temp  t1ia[i,a]
temp  t2ai[a,i]
temp  t3ai[a,i]
temp  t1jb[j,b]
temp  t2bj[b,j]
temp  t3bj[b,j]
temp  t11bj[b,j]
temp  Taaai[a,a2,a1,i]


SCALAR  ZERO
SCALAR  ONE
SCALAR  TWO
SCALAR  THREE
SCALAR  ONEHALF
SCALAR  tmpnuc
SCALAR  dipnuc
SCALAR  dipnucx
SCALAR  dipnucy
SCALAR  dipnucz
SCALAR  AMPLTHRESH
SCALAR  OMEGA
SCALAR  OMEGA2
SCALAR  OLD_R0
SCALAR  R0
SCALAR  L0
SCALAR  R0_THRESH
SCALAR  LOGRIGHT
SCALAR  GROUNDSTATE
SCALAR  EXCITESTATE
SCALAR  iroot
SCALAR  imomcount
SCALAR  rootcount
SCALAR  etemp
SCALAR  etemp1
SCALAR  etemp2
SCALAR  etemp3
SCALAR  etemp4
SCALAR  etemp5
SCALAR  etemp6
SCALAR  sum1
SCALAR  sum2
SCALAR  sum3
SCALAR  sum4
SCALAR  sum5
SCALAR  sum6
SCALAR  OSC_STREN
SCALAR  OSC_STREN1
SCALAR  OSC_STREN2
SCALAR  OSC_STREN3
SCALAR  OSC_STREN_X
SCALAR  OSC_STREN_Y
SCALAR  OSC_STREN_Z
SCALAR  DIP_SCF_X
SCALAR  DIP_SCF_Y
SCALAR  DIP_SCF_Z
SCALAR  DIP_EXC_X
SCALAR  DIP_EXC_Y
SCALAR  DIP_EXC_Z
SCALAR  DIP_GRD_X
SCALAR  DIP_GRD_Y
SCALAR  DIP_GRD_Z
SCALAR  DIP_MOM_X
SCALAR  DIP_MOM_Y
SCALAR  DIP_MOM_Z
SCALAR  DIP_MOM_X_L
SCALAR  DIP_MOM_Y_L
SCALAR  DIP_MOM_Z_L
SCALAR  DIP_MOM_X_R
SCALAR  DIP_MOM_Y_R
SCALAR  DIP_MOM_Z_R
SCALAR  DIPXY
SCALAR  DIPXZ
SCALAR  DIPYZ
SCALAR  POLXX
SCALAR  POLYY
SCALAR  POLZZ
SCALAR  POLXY
SCALAR  POLXZ
SCALAR  POLYZ
SCALAR  POLTOTXX
SCALAR  POLTOTYY
SCALAR  POLTOTZZ
SCALAR  POLTOTXY
SCALAR  POLTOTXZ
SCALAR  POLTOTYZ
SCALAR  SECONDMOM
SCALAR  LRNORM  
SCALAR  esum  
#
#
# Declare two-electron integral arrays
# ------------------------------------
#
served VSpipi[p1,i,p,i1]
served VSaaai[a2,a,a1,i]
#
served VSqjqj[q1,j,q,j1]
served Vjbbj[j,b1,b,j1]
served Vbbjj[b,b1,j,j1]
#
served Vjbii[j,b,i,i1]
served Vbbii[b,b1,i,i1]
served Vbbai[b,b1,a,i]
#
served Vpiqj[p,i,q,j]
served Vaajj[a,a1,j,j1]
served Viabj[i,a,b,j]
served Vaabj[a,a1,b,j]
#
# Arrays for AO routine
#
temp AOINT[mu,lambda,nu,sigma]
temp Txxxx[mu,nu,lambda,sigma]
local Lxxxj[mu,lambda,nu,j]
local Lxxbj[mu,nu,b,j]
local Lxabj[mu,a,b,j]
local Laabj[a1,a,b,j]
local Lxxxi[mu,lambda,nu,i]
local Lxxai[mu,nu,a,i]
local Lxbai[mu,b,a,i]
local Lbbai[b1,b,a,i]
local Lxaai[mu,a1,a,i]
local Laaai[a2,a1,a,i]
local Lxbbj[mu,b1,b,j]
local Lbbbj[b2,b1,b,j]
local Xbbbj[b,b2,b1,j] 
temp tmxxxj[mu,lambda,nu,j]
temp t1mxxxj[mu,lambda,nu,j]
temp tmxxbj[mu,lambda,b,j]
temp t1mxxbj[mu,lambda,b,j]
temp tmxabj[mu,a,b,j]
temp t1mxabj[mu,a,b,j]
temp tmaabj[a1,a,b,j]
temp t1maabj[a1,a,b,j]
#
temp tmxbbj[mu,b1,b,j]
temp t1mxbbj[mu,b1,b,j]
temp tmbbbj[b2,b1,b,j]
temp t1mbbbj[b2,b1,b,j]
#
temp tmxaai[mu,a1,a,i]
temp t1mxaai[mu,a1,a,i]
temp tmaaai[a2,a1,a,i]
temp t1maaai[a2,a1,a,i]
#
temp tmxxxi[mu,lambda,nu,i]
temp t1mxxxi[mu,lambda,nu,i]
temp tmxxai[mu,lambda,a,i]
temp t1mxxai[mu,lambda,a,i]
temp tmxbai[mu,b,a,i]
temp t1mxbai[mu,b,a,i]
temp tmbbai[b1,b,a,i]
temp t1mbbai[b1,b,a,i]
#
temp t1xj[sigma,j]
temp t1xi[sigma,i]
#
# Declare HBAR arrays. 
# -------------------- 
#
#
served Vxxaa[mu,nu,a1,a] 
served Vaaaa[a3,a2,a1,a] 
temp Txxxp[mu,nu,lambda,p] 
temp Txxpp[mu,nu,p1,p] 
temp Txppp[mu,p2,p1,p] 
#
temp Txxxq[mu,nu,lambda,q] 
temp Txxqq[mu,nu,q1,q] 
temp Txqqq[mu,q2,q1,q] 
#
served Gxxbb[mu,nu,b1,b] 
served Vaabb[a3,a2,b1,b] 
temp Txpqq[mu,p2,q1,q] 
temp tba[b,a]     
temp tab[a,b]     
#
# Declare temporary arrays
# ------------------------
#
temp T2jbai[j,b,a,i]
temp T3iaai[i,a,a1,i1]
temp T4iaai[i,a,a1,i1]
temp T3jbbj[j,b,b1,j1]
temp T4jbbj[j,b,b1,j1]
temp t1pppp[p,p1,p2,p3] 
temp t2pppp[p,p1,p2,p3] 
temp t3pppp[p,p1,p2,p3] 
temp t4pppp[p,p1,p2,p3] 
temp tSpppp[p,p1,p2,p3] 
temp tqqqq[q,q1,q2,q3] 
temp t1qqqq[q,q1,q2,q3] 
temp t2qqqq[q,q1,q2,q3] 
temp t3qqqq[q,q1,q2,q3] 
temp t4qqqq[q,q1,q2,q3] 
temp tSqqqq[q,q1,q2,q3] 
temp tppqq[p,p1,q,q1] 
temp tqpqp[q,p,q1,p1]
temp t0pqqp[p,q1,q,p2] 
temp t1ppqq[p,p1,q,q1] 
temp t2ppqq[p,p1,q,q1] 
temp t3ppqq[p,p1,q,q1] 
temp tqqpq[q,q1,p,q2] 
temp tqppq[q,p,p1,q1] 
temp tqqpp[q,q1,p,p1] 
temp t1qqpp[q,q1,p,p1] 
temp t2qqpp[q,q1,p,p1] 
temp t3qqpp[q,q1,p,p1] 
#
temp Tiaai[i,a,a1,i1] 
temp T1iaai[i,a,a1,i1] 
temp T2iaai[i,a,a1,i1] 
temp Tiiai[i,i1,a,i2] 
temp T1iiai[i,i1,a,i2] 
temp T2iiai[i,i1,a,i2] 
temp TSiiai[i,i1,a,i2] 
temp Tjbbj[j,b,b1,j1] 
temp T1jbbj[j,b,b1,j1] 
temp T2jbbj[j,b,b1,j1] 
temp Tjjbj[j,j1,b,j2] 
temp T1jjbj[j,j1,b,j2] 
temp T2jjbj[j,j1,b,j2] 
temp TSjjbj[j,j1,b,j2] 
temp Tiibb[i,i1,b,b1] 
temp T2iibb[i,i1,b,b1] 
temp T1iibb[i,i1,b,b1] 
temp Tjjaa[j,j1,a,a1] 
temp T2jjaa[j,j1,a,a1] 
temp T1jjaa[j,j1,a,a1] 
temp Tiabj[i,a,b,j] 
temp T2iabj[i,a,b,j] 
temp T1iabj[i,a,b,j] 
temp Tjbai[j,b,a,i] 
temp T1jbai[j,b,a,i] 
temp Tiibj[i,i1,b,j] 
temp T1iibj[i,i1,b,j] 
temp Tjjai[j,j1,a,i] 
temp T1jjai[j,j1,a,i] 
temp T1aiai[a1,i2,a2,i1]  
temp T2aiai[a1,i2,a2,i1]  
temp T1bjbj[b2,j,b,j2] 
temp T2bjbj[b2,j,b,j2] 
temp T1aibj[a1,i,b,j1]  
temp taabb[a,a1,b,b1]
temp taaaa[a,a1,a2,a3]
temp tbbbb[b,b1,b2,b3]
#
temp tpp[p,p1] 
temp t1pp[p,p1] 
temp t2pp[p,p1] 
temp t1ai[a,i] 
temp tqq[q,q1] 
temp t1qq[q,q1] 
temp t2qq[q,q1] 
temp t1bj[b,j] 
#
# Declare integral arrays
# ------------------------
#
# Define scalars
# --------------
#
scalar icopy
scalar e1
scalar e2
scalar e3
scalar etot 
scalar etot1
scalar etot2
scalar etot3
scalar etot4
scalar etot5
scalar etot6
scalar etot7
scalar etot8
scalar etot9
scalar etot10 
scalar etot11
scalar etot12

scalar normT
scalar normS
scalar norm1
scalar norm2
scalar norml
scalar normr
scalar overlapT
scalar overlapS
scalar overlapJK
#
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#
# Declare scalars
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
scalar maxcycle
scalar imaxc
scalar ncount
scalar aeigtemp
scalar aeigtemp2
scalar rootmax
scalar evfev
scalar eomthresh
scalar sqr
scalar sqr2
scalar egvmax
scalar lcount
scalar icount
scalar xcount
scalar imax
scalar emax
scalar energaa
scalar energbb
scalar energab
scalar esuma
scalar esumb
scalar esumab
scalar ecorraa
scalar ecorrbb
scalar ecorrab
scalar ecorrT
scalar eold
scalar etemp0
scalar eetemp
scalar ediff
scalar xcor
scalar xcor0
scalar xcor1
scalar xcor2
scalar xcor3
scalar count_iter
#
#     eom scalars
#
scalar ispdim
scalar omega_old
scalar omega_new
scalar omegam
scalar residuum
scalar square
scalar squarert
scalar mult
scalar exponent
#
scalar nsp
scalar proot
scalar xroot
#
scalar Aeig1
scalar Aeig2
scalar Aeig3
scalar Aeig4
scalar Aeig5
scalar Aeig6
scalar Aeig7
scalar Aeig8
scalar Aeig9
#
scalar Aeigv1
scalar Aeigv2
scalar Aeigv3
scalar Aeigv4
scalar Aeigv5
scalar Aeigv6
scalar Aeigv7
scalar Aeigv8
scalar Aeigv9
#
scalar Aeigvm1
scalar Aeigvm2
scalar Aeigvm3
scalar Aeigvm4
scalar Aeigvm5
scalar Aeigvm6
scalar Aeigvm7
scalar Aeigvm8
scalar Aeigvm9
#
scalar xmax
#
scalar xtemp
scalar xtemp1
#
# 
# Declare served arrays 
# ---------------------
#
served Vxxxi[mu,nu,lambda,i]
served Vxixi[mu,i1,lambda,i]
served Vxxii[mu,nu,i1,i]
served Vixxi[i1,nu,lambda,i]
served Vxipi[mu,i,p,i1]
served Vixai[i,mu,a,i1]
served Vxaii[mu,a,i,i1]
served Vxaai[mu,a1,a,i]
served Vxxai[mu,nu,a,i]
#
served Vxxxj[mu,nu,lambda,j]
served Vxjxj[mu,j1,lambda,j]
served Vxxjj[mu,nu,j1,j]
served Vjxxj[j1,nu,lambda,j]
served Vxjqj[mu,j,q,j1]
served Vjxbj[j,mu,b,j1]
served Vxbjj[mu,b,j,j1]
served Vxbbj[mu,b1,b,j]
served Vxxbj[mu,nu,b,j] 
#
served Vxbii[mu,b,i,i1]
served Vxbai[mu,b,a,i]
#
served Vxixj[mu,i,nu,j]
served Vxiqj[mu,i,q,j]
served Vxajj[mu,a,j,j1]
served Vxabj[mu,a,b,j]
served Vxxij[mu,nu,i,j]
served Vixxj[i,mu,nu,j]
served Vixbj[i,mu,b,j]
#
# Declare temporary arrays 
# ------------------------ 
#
temp T1xjxj[mu,j1,lambda,j]
temp Txxjj[mu,nu,j1,j]
temp T1xxjj[mu,nu,j1,j]
temp Tjjxx[j1,nu,lambda,j]
temp Tjxxj[j1,nu,lambda,j]
temp T1jxxj[j1,nu,lambda,j]
temp Txjqj[mu,j,q,j1]
temp T1xjqj[mu,j,q,j1]
temp Tqjqj[q1,j,q,j1]
temp T1qjqj[q1,j,q,j1]
temp Tjxbj[j,mu,b,j1]
temp T1jxbj[j,mu,b,j1]
temp Txbjj[mu,b,j,j1]
temp T1xbjj[mu,b,j,j1]
temp T1bbjj[b,b1,j,j1]
temp Txbbj[mu,b1,b,j]
temp T1xbbj[mu,b1,b,j]
temp Tbbbj[b2,b,b1,j]
temp T1bbbj[b2,b,b1,j]
temp Txxbj[mu,nu,b,j]
#
temp T1xixj[mu,i,nu,j]
temp Txiqj[mu,i,q,j]
temp T1xiqj[mu,i,q,j]
temp Tpiqj[p,i,q,j]
temp T1piqj[p,i,q,j]
temp Tiixx[i,i1,mu,nu]
temp Tiixb[i,i1,mu,b]
temp Txajj[mu,a,j,j1]
temp T1xajj[mu,a,j,j1]
temp Txabj[mu,a,b,j]
temp T1xabj[mu,a,b,j]
temp Tixxj[i,mu,nu,j]
temp Tixbj[i,mu,b,j]
temp T1ixbj[i,mu,b,j]
temp Taabj[a,a1,b,j]
temp T1aabj[a,a1,b,j]
#
temp Txbii[mu,b,i,i1]
temp T1xbii[mu,b,i,i1]
temp Tjbii[j,b,i,i1]
temp T1jbii[j,b,i,i1]
temp Txbai[mu,b,a,i]
temp T1xbai[mu,b,a,i]
temp Tbbai[b,b1,a,i]
temp T1bbai[b,b1,a,i]
#
temp T1aaai[a,a1,a2,i] 
temp Txxai[mu,nu,a,i] 
temp Txaai[mu,a,a1,i] 
temp T1xaai[mu,a,a1,i] 
temp Txaii[mu,a,i,i1] 
temp T1xaii[mu,a,i,i1] 
temp T1xxai[mu,nu,a,i] 
temp Tixai[i,mu,a,i1] 
temp T1ixai[i,mu,a,i1] 
temp Txipi[mu,i,p1,i1] 
temp T1xipi[mu,i,p1,i1] 
temp T1pipi[p,i,p1,i1] 
#
temp T1xxbj[mu,nu,b,j] 
#
temp Txxij[mu,nu,i,j] 
temp T1xxij[mu,nu,i,j] 
temp T1ixxj[i,mu,nu,j] 
local Txxxi[mu,nu,lambda,i]
temp T1xxxi[mu,nu,lambda,i]
local Txxxj[mu,nu,lambda,j]
temp T1xxxj[mu,nu,lambda,j]
temp T1xixi[mu,i,nu,i1]
temp Txxii[mu,nu,i1,i] 
temp T1xxii[mu,nu,i1,i] 
temp Tixxi[i1,mu,nu,i] 
temp T1ixxi[i1,mu,nu,i] 
#
# Declare integral arrays 
# ------------------------  
#
local TAOINT[mu,nu,lambda,sigma] 
local L1xxxi[mu,nu,lambda,i] 
local L2xxxi[mu,lambda,nu,i] 
local L3xxxi[lambda,mu,nu,i] 
local L1xxxj[mu,nu,lambda,j] 
local L2xxxj[mu,lambda,nu,j] 
local L3xxxj[lambda,mu,nu,j] 
local Lxixi[mu,i,nu,i1] 
local Lxxii[mu,nu,i,i1] 
local Lixxi[i,mu,nu,i1] 
local Lxjxj[mu,j,nu,j1] 
local Lxxjj[mu,nu,j,j1] 
local Ljxxj[j,mu,nu,j1] 
local Lxixj[mu,i,nu,j] 
local Lixxj[i,mu,nu,j] 
local Lxipi[mu,i,p,i1] 
local Lxaii[mu,a,i,i1] 
local Lixai[i,mu,a,i1] 
local L1xaai[mu,a,a1,i]  
local L2xaai[mu,a,a2,i]  
local Lxjqj[mu,j,q,j1]  
local Lxbjj[mu,b,j,j1] 
local Ljxbj[j,mu,b,j1] 
local Lxbii[mu,b,i,i1] 
local Lxiqj[mu,i,q,j] 
local Lxajj[mu,a,j,j1] 
local Lixbj[i,mu,b,j] 
local L1xbbj[mu,b,b1,j] 
#
#    ------------------------------------------------------------------------
#
#    DEFINE PROCEDURES  
#
#    ------------------------------------------------------------------------
#
#    Compute the integrals and store in the served array saoint. 
#
#    Perform the first two stages of the transformation in two N5 steps. 
#
PROC TRAN_TRAN2 
#
#    ------------------------------------------------------------------------
#
print "Starting tran 1-2"
pardo mu, nu, lambda
#
    allocate Txxxi[mu,nu,lambda,*]
    allocate Txxxj[mu,nu,lambda,*]
#
    do sigma
#
	execute compute_integral_batch aoint[mu,nu,lambda,sigma]
#
	do i   
#
	    T1xxxi[mu,nu,lambda,i]  = aoint[mu,nu,lambda,sigma]*ca[sigma,i]
	    Txxxi[mu,nu,lambda,i]  += T1xxxi[mu,nu,lambda,i]  
#
	enddo i   
#
	do j   
#
	    T1xxxj[mu,nu,lambda,j]  = aoint[mu,nu,lambda,sigma]*ca[sigma,j]
	    Txxxj[mu,nu,lambda,j]  += T1xxxj[mu,nu,lambda,j]  
#
	enddo j   
#
    enddo sigma

    do i
	T1xxxi[mu,nu,lambda,i]         = Txxxi[mu,nu,lambda,i]
	prepare Vxxxi[mu,nu,lambda,i]  = T1xxxi[mu,nu,lambda,i]
    enddo i

    do j
	T1xxxj[mu,nu,lambda,j]         = Txxxj[mu,nu,lambda,j] 
	prepare Vxxxj[mu,nu,lambda,j]  = T1xxxj[mu,nu,lambda,j]
    enddo j

    deallocate Txxxi[mu,nu,lambda,*]
    deallocate Txxxj[mu,nu,lambda,*]
#
endpardo mu, nu, lambda 
server_barrier
#
#    ------------------------------------------------------------------------
#
pardo mu, nu, i
#
    allocate L1xxxi[mu,nu,*,i]
#
    do lambda
#
	request Vxxxi[mu,nu,lambda,i] 
#
	L1xxxi[mu,nu,lambda,i] = Vxxxi[mu,nu,lambda,i]
#
    enddo lambda
#
    do i1
#
	Txxii[mu,nu,i1,i] = 0.0
#
	do lambda
#
	    T1xxii[mu,nu,i1,i] = L1xxxi[mu,nu,lambda,i]*ca[lambda,i1]
	    Txxii[mu,nu,i1,i] += T1xxii[mu,nu,i1,i]
#
	enddo lambda
#
	prepare Vxxii[mu,nu,i1,i] = Txxii[mu,nu,i1,i]
#
    enddo i1
#
    do a
#
	Txxai[mu,nu,a,i] = 0.0
#
	do lambda
#
	    T1xxai[mu,nu,a,i] = L1xxxi[mu,nu,lambda,i]*ca[lambda,a]
	    Txxai[mu,nu,a,i] += T1xxai[mu,nu,a,i]
#
	enddo lambda
#
	prepare Vxxai[mu,nu,a,i] = Txxai[mu,nu,a,i]
#
    enddo a
#
    deallocate L1xxxi[mu,nu,*,i]
    allocate L2xxxi[mu,*,nu,i]

    do lambda
	request Vxxxi[mu,lambda,nu,i] 
	L2xxxi[mu,lambda,nu,i] = Vxxxi[mu,lambda,nu,i]
    enddo lambda

    do i1
	Txixi[mu,i1,nu,i] = 0.0

	do lambda
	    T1xixi[mu,i1,nu,i] = L2xxxi[mu,lambda,nu,i]*ca[lambda,i1]
	    Txixi[mu,i1,nu,i] += T1xixi[mu,i1,nu,i]
	enddo lambda

	prepare Vxixi[mu,i1,nu,i] = Txixi[mu,i1,nu,i]
    enddo i1

    deallocate L2xxxi[mu,*,nu,i]
    allocate L3xxxi[*,mu,nu,i]

    do lambda
	request Vxxxi[lambda,mu,nu,i] 
	L3xxxi[lambda,mu,nu,i] = Vxxxi[lambda,mu,nu,i]
    enddo lambda

    do i1
	Tixxi[i1,mu,nu,i] = 0.0

	do lambda
	    T1ixxi[i1,mu,nu,i] = L3xxxi[lambda,mu,nu,i]*ca[lambda,i1]
	    Tixxi[i1,mu,nu,i] += T1ixxi[i1,mu,nu,i]
	enddo lambda

	prepare Vixxi[i1,mu,nu,i] = Tixxi[i1,mu,nu,i]
    enddo i1

    deallocate L3xxxi[*,mu,nu,i]
#
endpardo mu, nu, i
#
#    ------------------------------------------------------------------------
#
pardo mu, nu, j
#
    allocate L1xxxj[mu,nu,*,j]
#
    do lambda
#
	request Vxxxj[mu,nu,lambda,j] 
#
	L1xxxj[mu,nu,lambda,j] = Vxxxj[mu,nu,lambda,j]
#
    enddo lambda
#
    do j1
#
	Txxjj[mu,nu,j1,j] = 0.0
#
	do lambda
#
	T1xxjj[mu,nu,j1,j] = L1xxxj[mu,nu,lambda,j]*ca[lambda,j1]
	Txxjj[mu,nu,j1,j] += T1xxjj[mu,nu,j1,j]
#
	enddo lambda
#
	prepare Vxxjj[mu,nu,j1,j] = Txxjj[mu,nu,j1,j]
#
    enddo j1
#
    do b
#
	Txxbj[mu,nu,b,j] = 0.0
#
	do lambda
#
	T1xxbj[mu,nu,b,j] = L1xxxj[mu,nu,lambda,j]*ca[lambda,b]
	Txxbj[mu,nu,b,j] += T1xxbj[mu,nu,b,j]
#
	enddo lambda
#
	prepare Vxxbj[mu,nu,b,j] = Txxbj[mu,nu,b,j]
#
    enddo b
#
    do i
#
	Txxij[mu,nu,i,j] = 0.0
#
	do lambda
#
	T1xxij[mu,nu,i,j] = L1xxxj[mu,nu,lambda,j]*ca[lambda,i]
	Txxij[mu,nu,i,j] += T1xxij[mu,nu,i,j]
#
	enddo lambda
#
	prepare Vxxij[mu,nu,i,j] = Txxij[mu,nu,i,j]
#
    enddo i
#
    deallocate L1xxxj[mu,nu,*,j]
    allocate L2xxxj[mu,*,nu,j]

    do lambda
	request Vxxxj[mu,lambda,nu,j] 
	L2xxxj[mu,lambda,nu,j] = Vxxxj[mu,lambda,nu,j]
    enddo lambda

    do j1
	Txjxj[mu,j1,nu,j] = 0.0

	do lambda
	T1xjxj[mu,j1,nu,j] = L2xxxj[mu,lambda,nu,j]*ca[lambda,j1]
	Txjxj[mu,j1,nu,j] += T1xjxj[mu,j1,nu,j]
	enddo lambda

	prepare Vxjxj[mu,j1,nu,j] = Txjxj[mu,j1,nu,j]
    enddo j1

    do i
	Txixj[mu,i,nu,j] = 0.0

	do lambda
	T1xixj[mu,i,nu,j] = L2xxxj[mu,lambda,nu,j]*ca[lambda,i]
	Txixj[mu,i,nu,j] += T1xixj[mu,i,nu,j]
	enddo lambda

	prepare Vxixj[mu,i,nu,j] = Txixj[mu,i,nu,j]
    enddo i

    deallocate L2xxxj[mu,*,nu,j]
    allocate L3xxxj[*,mu,nu,j]

    do lambda
	request Vxxxj[lambda,mu,nu,j] 
	L3xxxj[lambda,mu,nu,j] = Vxxxj[lambda,mu,nu,j]
    enddo lambda

    do j1
	Tjxxj[j1,mu,nu,j] = 0.0

	do lambda
	T1jxxj[j1,mu,nu,j] = L3xxxj[lambda,mu,nu,j]*ca[lambda,j1]
	Tjxxj[j1,mu,nu,j] += T1jxxj[j1,mu,nu,j]
	enddo lambda

	prepare Vjxxj[j1,mu,nu,j] = Tjxxj[j1,mu,nu,j]
    enddo j1

    do i
	Tixxj[i,mu,nu,j] = 0.0

	do lambda
	T1ixxj[i,mu,nu,j] = L3xxxj[lambda,mu,nu,j]*ca[lambda,i]
	Tixxj[i,mu,nu,j] += T1ixxj[i,mu,nu,j]
	enddo lambda

	prepare Vixxj[i,mu,nu,j] = Tixxj[i,mu,nu,j]
    enddo i

    deallocate L3xxxj[*,mu,nu,j]
#
endpardo mu, nu, j
#
server_barrier
#
#    ------------------------------------------------------------------------
#
ENDPROC TRAN_TRAN2 
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
#    Perform the third N5 stage of the transformation.  
#
PROC TRAN_TRAN3 
#
#    ------------------------------------------------------------------------
#
print "Starting tran 3a"
pardo mu, i, i1
#
    allocate Lxixi[mu,i,*,i1] 
    allocate Lxxii[mu,*,i,i1] 
    allocate Lixxi[i,mu,*,i1] 
#
    do nu 
#
	request Vxixi[mu,i,nu,i1]  
	request Vxxii[mu,nu,i,i1]  
	request Vixxi[i,mu,nu,i1]  
#
	Lxixi[mu,i,nu,i1] = Vxixi[mu,i,nu,i1] 
	Lxxii[mu,nu,i,i1] = Vxxii[mu,nu,i,i1] 
	Lixxi[i,mu,nu,i1] = Vixxi[i,mu,nu,i1] 
#
    enddo nu 
#
    do p 
#
	Txipi[mu,i,p,i1] = 0.0  
#
	do nu  
#
	T1xipi[mu,i,p,i1] = Lxixi[mu,i,nu,i1]*ca[nu,p]
	Txipi[mu,i,p,i1] += T1xipi[mu,i,p,i1]  
#
	enddo nu  
#
	prepare Vxipi[mu,i,p,i1] = Txipi[mu,i,p,i1]
#
    enddo p 
#
    do a
#
	Txaii[mu,a,i,i1] = 0.0 
	Tixai[i,mu,a,i1] = 0.0  
#
	do nu 
#
	T1xaii[mu,a,i,i1] = Lxxii[mu,nu,i,i1]*ca[nu,a]
	Txaii[mu,a,i,i1] += T1xaii[mu,a,i,i1]  
#
	T1ixai[i,mu,a,i1] = Lixxi[i,mu,nu,i1]*ca[nu,a]
	Tixai[i,mu,a,i1] += T1ixai[i,mu,a,i1]  

	enddo nu 
#
	prepare Vxaii[mu,a,i,i1] = Txaii[mu,a,i,i1]
	prepare Vixai[i,mu,a,i1] = Tixai[i,mu,a,i1]
#
    enddo a
#
    do b 
# 
	Txbii[mu,b,i,i1] = 0.0 
#
	do nu  
#
	T1xbii[mu,b,i,i1] = Lxxii[mu,nu,i,i1]*ca[nu,b]
	Txbii[mu,b,i,i1] += T1xbii[mu,b,i,i1]  
#
	enddo nu  
#
	prepare Vxbii[mu,b,i,i1] = Txbii[mu,b,i,i1]
#
    enddo b 
#
    deallocate Lxixi[mu,i,*,i1] 
    deallocate Lxxii[mu,*,i,i1] 
    deallocate Lixxi[i,mu,*,i1] 
#
endpardo mu, i, i1
#
#    ------------------------------------------------------------------------
#
print "Starting tran 3b"
pardo mu, a, i
#
    allocate Lxxai[mu,*,a,i] 
#
    do nu 
#
	request Vxxai[mu,nu,a,i]  
	Lxxai[mu,nu,a,i] = Vxxai[mu,nu,a,i] 
#
    enddo nu 
#
    do a1 
#
	Txaai[mu,a1,a,i] = 0.0  
#
	do nu  
#
	T1xaai[mu,a1,a,i] = Lxxai[mu,nu,a,i]*ca[nu,a1]
	Txaai[mu,a1,a,i] += T1xaai[mu,a1,a,i]  
#
	enddo nu  
#
	prepare Vxaai[mu,a1,a,i] = Txaai[mu,a1,a,i]
#
    enddo a1 
#
    do b 
#
	Txbai[mu,b,a,i] = 0.0 
#
	do nu  
#
	T1xbai[mu,b,a,i] = Lxxai[mu,nu,a,i]*ca[nu,b]
	Txbai[mu,b,a,i] += T1xbai[mu,b,a,i]   
#
	enddo nu  
#
	prepare Vxbai[mu,b,a,i] = Txbai[mu,b,a,i]
#
    enddo b 
#
    deallocate Lxxai[mu,*,a,i] 
#
endpardo mu, a, i
#
#    ------------------------------------------------------------------------
#
print "Starting tran 3c"
pardo mu, j, j1
#
    allocate Lxjxj[mu,j,*,j1] 
    allocate Lxxjj[mu,*,j,j1] 
    allocate Ljxxj[j,mu,*,j1] 
#
    do nu 
#
	request Vxjxj[mu,j,nu,j1]  
	request Vxxjj[mu,nu,j,j1]  
	request Vjxxj[j,mu,nu,j1]  
#
	Lxjxj[mu,j,nu,j1] = Vxjxj[mu,j,nu,j1] 
	Lxxjj[mu,nu,j,j1] = Vxxjj[mu,nu,j,j1] 
	Ljxxj[j,mu,nu,j1] = Vjxxj[j,mu,nu,j1] 
#
    enddo nu 
#
    do q 
#
	Txjqj[mu,j,q,j1] = 0.0  
#
	do nu  
#
	T1xjqj[mu,j,q,j1] = Lxjxj[mu,j,nu,j1]*ca[nu,q]
	Txjqj[mu,j,q,j1] += T1xjqj[mu,j,q,j1]  
#
	enddo nu  
#
	prepare Vxjqj[mu,j,q,j1] = Txjqj[mu,j,q,j1]
#
    enddo q 
#
    do b
#
	Txbjj[mu,b,j,j1] = 0.0 
	Tjxbj[j,mu,b,j1] = 0.0  
#
	do nu 
#
	T1xbjj[mu,b,j,j1] = Lxxjj[mu,nu,j,j1]*ca[nu,b]
	Txbjj[mu,b,j,j1] += T1xbjj[mu,b,j,j1]  
#
	T1jxbj[j,mu,b,j1] = Ljxxj[j,mu,nu,j1]*ca[nu,b]
	Tjxbj[j,mu,b,j1] += T1jxbj[j,mu,b,j1]  

	enddo nu 
#
	prepare Vxbjj[mu,b,j,j1] = Txbjj[mu,b,j,j1]
	prepare Vjxbj[j,mu,b,j1] = Tjxbj[j,mu,b,j1]
#
    enddo b
#
    do a 
#
	Txajj[mu,a,j,j1] = 0.0  
#
	do nu  
#
	T1xajj[mu,a,j,j1] = Lxxjj[mu,nu,j,j1]*ca[nu,a]
	Txajj[mu,a,j,j1] += T1xajj[mu,a,j,j1]  
#
	enddo nu  
#
	prepare Vxajj[mu,a,j,j1] = Txajj[mu,a,j,j1]
#
    enddo a 
#
    deallocate Lxjxj[mu,j,*,j1] 
    deallocate Lxxjj[mu,*,j,j1] 
    deallocate Ljxxj[j,mu,*,j1] 
#
endpardo mu, j, j1
#
#    ------------------------------------------------------------------------
#
print "Starting tran 3d"
pardo mu, b, j
#
    allocate Lxxbj[mu,*,b,j] 
#
    do nu 
#
	request Vxxbj[mu,nu,b,j]  
	Lxxbj[mu,nu,b,j] = Vxxbj[mu,nu,b,j] 
#
    enddo nu 
#
    do b1 
#
	Txbbj[mu,b1,b,j] = 0.0  
#
	do nu  
#
	T1xbbj[mu,b1,b,j] = Lxxbj[mu,nu,b,j]*ca[nu,b1]
	Txbbj[mu,b1,b,j] += T1xbbj[mu,b1,b,j]  
#
	enddo nu  
#
	prepare Vxbbj[mu,b1,b,j] = Txbbj[mu,b1,b,j]
#
    enddo b1 
#
    do a 
#
	Txabj[mu,a,b,j] = 0.0  
#
	do nu  
#
	T1xabj[mu,a,b,j] = Lxxbj[mu,nu,b,j]*ca[nu,a]
	Txabj[mu,a,b,j] += T1xabj[mu,a,b,j]  
#
	enddo nu  
#
	prepare Vxabj[mu,a,b,j] = Txabj[mu,a,b,j]
#
    enddo a 
#
    deallocate Lxxbj[mu,*,b,j]  
#
endpardo mu, b, j
#
#    ------------------------------------------------------------------------
#
print "Starting tran 3e"
pardo mu, i, j
#
    allocate Lxixj[mu,i,*,j] 
    allocate Lixxj[i,mu,*,j] 
#
    do nu 
#
	request Vxixj[mu,i,nu,j]  
	request Vixxj[i,mu,nu,j]  
#
	Lxixj[mu,i,nu,j] = Vxixj[mu,i,nu,j] 
	Lixxj[i,mu,nu,j] = Vixxj[i,mu,nu,j] 
#
    enddo nu 
#
    do q 
#
	Txiqj[mu,i,q,j] = 0.0  
#
	do nu  
#
	T1xiqj[mu,i,q,j] = Lxixj[mu,i,nu,j]*ca[nu,q]
	Txiqj[mu,i,q,j] += T1xiqj[mu,i,q,j]  
#
	enddo nu  
#
	prepare Vxiqj[mu,i,q,j] = Txiqj[mu,i,q,j]
#
    enddo q 
#
    do b 
#
	Tixbj[i,mu,b,j] = 0.0  
#
	do nu  
#
	T1ixbj[i,mu,b,j] = Lixxj[i,mu,nu,j]*ca[nu,b]
	Tixbj[i,mu,b,j] += T1ixbj[i,mu,b,j]  
#
	enddo nu  
#
	prepare Vixbj[i,mu,b,j] = Tixbj[i,mu,b,j]
#
    enddo b 
#
    deallocate Lxixj[mu,i,*,j] 
    deallocate Lixxj[i,mu,*,j] 
#
endpardo mu, i, j
#
#    ------------------------------------------------------------------------
#    
server_barrier
#
ENDPROC TRAN_TRAN3 
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
PROC TRAN_TRAN4 
#
#    ------------------------------------------------------------------------
#
print "Starting tran 4:VSpipi"
pardo p, i, i1
#
    allocate Lxipi[*,i,p,i1] 
#
    do mu 
#
	request Vxipi[mu,i,p,i1]  
	request Vxipi[mu,i1,p,i]  
	Lxipi[mu,i,p,i1]  = Vxipi[mu,i,p,i1] 
	Txipi[mu,i,p,i1]  = Vxipi[mu,i1,p,i] 
	Lxipi[mu,i,p,i1] -= Txipi[mu,i,p,i1] 
#
    enddo mu  
#
    do p1 
#
	Tpipi[p1,i,p,i1] = 0.0  
#
	do mu  
#
	T1pipi[p1,i,p,i1] = Lxipi[mu,i,p,i1]*ca[mu,p1]
	Tpipi[p1,i,p,i1] += T1pipi[p1,i,p,i1]  
#
	enddo mu  
#
	prepare VSpipi[p1,i,p,i1] = Tpipi[p1,i,p,i1] 
#
    enddo p1 
#
    deallocate Lxipi[*,i,p,i1] 
#
endpardo p, i, i1
#
print "Starting tran 4:Vaaii|Viaai"
pardo a, i, i1
#
    allocate Lxaii[*,a,i,i1] 
    allocate Lixai[i,*,a,i1] 
#
    do mu 
#
	request Vxaii[mu,a,i,i1]  
	request Vixai[i,mu,a,i1]  
#
	Lxaii[mu,a,i,i1] = Vxaii[mu,a,i,i1]  
	Lixai[i,mu,a,i1] = Vixai[i,mu,a,i1] 
#
    enddo mu 
#
    do a1 
#
	Taaii[a1,a,i,i1] = 0.0  
#
	do mu  
#
	T1aaii[a1,a,i,i1] = Lxaii[mu,a,i,i1]*ca[mu,a1]
	Taaii[a1,a,i,i1] += T1aaii[a1,a,i,i1]  
#
	enddo mu  
#
	prepare Vaaii[a1,a,i,i1] = Taaii[a1,a,i,i1]
#
    enddo a1 
#
    deallocate Lxaii[*,a,i,i1] 
#
    do a1 
#
	Tiaai[i,a1,a,i1] = 0.0  
#
	do mu  
#
	T1iaai[i,a1,a,i1] = Lixai[i,mu,a,i1]*ca[mu,a1]
	Tiaai[i,a1,a,i1] += T1iaai[i,a1,a,i1]   
#
	enddo mu  
#
	prepare Viaai[i,a1,a,i1] = Tiaai[i,a1,a,i1]
#
    enddo a1 
#
    deallocate Lixai[i,*,a,i1] 
#
endpardo a, i, i1
# 
print "Starting tran 4:Vaaai|VSaaai"
pardo a, a1, i
#
    allocate L1xaai[*,a,a1,i] 
#
    do mu 
#
	request Vxaai[mu,a,a1,i]  
#
	L1xaai[mu,a,a1,i]  = Vxaai[mu,a,a1,i]
#
    enddo mu 
#
    do a2  
#
	Taaai[a2,a,a1,i] = 0.0 
#
	do mu 
#
	T1aaai[a2,a,a1,i] = L1xaai[mu,a,a1,i]*ca[mu,a2]
	Taaai[a2,a,a1,i] += T1aaai[a2,a,a1,i]  
#
	enddo mu 
#
	T1aaai[a1,a,a2,i]           = Taaai[a2,a,a1,i] 
	T1aaai[a1,a,a2,i]          *= -1.0  
	prepare Vaaai [a2,a,a1,i]  += Taaai [a2,a,a1,i]
	prepare VSaaai[a2,a,a1,i]  += Taaai [a2,a,a1,i]
	prepare VSaaai[a1,a,a2,i]  += T1aaai[a1,a,a2,i]
#
    enddo a2  
#
    deallocate L1xaai[*,a,a1,i] 
#
endpardo a, a1, i
# 
print "Starting tran 4:VSqjqj"
pardo q, j, j1
#
    allocate Lxjqj[*,j,q,j1] 
#
    do mu  
#
	request Vxjqj[mu,j,q,j1]  
	request Vxjqj[mu,j1,q,j]  
	Lxjqj[mu,j,q,j1]  = Vxjqj[mu,j,q,j1] 
	Txjqj[mu,j,q,j1]  = Vxjqj[mu,j1,q,j] 
	Lxjqj[mu,j,q,j1] -= Txjqj[mu,j,q,j1] 
#
    enddo mu  
#
    do q1 
#
	Tqjqj[q1,j,q,j1] = 0.0 
#
	do mu  
#
	T1qjqj[q1,j,q,j1]      = Lxjqj[mu,j,q,j1]*ca[mu,q1]
	Tqjqj[q1,j,q,j1]      += T1qjqj[q1,j,q,j1] 
#
	enddo mu  
#
	prepare VSqjqj[q1,j,q,j1] = Tqjqj[q1,j,q,j1]
#
    enddo q1 
#
    deallocate Lxjqj[*,j,q,j1] 
#
endpardo q, j, j1
#
print "Starting tran 4:Vbbjj|Vjbbj"
pardo b, j, j1
#
    allocate Lxbjj[*,b,j,j1] 
    allocate Ljxbj[j,*,b,j1] 
#
    do mu 
#
	request Vxbjj[mu,b,j,j1]  
	request Vjxbj[j,mu,b,j1]  
#
	Lxbjj[mu,b,j,j1] = Vxbjj[mu,b,j,j1] 
	Ljxbj[j,mu,b,j1] = Vjxbj[j,mu,b,j1] 
#
    enddo mu 
#
    do b1 
#
	Tbbjj[b1,b,j,j1] = 0.0 
#
	do mu 
#
	T1bbjj[b1,b,j,j1] = Lxbjj[mu,b,j,j1]*ca[mu,b1]
	Tbbjj[b1,b,j,j1] += T1bbjj[b1,b,j,j1]  
#
	enddo mu  
#
	prepare Vbbjj[b1,b,j,j1] = Tbbjj[b1,b,j,j1]
#
    enddo b1 
#
    deallocate Lxbjj[*,b,j,j1] 
#
    do b1 
#
	Tjbbj[j,b1,b,j1] = 0.0 
#
	do mu  
#
	T1jbbj[j,b1,b,j1] = Ljxbj[j,mu,b,j1]*ca[mu,b1]
	Tjbbj[j,b1,b,j1] += T1jbbj[j,b1,b,j1]  
#
	enddo mu  
#
	prepare Vjbbj[j,b1,b,j1] = Tjbbj[j,b1,b,j1]
#
    enddo b1 
#
    deallocate Ljxbj[j,*,b,j1] 
#
endpardo b, j, j1
#
print "Starting tran 4:Vbbii"
pardo b, i, i1
#
    allocate Lxbii[*,b,i,i1] 
#
    do mu  
#
	request Vxbii[mu,b,i,i1]  
	Lxbii[mu,b,i,i1] = Vxbii[mu,b,i,i1] 
#
    enddo mu  
#
    do b1 
#
	Tbbii[b1,b,i,i1] = 0.0 
#
	do mu  
#
	T1bbii[b1,b,i,i1] = Lxbii[mu,b,i,i1]*ca[mu,b1]
	Tbbii[b1,b,i,i1] += T1bbii[b1,b,i,i1]  
#
	enddo mu  
#
	prepare Vbbii[b1,b,i,i1] = Tbbii[b1,b,i,i1]
#
    enddo b1 
#
    deallocate Lxbii[*,b,i,i1] 
#
endpardo b, i, i1
#
print "Starting tran 4:Vjbii"
pardo b, i, i1
#
    allocate Lxbii[*,b,i,i1] 
#
    do mu 
#
	request Vxbii[mu,b,i,i1]  
	Lxbii[mu,b,i,i1] = Vxbii[mu,b,i,i1]  
#
    enddo mu 
#
    do j 
#
	Tjbii[j,b,i,i1] = 0.0 
#
	do mu 
#
	T1jbii[j,b,i,i1] = Lxbii[mu,b,i,i1]*ca[mu,j]
	Tjbii[j,b,i,i1] += T1jbii[j,b,i,i1]  
#
	enddo mu  
#
	prepare Vjbii[j,b,i,i1] = Tjbii[j,b,i,i1]
#
    enddo j 
#
    deallocate Lxbii[*,b,i,i1] 
#
endpardo b, i, i1
#
print "Starting tran 4:Vbbai"
pardo b, a, i
#
    allocate Lxbai[*,b,a,i] 
#
    do mu  
#
	request Vxbai[mu,b,a,i]  
	Lxbai[mu,b,a,i] = Vxbai[mu,b,a,i] 
#
    enddo mu  
#
    do b1 
#
	Tbbai[b1,b,a,i] = 0.0 
#
	do mu  
#
	T1bbai[b1,b,a,i] = Lxbai[mu,b,a,i]*ca[mu,b1]
	Tbbai[b1,b,a,i] += T1bbai[b1,b,a,i]  
#
	enddo mu  
#
	prepare Vbbai[b1,b,a,i] = Tbbai[b1,b,a,i]
#
    enddo b1 
#
    deallocate Lxbai[*,b,a,i] 
#
endpardo b, a, i
#
print "Starting tran 4:Vpiqj"
pardo q, i, j
#
    allocate Lxiqj[*,i,q,j] 
#
    do mu  
#
	request Vxiqj[mu,i,q,j]  
	Lxiqj[mu,i,q,j] = Vxiqj[mu,i,q,j] 
#
    enddo mu  
#
    do p 
#
	Tpiqj[p,i,q,j] = 0.0 
#
	do mu  
#
	T1piqj[p,i,q,j] = Lxiqj[mu,i,q,j]*ca[mu,p]
	Tpiqj[p,i,q,j] += T1piqj[p,i,q,j]  
#
	enddo mu  
#
	prepare Vpiqj[p,i,q,j] = Tpiqj[p,i,q,j]
#
    enddo p 
#
    deallocate Lxiqj[*,i,q,j] 
#
endpardo q, i, j
#
print "Starting tran 4:Vaajj"
pardo a, j, j1
#
    allocate Lxajj[*,a,j,j1] 
#
    do mu  
#
	request Vxajj[mu,a,j,j1]  
	Lxajj[mu,a,j,j1] = Vxajj[mu,a,j,j1]  
#
    enddo mu  
#
    do a1 
#
	Taajj[a1,a,j,j1] = 0.0 
#
	do mu  
#
	T1aajj[a1,a,j,j1] = Lxajj[mu,a,j,j1]*ca[mu,a1]
	Taajj[a1,a,j,j1] += T1aajj[a1,a,j,j1]  
#
	enddo mu  
#
	prepare Vaajj[a1,a,j,j1] = Taajj[a1,a,j,j1]
#
    enddo a1 
#
    deallocate Lxajj[*,a,j,j1] 
#
endpardo a, j, j1
#
print "Starting tran 4:Viabj"
pardo b, i, j
#
    allocate Lixbj[i,*,b,j] 
#
    do mu 
#
	request Vixbj[i,mu,b,j]  
	Lixbj[i,mu,b,j] = Vixbj[i,mu,b,j] 
#
    enddo mu 
#
    do a 
#
	Tiabj[i,a,b,j] = 0.0 
#
	do mu 
#
	T1iabj[i,a,b,j] = Lixbj[i,mu,b,j]*ca[mu,a]
	Tiabj[i,a,b,j] += T1iabj[i,a,b,j]  
#
	enddo mu 
#
	prepare Viabj[i,a,b,j] += Tiabj[i,a,b,j]
#
    enddo a 
#
    deallocate Lixbj[i,*,b,j] 
#
endpardo b, i, j
#
print "Starting tran 4:Vaabj"
pardo a, b, j
#
    allocate Lxabj[*,a,b,j] 
#
    do mu  
#
	request Vxabj[mu,a,b,j]  
	Lxabj[mu,a,b,j] = Vxabj[mu,a,b,j] 
#
    enddo mu  
#
    do a1 
#
	Taabj[a1,a,b,j] = 0.0 
#
	do mu  
#
	T1aabj[a1,a,b,j] = Lxabj[mu,a,b,j]*ca[mu,a1]
	Taabj[a1,a,b,j] += T1aabj[a1,a,b,j]  
#
	enddo mu  
#
	prepare Vaabj[a1,a,b,j] = Taabj[a1,a,b,j]
#
    enddo a1 
#
    deallocate Lxabj[*,a,b,j] 
#
endpardo a, b, j
#
#    ------------------------------------------------------------------------
#
ENDPROC TRAN_TRAN4 
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------ 
#
PROC TRAN_UHF 
# 
#        CALL COMP_INTEGRALS # --> compute integrals and put into served array 
CALL TRAN_TRAN2     # --> performs the first two stages of the 
#     two-electron integral transformation.  
CALL TRAN_TRAN3     # --> performs the third stage   
#     two-electron integral transformation.  
CALL TRAN_TRAN4     # --> performs the fourth stage of the  
#     two-electron integral transformation.  
#
ENDPROC TRAN_UHF 
#
# -----------------
#  MAIN
# -----------------

server_barrier
restore_persistent ca "ca"
set_persistent ca "ca"  
server_barrier

CALL TRAN_UHF 
server_barrier

set_persistent VSpipi "VSpipi"
set_persistent Vaaii "Vaaii"
set_persistent Viaai "Viaai"
set_persistent Vaaai "Vaaai"
set_persistent VSaaai "VSaaai"
set_persistent VSqjqj "VSqjqj"
set_persistent Vbbjj "Vbbjj"
set_persistent Vjbbj "Vjbbj"
set_persistent Vbbii "Vbbii"
set_persistent Vjbii "Vjbii"
set_persistent Vbbai "Vbbai"
set_persistent Vpiqj "Vpiqj"
set_persistent Vaajj "Vaajj"
set_persistent Viabj "Viabj"
set_persistent Vaabj "Vaabj"
server_barrier
#
#
endSIAL tran_uhf_no4v
