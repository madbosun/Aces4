import "MOI_reom_defs.sialx" 
import "MOI_reom_vars.sialx"

SIAL MOI_eom_elements

#    ------------------------------------------------------------------------
#
#    Compute the integrals and store in the served array saoint. 
#
#    Perform the first two stages of the transformation in two N5 steps. 
#
PROC TRAN_TRAN2 
#
#    ------------------------------------------------------------------------
#
print "Starting tran 1-2"
pardo mu, nu, lambda
#
    allocate Txxxi[mu,nu,lambda,*]
    allocate Txxxj[mu,nu,lambda,*]
#
    do sigma
#
	execute compute_integral_batch aoint[mu,nu,lambda,sigma]
#
	do i   
#
	    T1xxxi[mu,nu,lambda,i]  = aoint[mu,nu,lambda,sigma]*ca[sigma,i]
	    Txxxi[mu,nu,lambda,i]  += T1xxxi[mu,nu,lambda,i]  
#
	enddo i   
#
	do j   
#
	    T1xxxj[mu,nu,lambda,j]  = aoint[mu,nu,lambda,sigma]*ca[sigma,j]
	    Txxxj[mu,nu,lambda,j]  += T1xxxj[mu,nu,lambda,j]  
#
	enddo j   
#
    enddo sigma

    do i
	T1xxxi[mu,nu,lambda,i]         = Txxxi[mu,nu,lambda,i]
	prepare Vxxxi[mu,nu,lambda,i]  = T1xxxi[mu,nu,lambda,i]
    enddo i

    do j
	T1xxxj[mu,nu,lambda,j]         = Txxxj[mu,nu,lambda,j] 
	prepare Vxxxj[mu,nu,lambda,j]  = T1xxxj[mu,nu,lambda,j]
    enddo j

    deallocate Txxxi[mu,nu,lambda,*]
    deallocate Txxxj[mu,nu,lambda,*]
#
endpardo mu, nu, lambda 
server_barrier
#
#    ------------------------------------------------------------------------
#
print "Starting tran 2"
server_barrier
pardo mu, nu, i
#
    allocate L1xxxi[mu,nu,*,i]
#
    do lambda
#
	request Vxxxi[mu,nu,lambda,i] 
#
	L1xxxi[mu,nu,lambda,i] = Vxxxi[mu,nu,lambda,i]
#
    enddo lambda
#
    do i1
#
	Txxii[mu,nu,i1,i] = 0.0
#
	do lambda
#
	    T1xxii[mu,nu,i1,i] = L1xxxi[mu,nu,lambda,i]*ca[lambda,i1]
	    Txxii[mu,nu,i1,i] += T1xxii[mu,nu,i1,i]
#
	enddo lambda
#
	prepare Vxxii[mu,nu,i1,i] = Txxii[mu,nu,i1,i]
#
    enddo i1
#
    do a
#
	Txxai[mu,nu,a,i] = 0.0
#
	do lambda
#
	    T1xxai[mu,nu,a,i] = L1xxxi[mu,nu,lambda,i]*ca[lambda,a]
	    Txxai[mu,nu,a,i] += T1xxai[mu,nu,a,i]
#
	enddo lambda
#
	prepare Vxxai[mu,nu,a,i] = Txxai[mu,nu,a,i]
#
    enddo a
#
    deallocate L1xxxi[mu,nu,*,i]
endpardo mu, nu, i
pardo mu, nu, i
    allocate L2xxxi[mu,*,nu,i]

    do lambda
	request Vxxxi[mu,lambda,nu,i] 
	L2xxxi[mu,lambda,nu,i] = Vxxxi[mu,lambda,nu,i]
    enddo lambda

    do i1
	Txixi[mu,i1,nu,i] = 0.0

	do lambda
	    T1xixi[mu,i1,nu,i] = L2xxxi[mu,lambda,nu,i]*ca[lambda,i1]
	    Txixi[mu,i1,nu,i] += T1xixi[mu,i1,nu,i]
	enddo lambda

	prepare Vxixi[mu,i1,nu,i] = Txixi[mu,i1,nu,i]
    enddo i1

    deallocate L2xxxi[mu,*,nu,i]
endpardo mu, nu, i
pardo mu, nu, i
    allocate L3xxxi[*,mu,nu,i]

    do lambda
	request Vxxxi[lambda,mu,nu,i] 
	L3xxxi[lambda,mu,nu,i] = Vxxxi[lambda,mu,nu,i]
    enddo lambda

    do i1
	Tixxi[i1,mu,nu,i] = 0.0

	do lambda
	    T1ixxi[i1,mu,nu,i] = L3xxxi[lambda,mu,nu,i]*ca[lambda,i1]
	    Tixxi[i1,mu,nu,i] += T1ixxi[i1,mu,nu,i]
	enddo lambda

	prepare Vixxi[i1,mu,nu,i] = Tixxi[i1,mu,nu,i]
    enddo i1

    deallocate L3xxxi[*,mu,nu,i]
#
endpardo mu, nu, i
#
#    ------------------------------------------------------------------------
#
pardo mu, nu, j
#
    allocate L1xxxj[mu,nu,*,j]
#
    do lambda
#
	request Vxxxj[mu,nu,lambda,j] 
#
	L1xxxj[mu,nu,lambda,j] = Vxxxj[mu,nu,lambda,j]
#
    enddo lambda
#
    do j1
#
	Txxjj[mu,nu,j1,j] = 0.0
#
	do lambda
#
	T1xxjj[mu,nu,j1,j] = L1xxxj[mu,nu,lambda,j]*ca[lambda,j1]
	Txxjj[mu,nu,j1,j] += T1xxjj[mu,nu,j1,j]
#
	enddo lambda
#
	prepare Vxxjj[mu,nu,j1,j] = Txxjj[mu,nu,j1,j]
#
    enddo j1
#
    do b
#
	Txxbj[mu,nu,b,j] = 0.0
#
	do lambda
#
	T1xxbj[mu,nu,b,j] = L1xxxj[mu,nu,lambda,j]*ca[lambda,b]
	Txxbj[mu,nu,b,j] += T1xxbj[mu,nu,b,j]
#
	enddo lambda
#
	prepare Vxxbj[mu,nu,b,j] = Txxbj[mu,nu,b,j]
#
    enddo b
#
    do i
#
	Txxij[mu,nu,i,j] = 0.0
#
	do lambda
#
	T1xxij[mu,nu,i,j] = L1xxxj[mu,nu,lambda,j]*ca[lambda,i]
	Txxij[mu,nu,i,j] += T1xxij[mu,nu,i,j]
#
	enddo lambda
#
	prepare Vxxij[mu,nu,i,j] = Txxij[mu,nu,i,j]
#
    enddo i
#
    deallocate L1xxxj[mu,nu,*,j]
endpardo mu, nu, j
pardo mu, nu, j
    allocate L2xxxj[mu,*,nu,j]

    do lambda
	request Vxxxj[mu,lambda,nu,j] 
	L2xxxj[mu,lambda,nu,j] = Vxxxj[mu,lambda,nu,j]
    enddo lambda

    do j1
	Txjxj[mu,j1,nu,j] = 0.0

	do lambda
	T1xjxj[mu,j1,nu,j] = L2xxxj[mu,lambda,nu,j]*ca[lambda,j1]
	Txjxj[mu,j1,nu,j] += T1xjxj[mu,j1,nu,j]
	enddo lambda

	prepare Vxjxj[mu,j1,nu,j] = Txjxj[mu,j1,nu,j]
    enddo j1

    do i
	Txixj[mu,i,nu,j] = 0.0

	do lambda
	T1xixj[mu,i,nu,j] = L2xxxj[mu,lambda,nu,j]*ca[lambda,i]
	Txixj[mu,i,nu,j] += T1xixj[mu,i,nu,j]
	enddo lambda

	prepare Vxixj[mu,i,nu,j] = Txixj[mu,i,nu,j]
    enddo i

    deallocate L2xxxj[mu,*,nu,j]
endpardo mu, nu, j
pardo mu, nu, j
    allocate L3xxxj[*,mu,nu,j]

    do lambda
	request Vxxxj[lambda,mu,nu,j] 
	L3xxxj[lambda,mu,nu,j] = Vxxxj[lambda,mu,nu,j]
    enddo lambda

    do j1
	Tjxxj[j1,mu,nu,j] = 0.0

	do lambda
	T1jxxj[j1,mu,nu,j] = L3xxxj[lambda,mu,nu,j]*ca[lambda,j1]
	Tjxxj[j1,mu,nu,j] += T1jxxj[j1,mu,nu,j]
	enddo lambda

	prepare Vjxxj[j1,mu,nu,j] = Tjxxj[j1,mu,nu,j]
    enddo j1

    do i
	Tixxj[i,mu,nu,j] = 0.0

	do lambda
	T1ixxj[i,mu,nu,j] = L3xxxj[lambda,mu,nu,j]*ca[lambda,i]
	Tixxj[i,mu,nu,j] += T1ixxj[i,mu,nu,j]
	enddo lambda

	prepare Vixxj[i,mu,nu,j] = Tixxj[i,mu,nu,j]
    enddo i

    deallocate L3xxxj[*,mu,nu,j]
#
endpardo mu, nu, j
#
server_barrier
#
#    ------------------------------------------------------------------------
#
ENDPROC TRAN_TRAN2 
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
#    Perform the third N5 stage of the transformation.  
#
PROC TRAN_TRAN3 
#
#    ------------------------------------------------------------------------
#
print "Starting tran 3a"
pardo mu, i, i1
#
    allocate Lxixi[mu,i,*,i1] 
    allocate Lxxii[mu,*,i,i1] 
    allocate Lixxi[i,mu,*,i1] 
#
    do nu 
#
	request Vxixi[mu,i,nu,i1]  
	request Vxxii[mu,nu,i,i1]  
	request Vixxi[i,mu,nu,i1]  
#
	Lxixi[mu,i,nu,i1] = Vxixi[mu,i,nu,i1] 
	Lxxii[mu,nu,i,i1] = Vxxii[mu,nu,i,i1] 
	Lixxi[i,mu,nu,i1] = Vixxi[i,mu,nu,i1] 
#
    enddo nu 
#
    do a
#
	Txipi[mu,i,a,i1] = 0.0  
#
	do nu  
#
	T1xipi[mu,i,a,i1] = Lxixi[mu,i,nu,i1]*ca[nu,a]
	Txipi[mu,i,a,i1] += T1xipi[mu,i,a,i1]  
#
	enddo nu  
#
	prepare Vxipi[mu,i,a,i1] = Txipi[mu,i,a,i1]
#
    enddo a
    do i2
#
	Txipi[mu,i,i2,i1] = 0.0  
#
	do nu  
#
	T1xipi[mu,i,i2,i1] = Lxixi[mu,i,nu,i1]*ca[nu,i2]
	Txipi[mu,i,i2,i1] += T1xipi[mu,i,i2,i1]  
#
	enddo nu  
#
	prepare Vxipi[mu,i,i2,i1] = Txipi[mu,i,i2,i1]
#
    enddo i2
#
    do a
#
	Txaii[mu,a,i,i1] = 0.0 
	Tixai[i,mu,a,i1] = 0.0  
#
	do nu 
#
	T1xaii[mu,a,i,i1] = Lxxii[mu,nu,i,i1]*ca[nu,a]
	Txaii[mu,a,i,i1] += T1xaii[mu,a,i,i1]  
#
	T1ixai[i,mu,a,i1] = Lixxi[i,mu,nu,i1]*ca[nu,a]
	Tixai[i,mu,a,i1] += T1ixai[i,mu,a,i1]  

	enddo nu 
#
	prepare Vxaii[mu,a,i,i1] = Txaii[mu,a,i,i1]
	prepare Vixai[i,mu,a,i1] = Tixai[i,mu,a,i1]
#
    enddo a
#
#
    deallocate Lxixi[mu,i,*,i1] 
    deallocate Lxxii[mu,*,i,i1] 
    deallocate Lixxi[i,mu,*,i1] 
#
endpardo mu, i, i1
#
#    ------------------------------------------------------------------------
#
print "Starting tran 3b"
pardo mu, a, i
#
    allocate Lxxai[mu,*,a,i] 
#
    do nu 
#
	request Vxxai[mu,nu,a,i]  
	Lxxai[mu,nu,a,i] = Vxxai[mu,nu,a,i] 
#
    enddo nu 
#
    do a1 
#
	Txaai[mu,a1,a,i] = 0.0  
#
	do nu  
#
	T1xaai[mu,a1,a,i] = Lxxai[mu,nu,a,i]*ca[nu,a1]
	Txaai[mu,a1,a,i] += T1xaai[mu,a1,a,i]  
#
	enddo nu  
#
	prepare Vxaai[mu,a1,a,i] = Txaai[mu,a1,a,i]
#
    enddo a1 
#
#
    deallocate Lxxai[mu,*,a,i] 
#
endpardo mu, a, i
#
#    ------------------------------------------------------------------------
#
print "Starting tran 3e"
pardo mu, i, j
#
    allocate Lxixj[mu,i,*,j] 
#
    do nu 
#
	request Vxixj[mu,i,nu,j]  
#
	Lxixj[mu,i,nu,j] = Vxixj[mu,i,nu,j] 
#
    enddo nu 
#
    do a 
#
	Txiqj[mu,i,a,j] = 0.0  
#
	do nu  
#
	T1xiqj[mu,i,a,j] = Lxixj[mu,i,nu,j]*ca[nu,a]
	Txiqj[mu,i,a,j] += T1xiqj[mu,i,a,j]  
#
	enddo nu  
#
	prepare Vxiqj[mu,i,a,j] = Txiqj[mu,i,a,j]
#
    enddo a 
    do i1
#
	Txiqj[mu,i,i1,j] = 0.0  
#
	do nu  
#
	T1xiqj[mu,i,i1,j] = Lxixj[mu,i,nu,j]*ca[nu,i1]
	Txiqj[mu,i,i1,j] += T1xiqj[mu,i,i1,j]  
#
	enddo nu  
#
	prepare Vxiqj[mu,i,i1,j] = Txiqj[mu,i,i1,j]
#
    enddo i1
#
#
    deallocate Lxixj[mu,i,*,j] 
#
endpardo mu, i, j
#
#    ------------------------------------------------------------------------
#    
server_barrier
#
ENDPROC TRAN_TRAN3 
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
PROC TRAN_TRAN4 
#
#    ------------------------------------------------------------------------
#
print "Starting tran 4:VSpipi"
pardo a1, i, i1
#
    allocate Lxipi[*,i,a1,i1] 
#
    do mu 
#
	request Vxipi[mu,i,a1,i1]  
	request Vxipi[mu,i1,a1,i]  
	Lxipi[mu,i,a1,i1]  = Vxipi[mu,i,a1,i1] 
	Txipi[mu,i,a1,i1]  = Vxipi[mu,i1,a1,i] 
	Lxipi[mu,i,a1,i1] -= Txipi[mu,i,a1,i1] 
#
    enddo mu  
#
    do a2
#
	Tpipi[a2,i,a1,i1] = 0.0  
#
	do mu  
#
	T1pipi[a2,i,a1,i1] = Lxipi[mu,i,a1,i1]*ca[mu,a2]
	Tpipi[a2,i,a1,i1] += T1pipi[a2,i,a1,i1]  
#
	enddo mu  
#
	prepare VSpipi[a2,i,a1,i1] = Tpipi[a2,i,a1,i1] 
#
    enddo a2

    do i2
#
	Tpipi[i2,i,a1,i1] = 0.0  
#
	do mu  
#
	T1pipi[i2,i,a1,i1] = Lxipi[mu,i,a1,i1]*ca[mu,i2]
	Tpipi[i2,i,a1,i1] += T1pipi[i2,i,a1,i1]  
#
	enddo mu  
#
	prepare VSpipi[i2,i,a1,i1] = Tpipi[i2,i,a1,i1] 
#
    enddo i2
#
    deallocate Lxipi[*,i,a1,i1] 
#
endpardo a1, i, i1
pardo i3, i, i1
#
    allocate Lxipi[*,i,i3,i1] 
#
    do mu 
#
	request Vxipi[mu,i,i3,i1]  
	request Vxipi[mu,i1,i3,i]  
	Lxipi[mu,i,i3,i1]  = Vxipi[mu,i,i3,i1] 
	Txipi[mu,i,i3,i1]  = Vxipi[mu,i1,i3,i] 
	Lxipi[mu,i,i3,i1] -= Txipi[mu,i,i3,i1] 
#
    enddo mu  
#
    do a2
#
	Tpipi[a2,i,i3,i1] = 0.0  
#
	do mu  
#
	T1pipi[a2,i,i3,i1] = Lxipi[mu,i,i3,i1]*ca[mu,a2]
	Tpipi[a2,i,i3,i1] += T1pipi[a2,i,i3,i1]  
#
	enddo mu  
#
	prepare VSpipi[a2,i,i3,i1] = Tpipi[a2,i,i3,i1] 
#
    enddo a2

    do i2
#
	Tpipi[i2,i,i3,i1] = 0.0  
#
	do mu  
#
	T1pipi[i2,i,i3,i1] = Lxipi[mu,i,i3,i1]*ca[mu,i2]
	Tpipi[i2,i,i3,i1] += T1pipi[i2,i,i3,i1]  
#
	enddo mu  
#
	prepare VSpipi[i2,i,i3,i1] = Tpipi[i2,i,i3,i1] 
#
    enddo i2
#
    deallocate Lxipi[*,i,i3,i1] 
#
endpardo i3, i, i1
#
print "Starting tran 4:Vaaii|Viaai"
pardo a, i, i1
#
    allocate Lxaii[*,a,i,i1] 
    allocate Lixai[i,*,a,i1] 
#
    do mu 
#
	request Vxaii[mu,a,i,i1]  
	request Vixai[i,mu,a,i1]  
#
	Lxaii[mu,a,i,i1] = Vxaii[mu,a,i,i1]  
	Lixai[i,mu,a,i1] = Vixai[i,mu,a,i1] 
#
    enddo mu 
#
    do a1 
#
	Taaii[a1,a,i,i1] = 0.0  
#
	do mu  
#
	T1aaii[a1,a,i,i1] = Lxaii[mu,a,i,i1]*ca[mu,a1]
	Taaii[a1,a,i,i1] += T1aaii[a1,a,i,i1]  
#
	enddo mu  
#
	prepare Vaaii[a1,a,i,i1] = Taaii[a1,a,i,i1]
#
    enddo a1 
#
    deallocate Lxaii[*,a,i,i1] 
#
    do a1 
#
	Tiaai[i,a1,a,i1] = 0.0  
#
	do mu  
#
	T1iaai[i,a1,a,i1] = Lixai[i,mu,a,i1]*ca[mu,a1]
	Tiaai[i,a1,a,i1] += T1iaai[i,a1,a,i1]   
#
	enddo mu  
#
	prepare Viaai[i,a1,a,i1] = Tiaai[i,a1,a,i1]
#
    enddo a1 
#
    deallocate Lixai[i,*,a,i1] 
#
endpardo a, i, i1
# 
print "Starting tran 4:Vaaai|VSaaai"
pardo a, a1, i
#
    allocate L1xaai[*,a,a1,i] 
#
    do mu 
#
	request Vxaai[mu,a,a1,i]  
#
	L1xaai[mu,a,a1,i]  = Vxaai[mu,a,a1,i]
#
    enddo mu 
#
    do a2  
#
	Taaai[a2,a,a1,i] = 0.0 
#
	do mu 
#
	T1aaai[a2,a,a1,i] = L1xaai[mu,a,a1,i]*ca[mu,a2]
	Taaai[a2,a,a1,i] += T1aaai[a2,a,a1,i]  
#
	enddo mu 
#
	T2aaai[a2,a,a1,i]          = Taaai[a2,a,a1,i]
	T1aaai[a1,a,a2,i]           = Taaai[a2,a,a1,i] 
	T1aaai[a1,a,a2,i]          *= -1.0  
	prepare Vaaai [a2,a,a1,i]  += Taaai [a2,a,a1,i]
	prepare VSaaai[a2,a,a1,i]  += T2aaai [a2,a,a1,i]
	prepare VSaaai[a1,a,a2,i]  += T1aaai[a1,a,a2,i]
#
    enddo a2  
#
    deallocate L1xaai[*,a,a1,i] 
#
endpardo a, a1, i
# 
#
print "Starting tran 4:Vpiqj"
pardo b1, i, j
#
    allocate Lxiqj[*,i,b1,j] 
#
    do mu  
#
	request Vxiqj[mu,i,b1,j]  
	Lxiqj[mu,i,b1,j] = Vxiqj[mu,i,b1,j] 
#
    enddo mu  
#
    do a1
#
	Tpiqj[a1,i,b1,j] = 0.0 
#
	do mu  
#
	T1piqj[a1,i,b1,j] = Lxiqj[mu,i,b1,j]*ca[mu,a1]
	Tpiqj[a1,i,b1,j] += T1piqj[a1,i,b1,j]  
#
	enddo mu  
#
	prepare Vpiqj[a1,i,b1,j] = Tpiqj[a1,i,b1,j]
#
    enddo a1
    do i1
#
	Tpiqj[i1,i,b1,j] = 0.0 
#
	do mu  
#
	T1piqj[i1,i,b1,j] = Lxiqj[mu,i,b1,j]*ca[mu,i1]
	Tpiqj[i1,i,b1,j] += T1piqj[i1,i,b1,j]  
#
	enddo mu  
#
	prepare Vpiqj[i1,i,b1,j] = Tpiqj[i1,i,b1,j]
#
    enddo i1
#
    deallocate Lxiqj[*,i,b1,j] 
#
endpardo b1, i, j
pardo j1, i, j
#
    allocate Lxiqj[*,i,j1,j] 
#
    do mu  
#
	request Vxiqj[mu,i,j1,j]  
	Lxiqj[mu,i,j1,j] = Vxiqj[mu,i,j1,j] 
#
    enddo mu  
#
    do a1
#
	Tpiqj[a1,i,j1,j] = 0.0 
#
	do mu  
#
	T1piqj[a1,i,j1,j] = Lxiqj[mu,i,j1,j]*ca[mu,a1]
	Tpiqj[a1,i,j1,j] += T1piqj[a1,i,j1,j]  
#
	enddo mu  
#
	prepare Vpiqj[a1,i,j1,j] = Tpiqj[a1,i,j1,j]
#
    enddo a1
    do i1
#
	Tpiqj[i1,i,j1,j] = 0.0 
#
	do mu  
#
	T1piqj[i1,i,j1,j] = Lxiqj[mu,i,j1,j]*ca[mu,i1]
	Tpiqj[i1,i,j1,j] += T1piqj[i1,i,j1,j]  
#
	enddo mu  
#
	prepare Vpiqj[i1,i,j1,j] = Tpiqj[i1,i,j1,j]
#
    enddo i1
#
    deallocate Lxiqj[*,i,j1,j] 
#
endpardo j1, i, j
#
#    ------------------------------------------------------------------------
#
ENDPROC TRAN_TRAN4 
#
#    ------------------------------------------------------------------------ 
#
PROC TRAN_UHF 
# 
#        CALL COMP_INTEGRALS # --> compute integrals and put into served array 
CALL TRAN_TRAN2     # --> performs the first two stages of the 
#     two-electron integral transformation.  
CALL TRAN_TRAN3     # --> performs the third stage   
#     two-electron integral transformation.  
CALL TRAN_TRAN4     # --> performs the fourth stage of the  
#     two-electron integral transformation.  
#
ENDPROC TRAN_UHF 

#    ------------------------------------------------------------------------
#    HBAR section
#
#    ported from ACESIII xreom_rhf_pro.sial
#    ------------------------------------------------------------------------

PROC HBAR_AB_MCPT

#     alpha-alpha spin component first. 
#     --------------------------------- 

pardo a, a1 

# diagram 1
    tpp[a,a1] = Fock_a[a,a1]       

# diagram 3
    do i 
	t1pp[a,a1] = St1a[a,i]*Fock_a[i,a1] 
	tpp[a,a1] -= t1pp[a,a1] 
    enddo i 

    put HBAR_aa[a,a1] += tpp[a,a1] 

endpardo a, a1 

pardo a, a1, a2, i  

    request VSaaai[a1,a,a2,i]   

# diagram 2
    t1pp[a,a1]         = VSaaai[a1,a,a2,i]*St1a[a2,i] 
    put HBAR_aa[a,a1]                 += t1pp[a,a1] 

endpardo a, a1, a2, i  

pardo a, a1, b, j  

    request Vaaai[a1,a,b,j]   
    t1pp[a,a1]         = Vaaai[a1,a,b,j]*St1b[b,j] 
    tppqq[a,a1,j,b]    = Vaaai[a1,a,b,j]

# diagram 2
    put HBAR_aa[a,a1]                += t1pp[a,a1] 

# diagram 1
    prepare HBAR_AIBC_aabb[a,a1,j,b] += tppqq[a,a1,j,b] 

endpardo a, a1, b, j  

# diagram 4
pardo a, i1, a2, i  

    request T2aa[a,i,a2,i1]  
    tpppp[a,i,a2,i1]  = T2aa[a,i,a2,i1] 

    do a1 
	request VSpipi[a2,i1,a1,i]    
	t1pp[a,a1]         = tpppp[a,i,a2,i1]*VSpipi[a2,i1,a1,i] 
	t1pp[a,a1]        *= -0.5  
	put HBAR_aa[a,a1] += t1pp[a,a1] 
    enddo a1 

endpardo a, i1, a2, i  

# diagram 4
pardo a, i, b, j  

    request T2ab[a,i,b,j]  
    tppqq[a,i,b,j]  = T2ab[a,i,b,j] 

    do a1  

	request Vpiqj[a1,i,b,j]    
	t1pp[a,a1]         = tppqq[a,i,b,j]*Vpiqj[a1,i,b,j] 
	t1pp[a,a1]        *= -1.0  
	put HBAR_aa[a,a1] += t1pp[a,a1] 

    enddo a1  

endpardo a, i, b, j  

pardo a,a1
    get MOI_HBAR_aa[a,a1]
    put HBAR_aa[a,a1] += MOI_HBAR_aa[a,a1]
endpardo a,a1

#     alpha-alpha spin component done. 
#     -------------------------------- 

server_barrier 
do a 
do a1 
GET HBAR_aa[a,a1] 
LHBAR_aa[a,a1] = HBAR_aa[a,a1] 
enddo a1 
enddo a 
server_barrier 

ENDPROC HBAR_AB_MCPT

PROC HBAR_IJ_MCPT
#     ------------

#     alpha-alpha spin component first. 
#     --------------------------------- 

pardo i, i1 

# diagram 1
    tpp[i1,i] = Fock_a[i1,i] 

# diagram 3
    do a 
	t1pp[i1,i] = Fock_a[i1,a]*St1a[a,i] 
	tpp[i1,i] += t1pp[i1,i] 
    enddo a 

# diagram 2
    do a 
    do i2 
	request VSpipi[a,i2,i,i1]  
	t1pp[i1,i] = VSpipi[a,i2,i,i1]*St1a[a,i2]  
	tpp[i1,i] += t1pp[i1,i] 
    enddo i2 
    enddo a 

# diagram 2
    do b 
    do j 
	request Vpiqj[i,i1,b,j]  
	t1pp[i1,i] = Vpiqj[i,i1,b,j]*St1b[b,j]  
	tpp[i1,i] += t1pp[i1,i] 
    enddo j 
    enddo b 

# diagram 4
    do a 
    do a1 
    do i2 
	request T2aa[a,i,a1,i2]  
	request VSpipi[a,i1,a1,i2]   

	tpppp[a,i,a1,i2]  = T2aa[a,i,a1,i2]

	t1pp[i1,i]        = tpppp[a,i,a1,i2]*VSpipi[a,i1,a1,i2] 
	t1pp[i1,i]       *= 0.5 
	tpp[i1,i]        += t1pp[i1,i] 
    enddo i2 
    enddo a1 
    enddo a 

# diagram 4
    do a 
    do b 
    do j 
	request T2ab[a,i,b,j]  
	request Vpiqj[a,i1,b,j]   

	tppqq[a,i,b,j]  = T2ab[a,i,b,j]
	t1pp[i1,i]      = tppqq[a,i,b,j]*Vpiqj[a,i1,b,j] 
	tpp[i1,i]      += t1pp[i1,i] 
    enddo j 
    enddo b 
    enddo a 

    get MOI_HBAR_ii[i1,i]
    tpp[i1,i] += MOI_HBAR_ii[i1,i]

    put HBAR_ii[i1,i] = tpp[i1,i] 

endpardo i, i1 

#     done alpha-alpha spin component. 
#     -------------------------------- 
server_barrier 
do i 
do i1 
GET              HBAR_ii[i,i1] 
LHBAR_ii[i,i1] = HBAR_ii[i,i1]  
enddo i1 
enddo i 
server_barrier 

#     done beta-beta spin component. 
#     ------------------------------ 

ENDPROC HBAR_IJ_MCPT

PROC HBAR_IB_MCPT
#     ------------

#     alpha-alpha spin component first. 
#     --------------------------------- 

pardo i, a 

# diagram 1
    tpp[i,a] = Fock_a[i,a] 

# diagram 2
    do a1 
    do i1 
	request VSpipi[a,i,a1,i1]  
	t1pp[i,a] = VSpipi[a,i,a1,i1]*St1a[a1,i1] 
	tpp[i,a] += t1pp[i,a] 
    enddo i1 
    enddo a1 

# diagram 2
    do b 
    do j 
	request Vpiqj[a,i,b,j]  
	t1pp[i,a] = Vpiqj[a,i,b,j]*St1b[b,j] 
	tpp[i,a] += t1pp[i,a] 
    enddo j 
    enddo b 

    get MOI_HBAR_ia[i,a]
    tpp[i,a] += MOI_HBAR_ia[i,a]

    put HBAR_ia[i,a] = tpp[i,a] 

endpardo i, a 

#     done alpha-alpha spin component. 
#     -------------------------------- 

server_barrier 
do a 
do i 
GET HBAR_ia[i,a] 
LHBAR_ia[i,a] = HBAR_ia[i,a]  
enddo i 
enddo a 
do b 
do j 
LHBAR_jb[j,b] = LHBAR_ia[j,b]  
enddo j 
enddo b 
server_barrier 

ENDPROC HBAR_IB_MCPT

PROC HBAR_IJKL_MCPT
#     --------------

#     (alpha,alpha,alpha,alpha) spin component. 
#     ----------------------------------------- 

pardo i, i2, i1, i3 

# diagram 1
    request VSpipi[i,i1,i2,i3]  
    tpppp[i,i1,i2,i3] = VSpipi[i,i1,i2,i3] 

# diagram 2
    do a
	request VSpipi[i1,i,a,i2]   
	t1pppp[i,i1,i2,i3] = VSpipi[i1,i,a,i2]*St1a[a,i3] 
	tpppp[i,i1,i2,i3] += t1pppp[i,i1,i2,i3] 
    enddo a

# diagram 2
    do a
	request VSpipi[i3,i,a,i2]   
	t1pppp[i,i1,i2,i3] = VSpipi[i3,i,a,i2]*St1a[a,i1] 
	tpppp[i,i1,i2,i3] -= t1pppp[i,i1,i2,i3] 
    enddo a

# diagram 3
    do a 
    do a1 
	request VSpipi[a,i,a1,i2]  
	request T2aa[a,i1,a1,i3]  

	t1pppp[a,i1,a1,i3]  = T2aa[a,i1,a1,i3] 

	t4pppp[i,i1,i2,i3] = VSpipi[a,i,a1,i2]*t1pppp[a,i1,a1,i3] 
	t4pppp[i,i1,i2,i3] *= 0.5 
	tpppp[i,i1,i2,i3]  += t4pppp[i,i1,i2,i3] 
    enddo a1 
    enddo a 

    prepare HBAR_iiii[i,i1,i2,i3] = tpppp[i,i1,i2,i3] 

endpardo i, i2, i1, i3 

#     done (alpha,alpha,alpha,alpha) spin component. 
#     ---------------------------------------------- 

#     (beta,beta,beta,beta) spin component. 
#     ------------------------------------- 

#     done (beta,beta,beta,beta) spin component. 
#     ------------------------------------------ 

#     (alpha,alpha,beta,beta) spin component. 
#     --------------------------------------- 

pardo i, i1, j2, j3 

# diagram 1
    request Vpiqj[i,i1,j2,j3]  
    tppqq[i,i1,j2,j3] = Vpiqj[i,i1,j2,j3] 

# diagram 2
    do b
	request Vpiqj[i1,i,b,j2]   
	t1ppqq[i,i1,j2,j3] = Vpiqj[i1,i,b,j2]*St1b[b,j3] 
	tppqq[i,i1,j2,j3] += t1ppqq[i,i1,j2,j3] 
    enddo b

# diagram 2
    do a
	request Vpiqj[a,i,j2,j3]   
	t1ppqq[i,i1,j2,j3] = Vpiqj[a,i,j2,j3]*St1a[a,i1] 
	tppqq[i,i1,j2,j3] += t1ppqq[i,i1,j2,j3] 
    enddo a

# diagram 3
    do a 
    do b 
	request Vpiqj[a,i,b,j2]  
	request T2ab[a,i1,b,j3]  

	t1ppqq[a,i1,b,j3]  = T2ab[a,i1,b,j3] 
	t3ppqq[i,i1,j2,j3] = Vpiqj[a,i,b,j2]*t1ppqq[a,i1,b,j3] 
	tppqq[i,i1,j2,j3] += t3ppqq[i,i1,j2,j3] 
    enddo b 
    enddo a 

    prepare HBAR_iijj[i,i1,j2,j3] = tppqq[i,i1,j2,j3] 

endpardo i, i1, j2, j3 

#     done (alpha,alpha,beta,beta) spin component. 
#     -------------------------------------------- 

ENDPROC HBAR_IJKL_MCPT

PROC HBAR_AIBC_MCPT
#     --------------

#     There are four spin cases to compute:
#     1. H^{ai}_{bc) --> HBAR_AIBC_aaaa  
#     2. H^{AI}_{BC) --> HBAR_AIBC_bbbb  
#     3. H^{Ai}_{Bc) --> HBAR_AIBC_bbaa  
#     4. H^{aI}_{bC) --> HBAR_AIBC_aabb  

#     Note that since I 'always' store arrays in (11|22) form the 
#     notation, although valid, is slightly confusing. The 
#     storage pattern is therefore array(a,b,i,c).   

#    ------------------------------------------------------------------------

#     AAAA spin combination. 
#     ---------------------- 

#     BBBB spin combination. 
#     ---------------------- 

#     AABB spin combination. 
#     ---------------------- 

pardo i1, a1, b2, j 

    request Vpiqj[a1,i1,b2,j]  

    do a 
	t1ppqq[a,a1,j,b2]                  = Vpiqj[a1,i1,b2,j]*St1a[a,i1] 
	t1ppqq[a,a1,j,b2]                 *= -1.0  
	prepare HBAR_AIBC_aabb[a,a1,j,b2] += t1ppqq[a,a1,j,b2] 
    enddo a 

endpardo i1, a1, b2, j 

#     BBAA spin combination. 
#     ---------------------- 

ENDPROC HBAR_AIBC_MCPT

PROC HBAR_JKIA_MCPT
#     --------------

#     There are four spin cases to compute:
#     1. H^{jk}_{ia) --> HBAR_JKIA_aaaa  
#     2. H^{JK}_{IA) --> HBAR_JKIA_bbbb  
#     3. H^{Jk}_{Ia) --> HBAR_JKIA_bbaa  
#     4. H^{jK}_{iA) --> HBAR_JKIA_aabb  

#     Note that since I 'always' store arrays in (11|22) form the 
#     notation, although valid, is slightly confusing. The 
#     storage pattern is therefore array(a,b,i,c).   

#    ------------------------------------------------------------------------

#     AAAA spin combination. 
#     ---------------------- 

pardo i, i1, i2, a 

    request VSpipi[i,i1,a,i2]   
    tpppp[i,i1,a,i2] = VSpipi[i,i1,a,i2] 

    do a1 
	request VSpipi[a1,i1,a,i2]   
	t1pppp[i,i1,a,i2] = VSpipi[a1,i1,a,i2]*St1a[a1,i] 
	tpppp[i,i1,a,i2] += t1pppp[i,i1,a,i2] 
    enddo a1 

    t1pppp[i1,i,i2,a]                 = tpppp[i,i1,a,i2] 
    prepare HBAR_JKIA_aaaa[i1,i,i2,a] = t1pppp[i1,i,i2,a] 

endpardo i, i1, i2, a 

#     BBBB spin combination. 
#     ---------------------- 

#     AABB spin combination. 
#     ---------------------- 

pardo i, i1, j2, b 

    request Vpiqj[i,i1,b,j2]   
    tppqq[i,i1,b,j2] = Vpiqj[i,i1,b,j2] 

    do a1 
	request Vpiqj[a1,i1,b,j2]   
	t1ppqq[i,i1,b,j2] = Vpiqj[a1,i1,b,j2]*St1a[a1,i] 
	tppqq[i,i1,b,j2] += t1ppqq[i,i1,b,j2] 
    enddo a1 

    t1ppqq[i1,i,j2,b]                 = tppqq[i,i1,b,j2] 
    prepare HBAR_JKIA_aabb[i1,i,j2,b] = t1ppqq[i1,i,j2,b] 

endpardo i, i1, j2, b 

#     BBAA spin combination. 
#     ---------------------- 

ENDPROC HBAR_JKIA_MCPT

PROC HBAR_IAJK_MCPT
#     --------------

#     There are four spin cases to compute:
#     1. H^{ia)_{jk} --> HBAR_IAJK_aaaa  
#     1. H^{IA)_{JK} --> HBAR_IAJK_bbbb  
#     1. H^{Ia)_{Jk} --> HBAR_IAJK_bbaa  
#     1. H^{iA)_{jK} --> HBAR_IAJK_aabb  

#     Note that since I 'always' store arrays in (11|22) form the 
#     notation, although valid, is slightly confusing. The 
#     storage pattern is therefore array(a,b,i,c).   

#    ------------------------------------------------------------------------

#     Form the two-particle intermediates needed. 
#     ------------------------------------------- 

pardo i1, a1, a, i

    request Viaai[i1,a1,a,i]  # +
    request Vaaii[a,a1,i1,i]  # -
    Tiaai[i1,a1,a,i]  = Vaaii[a,a1,i1,i]
    Tiaai[i1,a1,a,i] -= Viaai[i1,a1,a,i]
    Tiaai[i1,a1,a,i] *= -1.0

    prepare WHIAAI[i1,a1,a,i] = Tiaai[i1,a1,a,i]

endpardo i1, a1, a, i

pardo j1, j, a, a1

    request Vaaii[a,a1,j1,j] 
    Tjjaa[j1,j,a,a1]  = Vaaii[a,a1,j1,j]
    Tjjaa[j1,j,a,a1] *= -1.0

    prepare WHJJAA[j1,j,a,a1] = Tjjaa[j1,j,a,a1]

endpardo j1, j, a, a1 

server_barrier 

#     AAAA spin combination. 
#     ---------------------- 

pardo a, i, i1, i2

    request VSpipi[i,i1,a,i2] 
    Tiiai[i,i1,a,i2]  = VSpipi[i,i1,a,i2]

    do i3
	request VSpipi[i,i1,i3,i2] 
	request t1a_old[a,i3]
	Tai[a,i3]  = St1a[a,i3]
	Tai[a,i3] += t1a_old[a,i3]
	T1iiai[i,i1,a,i2] = VSpipi[i,i1,i3,i2]*Tai[a,i3]
	Tiiai[i,i1,a,i2] -= T1iiai[i,i1,a,i2]
    enddo i3

    prepare HBAR_IAJK_aaaa[i,i1,a,i2] += Tiiai[i,i1,a,i2]

endpardo a, i, i1, i2

pardo i, i1, a, i2

    Tiiai[i,i1,a,i2]  = 0.0  
    TSiiai[i,i2,a,i1] = 0.0

    do a1

	request T2aa[a,i1,a1,i2] 
# whiaai contains anti-symmetrized integrals now
	request WHIAAI[i,a1,a,i2] 

	T1iiai[i,i1,a,i2]  = T2aa[a,i1,a1,i2]*Fock_a[i,a1]
	Tiiai[i,i1,a,i2]  -= T1iiai[i,i1,a,i2]

        TSiiai[i,i2,a,i1] = 0.0

        Tai[a1,i1] = St1a[a1,i1]
	request t1a_old[a1,i1]
	Tai[a1,i1] += t1a_old[a1,i1]
	T1iiai[i,i1,a,i2]  = WHIAAI[i,a1,a,i2]*Tai[a1,i1]
	T2iiai[i,i2,a,i1]  = T1iiai[i,i1,a,i2]

	Tiiai[i,i1,a,i2]  += T1iiai[i,i1,a,i2]
	TSiiai[i,i2,a,i1] -= T2iiai[i,i2,a,i1]

    enddo a1

    prepare HBAR_IAJK_aaaa[i,i1,a,i2] += Tiiai[i,i1,a,i2]
    prepare HBAR_IAJK_aaaa[i,i2,a,i1] += TSiiai[i,i2,a,i1]

endpardo i, i1, a, i2

pardo i, a, a1, a2

    request VSaaai[a2,a,a1,i]  # +

    do i1
	do i2

	    request T2aa[a1,i1,a2,i2] 
	    tpppp[a1,i1,a2,i2]  = T2aa[a1,i1,a2,i2] 

	    T1iiai[i,i1,a,i2]   = tpppp[a1,i1,a2,i2]*VSaaai[a2,a,a1,i]
	    T1iiai[i,i1,a,i2]  *= 0.5
	    prepare HBAR_IAJK_aaaa[i,i1,a,i2] += T1iiai[i,i1,a,i2]

	enddo i2
    enddo i1

endpardo i, a, a1, a2

pardo i, i1, a, i2

    Tiiai[i,i1,a,i2]  = 0.0  
    TSiiai[i,i2,a,i1] = 0.0

    do a1
    do i3

	request T2aa[a,i2,a1,i3] 
	request VSpipi[i1,i,a1,i3]    # +

	T1iiai[i,i1,a,i2]   = VSpipi[i1,i,a1,i3]*T2aa[a,i2,a1,i3]
	T2iiai[i,i2,a,i1]   = T1iiai[i,i1,a,i2]
	Tiiai[i,i1,a,i2]   += T1iiai[i,i1,a,i2]
	TSiiai[i,i2,a,i1]  -= T2iiai[i,i2,a,i1]

    enddo i3
    enddo a1

    prepare HBAR_IAJK_aaaa[i,i1,a,i2] += Tiiai[i,i1,a,i2]
    prepare HBAR_IAJK_aaaa[i,i2,a,i1] += TSiiai[i,i2,a,i1]

endpardo i, i1, a, i2

pardo i, i1, a, i2

    Tiiai[i,i1,a,i2]  = 0.0  
    TSiiai[i,i2,a,i1] = 0.0

    do b
    do j

	request T2ab[a,i2,b,j] 
	request Vpiqj[i1,i,b,j]     # +

	T1iiai[i,i1,a,i2]  = Vpiqj[i1,i,b,j]*T2ab[a,i2,b,j]
	Tiiai[i,i1,a,i2]  += T1iiai[i,i1,a,i2]

	T2iiai[i,i2,a,i1]  = T1iiai[i,i1,a,i2]
	TSiiai[i,i2,a,i1] -= T2iiai[i,i2,a,i1]

    enddo j
    enddo b

    prepare HBAR_IAJK_aaaa[i,i1,a,i2] += Tiiai[i,i1,a,i2]
    prepare HBAR_IAJK_aaaa[i,i2,a,i1] += TSiiai[i,i2,a,i1]

endpardo i, i1, a, i2

pardo i, i1, a, i2
    request MOI_HBAR_IAJK_aabb[i,i1,a,i2]
    request MOI_HBAR_IAJK_aabb[i,i2,a,i1]
    tpppp[i,i1,a,i2]  = MOI_HBAR_IAJK_aabb[i,i1,a,i2]
    t1pppp[i,i2,a,i1] = MOI_HBAR_IAJK_aabb[i,i2,a,i1]
    tpppp[i,i1,a,i2] -= t1pppp[i,i2,a,i1]
    prepare HBAR_IAJK_aaaa[i,i1,a,i2] += tpppp[i,i1,a,i2]
endpardo i, i1, a, i2
#     AABB spin combination. 
#     ---------------------- 


pardo i, i1, b, j

    request Vpiqj[i,i1,b,j] 
    Tiibj[i,i1,b,j] = Vpiqj[i,i1,b,j]

    do a

	request T2ab[a,i1,b,j] 
	request Viaai[i,a,b,j] 

	T1iibj[i,i1,b,j] = T2ab[a,i1,b,j]*Fock_a[i,a]
	Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j]

	Tai[a,i1] = St1a[a,i1]
	request t1a_old[a,i1]
	Tai[a,i1] += t1a_old[a,i1]
	T1iibj[i,i1,b,j] = Viaai[i,a,b,j]*Tai[a,i1]
	Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j]

	do b1

	    request T2ab[a,i1,b1,j] 
	    request Vaaai[b1,b,a,i]   

	    tppqq[a,i1,b1,j]  = T2ab[a,i1,b1,j] 

	    T1iibj[i,i1,b,j]  = Vaaai[b1,b,a,i]*tppqq[a,i1,b1,j]
	    Tiibj[i,i1,b,j]  += T1iibj[i,i1,b,j]

	enddo b1

	do i2

	    request T2ab[a,i2,b,j] 
	    request VSpipi[i1,i,a,i2]   # +

	    T1iibj[i,i1,b,j] = VSpipi[i1,i,a,i2]*T2ab[a,i2,b,j]
	    Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j]

	enddo i2

	do j1

	    request T2ab[a,i1,b,j1] 
	    request Vpiqj[a,i,j,j1]      # +

	    T1iibj[i,i1,b,j] = Vpiqj[a,i,j,j1]*T2ab[a,i1,b,j1]
	    Tiibj[i,i1,b,j] -= T1iibj[i,i1,b,j]

	enddo j1

    enddo a

    do j1

	request Vpiqj[i,i1,j1,j] 
	request t1a_old[b,j1]
	Tai[b,j1]  = St1b[b,j1]
	Tai[b,j1] += t1a_old[b,j1]

	T1iibj[i,i1,b,j] = Vpiqj[i,i1,j1,j]*Tai[b,j1]
	Tiibj[i,i1,b,j] -= T1iibj[i,i1,b,j]

    enddo j1

    do b1

        request Vaaii[b,b1,i,i1]
        Tiibb[i,i1,b,b1] = Vaaii[b,b1,i,i1]

        Tai[b1,j] = St1b[b1,j]
	request t1a_old[b1,j]
	Tai[b1,j] += t1a_old[b1,j]
	T1iibj[i,i1,b,j] = Tiibb[i,i1,b,b1]*St1b[b1,j]
	Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j]

	do j2

	    request T2bb[b1,j2,b,j] 
	    request Vpiqj[i1,i,b1,j2]    # +

	    T1iibj[i,i1,b,j] = Vpiqj[i1,i,b1,j2]*T2bb[b1,j2,b,j]
	    Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j]

	enddo j2

    enddo b1

    request MOI_HBAR_IAJK_aabb[i,i1,b,j]
    Tiibj[i,i1,b,j] += MOI_HBAR_IAJK_aabb[i,i1,b,j]

    prepare HBAR_IAJK_aabb[i,i1,b,j] = Tiibj[i,i1,b,j]

endpardo i, i1, b, j

#     BBAA spin combination. 
#     ---------------------- 

#     BBBB spin combination. 
#     ---------------------- 

server_barrier 

ENDPROC HBAR_IAJK_MCPT

PROC HBAR_AJIB_MCPT
#     --------------

#     There are four spin cases to compute:
#     1. H^{aj)_{ib} --> HBAR_AJIB_aaaa  
#     2. H^{AJ)_{IB} --> HBAR_AJIB_bbbb  
#     3. H^{aJ)_{iB} --> HBAR_AJIB_aabb  
#     4. H^{Aj)_{Ib} --> HBAR_AJIB_bbaa  
#     5. H^{Aj)_{iB} --> HBAR_AJIB_iibb   
#     6. H^{aJ)_{Ib} --> HBAR_AJIB_jjaa   

#     Note that since I 'always' store arrays in (11|22) form the 
#     notation, although valid, is slightly confusing. The 
#     storage pattern is therefore array(a,b,i,c).   

#    ------------------------------------------------------------------------

#     AAAA spin combination. 
#     ---------------------- 

pardo i1, a1, a, i

    request Viaai[i1,a1,a,i]  
    request Vaaii[a,a1,i1,i]  
    Tiaai[i1,a1,a,i]                   = Vaaii[a,a1,i1,i]
    Tiaai[i1,a1,a,i]                  -= Viaai[i1,a1,a,i]
    Tiaai[i1,a1,a,i]                  *= -1.0
    prepare HBAR_AJIB_aaaa[i1,a1,a,i] += Tiaai[i1,a1,a,i]

endpardo i1, a1, a, i

pardo i, i1, a1, i2  

    request VSpipi[a1,i1,i,i2] 

    do a
	T1iaai[i1,a1,a,i]                  = VSpipi[a1,i1,i,i2]*St1a[a,i2]
	T1iaai[i1,a1,a,i]                 *= -1.0  
	prepare HBAR_AJIB_aaaa[i1,a1,a,i] += T1iaai[i1,a1,a,i]
    enddo a

endpardo i, i1, a1, i2

pardo i1, a1, a, a2  

    request VSaaai[a2,a,a1,i1] 

    do i 
	T2iaai[i,a,a1,i1]                  = VSaaai[a2,a,a1,i1]*St1a[a2,i]
	T1iaai[i1,a1,a,i]                  = T2iaai[i,a,a1,i1]
	prepare HBAR_AJIB_aaaa[i1,a1,a,i] += T1iaai[i1,a1,a,i]
    enddo i

endpardo i1, a1, a, a2  

pardo i, a, a2, i2  

    request T2aa[a2,i,a,i2]  
    T1aiai[a2,i,a,i2]   = T2aa[a2,i,a,i2]

    do a1 
    do i1

	request VSpipi[a2,i2,a1,i1]  
	Taiai[a1,i2,a2,i1]                 = VSpipi[a2,i2,a1,i1]
	T1iaai[i1,a1,a,i]                  = T1aiai[a2,i,a,i2]*Taiai[a1,i2,a2,i1]
	T1iaai[i1,a1,a,i]                 *= -1.0  
	prepare HBAR_AJIB_aaaa[i1,a1,a,i] += T1iaai[i1,a1,a,i]

    enddo i1
    enddo a1

endpardo i, a, a2, i2

pardo i1, a1, b, j

    request Vpiqj[a1,i1,b,j]  

    do a
    do i

	request T2ab[a,i,b,j]  
	T1iaai[i1,a1,a,i]                  = Vpiqj[a1,i1,b,j]*T2ab[a,i,b,j]
	prepare HBAR_AJIB_aaaa[i1,a1,a,i] += T1iaai[i1,a1,a,i]

    enddo i
    enddo a

endpardo i1, a1, b, j

pardo i,a,a1,i1
    request MOI_HBAR_AJIB_aabb[i,a,a1,i1]
    prepare HBAR_AJIB_aaaa[i,a,a1,i1] += MOI_HBAR_AJIB_aabb[i,a,a1,i1]
endpardo i,a,a1,i1

#     BBBB spin combination. 
#     ---------------------- 

#     AABB spin combination. 
#     ---------------------- 

pardo i, a, b, j

    request Viaai[i,a,b,j] 
    Tiabj[i,a,b,j]                  = Viaai[i,a,b,j]
    prepare HBAR_AJIB_aabb[i,a,b,j]+= Tiabj[i,a,b,j]

endpardo i, a, b, j 

pardo i, a, b, b1  

    request Vaaai[b1,b,a,i]  

    do j

	Tjbai[j,b,a,i]                   = Vaaai[b1,b,a,i]*St1b[b1,j]
	T2jbai[j,b,a,i]                  = Tjbai[j,b,a,i]
	Tiabj[i,a,b,j]                   = Tjbai[j,b,a,i]  
	prepare HBAR_AJIB_aabb[i,a,b,j] += Tiabj[i,a,b,j]

    enddo j

endpardo i, a, b, b1  

pardo b, i, a, j

    Tiabj[i,a,b,j]  = 0.0  

    do j1

	request Vpiqj[a,i,j,j1]  
	T1iabj[i,a,b,j] = Vpiqj[a,i,j,j1]*St1b[b,j1]
	Tiabj[i,a,b,j] -= T1iabj[i,a,b,j]

    enddo j1

    prepare HBAR_AJIB_aabb[i,a,b,j] += Tiabj[i,a,b,j]

endpardo b, i, a, j 

pardo j, b, b1, j1

    request T2bb[b1,j,b,j1]  
    T2bjbj[b1,j,b,j1] = T2bb[b1,j,b,j1]

    do i
    do a

	request Vpiqj[a,i,b1,j1]  
	Tiabj[i,a,b,j]                   = T2bjbj[b1,j,b,j1]*Vpiqj[a,i,b1,j1]
	Tiabj[i,a,b,j]                  *= -1.0  
	prepare HBAR_AJIB_aabb[i,a,b,j] += Tiabj[i,a,b,j]

    enddo a
    enddo i

endpardo j, b, b1, j1 

pardo i1, a1, b, j

    request T2ab[a1,i1,b,j]  

    do a
    do i

	request VSpipi[a1,i1,a,i]  
	Tiabj[i,a,b,j]                   = T2ab[a1,i1,b,j]*VSpipi[a1,i1,a,i]
	prepare HBAR_AJIB_aabb[i,a,b,j] += Tiabj[i,a,b,j]

    enddo i
    enddo a

endpardo i1, a1, b, j 

pardo i,a,b,j
    request MOI_HBAR_AJIB_aabb[i,a,b,j]
    prepare HBAR_AJIB_aabb[i,a,b,j] += MOI_HBAR_AJIB_aabb[i,a,b,j]
endpardo i,a,b,j

#     BBAA spin combination. 
#     ---------------------- 

#     ABAB spin combination. 
#     ---------------------- 

pardo i1, b1, b, i

    request Vaaii[b,b1,i1,i]  
    Tiibb[i1,i,b,b1]                   = Vaaii[b,b1,i1,i]
    Tiibb[i1,i,b,b1]                  *= -1.0
    prepare HBAR_AJIB_iibb[i1,i,b,b1] += Tiibb[i1,i,b,b1]

endpardo i1, b1, b, i

pardo b1, b, a1, i1  

    request Vaaai[b1,b,a1,i1]  

    do i
	T1iibb[i1,i,b,b1]                  = Vaaai[b1,b,a1,i1]*St1a[a1,i]
	T2iibb[i1,i,b,b1]                  = T1iibb[i1,i,b,b1]  
	T2iibb[i1,i,b,b1]                 *= -1.0 
	prepare HBAR_AJIB_iibb[i1,i,b,b1] += T2iibb[i1,i,b,b1]
    enddo i

endpardo b1, b, a1, i1  

pardo i1, b1, b, i

    Tiibb[i1,i,b,b1] = 0.0 

    do j1
	request Vpiqj[i,i1,b1,j1]  
	T1iibb[i1,i,b,b1] = Vpiqj[i,i1,b1,j1]*St1b[b,j1]
	Tiibb[i1,i,b,b1] += T1iibb[i1,i,b,b1] 
    enddo j1

    prepare HBAR_AJIB_iibb[i1,i,b,b1] += Tiibb[i1,i,b,b1]

endpardo i1, b1, b, i

pardo i, b, j1, a1  

    request T2ab[a1,i,b,j1]  
    T1aibj[a1,i,b,j1] = T2ab[a1,i,b,j1]

    do i1
    do b1

	request Vpiqj[a1,i1,b1,j1]  
	T1iibb[i1,i,b,b1]                  = T1aibj[a1,i,b,j1]*Vpiqj[a1,i1,b1,j1]
	prepare HBAR_AJIB_iibb[i1,i,b,b1] += T1iibb[i1,i,b,b1]

    enddo b1
    enddo i1

endpardo i, b, j1, a1  

#     BABA spin combination. 
#     ---------------------- 

ENDPROC HBAR_AJIB_MCPT

PROC HBAR_ABCI_MCPT
#     --------------

#     There are four spin cases to compute:
#     1. H^{ab)_{ci} --> HBAR_ABCI_aaaa  
#     2. H^{AB)_{CI} --> HBAR_ABCI_bbbb  
#     3. H^{aB)_{cI} --> HBAR_ABCI_aabb  
#     4. H^{Ab)_{Ci} --> HBAR_ABCI_bbaa  

#     Note that since I 'always' store arrays in (11|22) form the 
#     notation, although valid, is slightly confusing. The 
#     storage pattern is therefore array(a,b,i,c).   

#    ------------------------------------------------------------------------

#     AAAA spin component. 
#     -------------------- 

#     BBBB spin component. 
#     -------------------- 

#     AABB spin component. 
#     -------------------- 

pardo a, a1, b, j 

    request Vaaai[a,a1,b,j]   
    prepare HBAR_ABCI_aabb[a,a1,b,j] += Vaaai[a,a1,b,j] 

endpardo a, a1, b, j 

pardo a, a1, a3, i2

    request VSaaai[a,a1,a3,i2]  

    do b
    do j

	request T2ab[a3,i2,b,j] 
	Tppqq[a1,a,b,j]                   = VSaaai[a,a1,a3,i2]*T2ab[a3,i2,b,j]
	prepare HBAR_ABCI_aabb[a1,a,b,j] += Tppqq[a1,a,b,j]

    enddo j
    enddo b

endpardo a, a1, a3, i2

pardo a, a1, b, j

    request Vaaai[a,a1,b,j] 

    do b1
    do j1

	request T2bb[b1,j1,b,j] 
	Tppqq[a1,a,b1,j1]                   = Vaaai[a,a1,b,j]*T2bb[b1,j1,b,j]
	prepare HBAR_ABCI_aabb[a1,a,b1,j1] += Tppqq[a1,a,b1,j1]

    enddo j1
    enddo b1

endpardo a, a1, b, j

pardo a1, a, j, b

    Tppqq[a1,a,b,j] = 0.0

    do i

	request T2ab[a1,i,b,j] 
	request Viaai[i,a,b,j] 

	T1ppqq[a1,a,b,j] = T2ab[a1,i,b,j]*Fock_a[i,a]
	Tppqq[a1,a,b,j] -= T1ppqq[a1,a,b,j]

        Tai[a1,i] = St1a[a1,i]
	request t1a_old[a1,i]
	Tai[a1,i] += t1a_old[a1,i]
	T2ppqq[a1,a,b,j] = Viaai[i,a,b,j]*Tai[a1,i]
	Tppqq[a1,a,b,j] -= T2ppqq[a1,a,b,j]

    enddo i

    prepare HBAR_ABCI_aabb[a1,a,b,j] += Tppqq[a1,a,b,j]

endpardo a1, a, j, b

pardo a, a1, j, j1

    request WHJJAA[j1,j,a1,a] 
    tqqpp[j1,j,a1,a]  = WHJJAA[j1,j,a1,a] 

    do b
	Tai[b,j1] = St1b[b,j1]
	request t1a_old[b,j1]
	Tai[b,j1] += t1a_old[b,j1]
	Tppqq[a1,a,b,j]                   = tqqpp[j1,j,a1,a]*Tai[b,j1]
	prepare HBAR_ABCI_aabb[a1,a,b,j] += Tppqq[a1,a,b,j]
    enddo b

endpardo a, a1, j, j1

pardo a1, b, j1, i 

    request T2ab[a1,i,b,j1] 
    t0pqqp[a1,b,j1,i] = T2ab[a1,i,b,j1]

    do a
    do j
#   
	request Vpiqj[j1,j,a,i] 
	tqpqp[j1,i,j,a]   = Vpiqj[j1,j,a,i]
	Tppqq[a1,a,b,j] = t0pqqp[a1,b,j1,i]*tqpqp[j1,i,j,a] 
	prepare HBAR_ABCI_aabb[a1,a,b,j] += Tppqq[a1,a,b,j]

    enddo j 
    enddo a 

endpardo a1, b, j1, i 

pardo a, b1, b, i

    request Vaaai[b,b1,a,i]   

    do j
    do a1
	request T2ab[a1,i,b,j] 
	Tppqq[a1,a,b1,j]                   = T2ab[a1,i,b,j]*Vaaai[b,b1,a,i]
	Tppqq[a1,a,b1,j]                  *= -1.0
	prepare HBAR_ABCI_aabb[a1,a,b1,j] += Tppqq[a1,a,b1,j]
    enddo a1
    enddo j

endpardo a, b1, b, i

pardo a, a1, a2, i
    request                              MOI_HBAR_ABCI_aabb[a,a1,a2,i]
    tpppp[a,a1,a2,i]                   = MOI_HBAR_ABCI_aabb[a,a1,a2,i]
    prepare HBAR_ABCI_aabb[a,a1,a2,i] += tpppp[a,a1,a2,i]
endpardo a, a1, a2, i


#     Done AABB spin component. 
#     ------------------------- 

#     BBAA spin component. 
#     -------------------- 

#     Done AABB spin component. 
#     ------------------------- 

server_barrier

ENDPROC HBAR_ABCI_MCPT

PROC AO4VIR

server_barrier

pardo j,sigma

    t1xj[sigma,j]=0.0

    do b
	request t1a_old[b,j]
	Tai[b,j]  = St1b[b,j]
	Tai[b,j] += t1a_old[b,j]
	txj[sigma,j] = Tai[b,j]*ca[sigma,b]
	t1xj[sigma,j]+=txj[sigma,j]
    enddo b
# 
    put Mxj[sigma,j]=t1xj[sigma,j]

endpardo j, sigma

pardo i, sigma

    t1xi[sigma,i]=0.0

    do a
	request t1a_old[a,i]
	Tai[a,i]  = St1a[a,i]
	Tai[a,i] += t1a_old[a,i]
	txi[sigma,i]=Tai[a,i]*ca[sigma,a]
	t1xi[sigma,i]+=txi[sigma,i]
    enddo a

    put Mxi[sigma,i]=t1xi[sigma,i]

endpardo i, sigma

server_barrier

#    Contract AOINT with half back transformed Amplitudes
#    ----------------------------------------------------

pardo mu,lambda,nu

    allocate Lxxxj[mu,lambda,nu,*]
    allocate Lxxxi[mu,lambda,nu,*]

    do sigma

	execute compute_integral_batch aoint[mu,lambda,nu,sigma]

	do j

	    get Mxj[sigma,j]

	    tmxxxj[mu,lambda,nu,j]=aoint[mu,lambda,nu,sigma]*Mxj[sigma,j]
	    Lxxxj[mu,lambda,nu,j]+=tmxxxj[mu,lambda,nu,j]

	enddo j
###
	do i

	    get Mxi[sigma,i]

	    tmxxxi[mu,lambda,nu,i]=aoint[mu,lambda,nu,sigma]*Mxi[sigma,i]
	    Lxxxi[mu,lambda,nu,i]+=tmxxxi[mu,lambda,nu,i]

	enddo i
###
    enddo sigma

    do j
	prepare Mxxxj[mu,lambda,nu,j]=Lxxxj[mu,lambda,nu,j]
    enddo j
    do i
	prepare Mxxxi[mu,lambda,nu,i]=Lxxxi[mu,lambda,nu,i]
    enddo i

    deallocate Lxxxi[mu,lambda,nu,*]
    deallocate Lxxxj[mu,lambda,nu,*]

endpardo mu,lambda,nu

server_barrier

#  2ND STAGE OF TRANSFORMATION
#  --------------------------- 

pardo mu, nu, j 

    allocate Lxxbj[mu,nu,*,j]

    do lambda  

	request Mxxxj[mu,nu,lambda,j] 

	do b

	    tmxxbj[mu,nu,b,j]=Mxxxj[mu,nu,lambda,j]*ca[lambda,b]
	    lxxbj[mu,nu,b,j]+=tmxxbj[mu,nu,b,j]

	enddo b
    enddo lambda  

    do b
	prepare Mxxbj[mu,nu,b,j]=lxxbj[mu,nu,b,j]
    enddo b

    deallocate Lxxbj[mu,nu,*,j]

endpardo mu, nu, j 

pardo mu, nu, i 

    allocate Lxxai[mu,nu,*,i]

    do lambda  

	request Mxxxi[mu,nu,lambda,i] 

	do a

	    tmxxai[mu,nu,a,i]=Mxxxi[mu,nu,lambda,i]*ca[lambda,a]
	    lxxai[mu,nu,a,i]+=tmxxai[mu,nu,a,i]

	enddo a
    enddo lambda  

    do a
	prepare Mxxai[mu,nu,a,i]=lxxai[mu,nu,a,i]
    enddo a

    deallocate Lxxai[mu,nu,*,i]

endpardo mu, nu, i 

server_barrier

#  end 2ND STAGE OF TRANSFORMATION
#  ------------------------------- 

pardo mu, b, j

    allocate Lxabj[mu,*,b,j]

    do lambda

	request Mxxbj[mu,lambda,b,j] 

	do a

	    tmxabj[mu,a,b,j]=Mxxbj[mu,lambda,b,j]*ca[lambda,a]
	    lxabj[mu,a,b,j]+=tmxabj[mu,a,b,j]

	enddo a

    enddo lambda

    do a
	prepare Mxabj[mu,a,b,j]=lxabj[mu,a,b,j]
    enddo a

    deallocate Lxabj[mu,*,b,j]

endpardo mu, b, j

pardo mu, a, i

    allocate Lxbai[mu,*,a,i]

    do lambda

	request Mxxai[mu,lambda,a,i] 

	do b

	    tmxbai[mu,b,a,i]=Mxxai[mu,lambda,a,i]*ca[lambda,b]
	    lxbai[mu,b,a,i]+=tmxbai[mu,b,a,i]

	enddo b

    enddo lambda

    do b
	prepare Mxbai[mu,b,a,i]=lxbai[mu,b,a,i]
    enddo b

    deallocate Lxbai[mu,*,a,i]

endpardo mu, a, i

pardo mu, a, i

    allocate Lxaai[mu,*,a,i]

    do lambda

	request Mxxai[mu,lambda,a,i] 

	do a1

	tmxaai[mu,a1,a,i]=Mxxai[mu,lambda,a,i]*ca[lambda,a1]
	lxaai[mu,a1,a,i]+=tmxaai[mu,a1,a,i]

	enddo a1

    enddo lambda

    do a1
	prepare Mxaai[mu,a1,a,i]=lxaai[mu,a1,a,i]
    enddo a1

    deallocate Lxaai[mu,*,a,i]

endpardo mu, a, i

pardo mu, b, j

    allocate Lxbbj[mu,*,b,j]

    do lambda

	request Mxxbj[mu,lambda,b,j] 

	do b1

	tmxbbj[mu,b1,b,j]=Mxxbj[mu,lambda,b,j]*ca[lambda,b1]
	lxbbj[mu,b1,b,j]+=tmxbbj[mu,b1,b,j]

	enddo b1

    enddo lambda

    do b1
	prepare Mxbbj[mu,b1,b,j]=lxbbj[mu,b1,b,j]
    enddo b1

    deallocate Lxbbj[mu,*,b,j]

endpardo mu, b, j

server_barrier

#  end 3RD STAGE OF TRANSFORMATION
#  ------------------------------- 

pardo a, b, j

    allocate Laabj[*,a,b,j]

    do mu

	request Mxabj[mu,a,b,j] 

	do a1

	    tmaabj[a1,a,b,j]=Mxabj[mu,a,b,j]*ca[mu,a1]
	    Laabj[a1,a,b,j]+=tmaabj[a1,a,b,j]

	enddo a1

    enddo mu

    do a1
	prepare HBAR_ABCI_aabb[a1,a,b,j]+=Laabj[a1,a,b,j]
    enddo a1

    deallocate Laabj[*,a,b,j]

endpardo a, b, j

#    ALPHA-ALPHA spin combination

ENDPROC AO4VIR

PROC form_H_MCPT

# ---------------------------------------------------------
#
# LHBAR_ii JNB verified A3
# LHBAR_ia JNB verified A3
# LHBAR_jb JNB verified A3
# LHBAR_aa JNB verified A3
# HBAR_iiii JNB verified A3
# HBAR_iijj JNB verified A3
# HBAR_JKIA_aaaa JNB verified A3
# HBAR_JKIA_aabb JNB verified A3
# HBAR_IAJK_aaaa JNB verified A3
# HBAR_IAJK_aabb JNB verified A3
# HBAR_AJIB_aaaa JNB verified A3
# HBAR_AJIB_aabb JNB verified A3
# HBAR_AJIB_iibb JNB verified A3
# HBAR_AIBC_aaaa JNB verified A3
# HBAR_AIBC_aabb JNB verified A3
# HBAR_ABCI_aaaa JNB verified A3
# HBAR_ABCI_aabb JNB verified A3
#
# ---------------------------------------------------------

print "-- Entering Hbar formation"

server_barrier
allocate LHBAR_ii[*,*]
allocate LHBAR_ia[*,*]
allocate LHBAR_jb[*,*]
allocate LHBAR_aa[*,*]
server_barrier

print "Forming H_ab"
CALL HBAR_AB_MCPT
server_barrier
print "Forming H_ij"
CALL HBAR_IJ_MCPT
server_barrier
print "Forming H_ib"
CALL HBAR_IB_MCPT
server_barrier

pardo i,i1
put HBAR_ii[i,i1] = 0.0
endpardo i,i1
pardo i,a
put HBAR_ia[i,a] = 0.0
endpardo i,a
pardo j,b
put HBAR_jb[j,b] = 0.0
endpardo j,b
server_barrier

print "Forming H_ijkl"
CALL HBAR_IJKL_MCPT
server_barrier
print "Forming H_jkia"
CALL HBAR_JKIA_MCPT
server_barrier
print "Forming H_iajk"
CALL HBAR_IAJK_MCPT
server_barrier

print "Forming H_iabc"
CALL HBAR_AIBC_MCPT
server_barrier
print "Forming H_ajib"
CALL HBAR_AJIB_MCPT
server_barrier ## keep this barrier
print "Forming H_abci"
CALL HBAR_ABCI_MCPT
server_barrier

call AO4VIR

server_barrier
print "Finishing H_aibc"
pardo a, a1, a2, i
    request                             HBAR_AIBC_aabb[a,a1,i,a2]
    request                             HBAR_AIBC_aabb[a,a2,i,a1]
    tpppp[a,a1,i,a2]                  = HBAR_AIBC_aabb[a,a1,i,a2]
    t1pppp[a,a1,i,a2]                 = HBAR_AIBC_aabb[a,a2,i,a1]
    tpppp[a,a1,i,a2]                 -= t1pppp[a,a1,i,a2]
    prepare HBAR_AIBC_aaaa[a,a1,i,a2] = tpppp[a,a1,i,a2]
endpardo a, a1, a2, i

print "Finishing H_abci"
pardo a, a1, a2, i
    request                             HBAR_ABCI_aabb[a,a1,a2,i]
    request                             HBAR_ABCI_aabb[a2,a1,a,i]
    tpppp[a,a1,a2,i]                  = HBAR_ABCI_aabb[a,a1,a2,i]
    t1pppp[a,a1,a2,i]                 = HBAR_ABCI_aabb[a2,a1,a,i]
    tpppp[a,a1,a2,i]                 -= t1pppp[a,a1,a2,i]
    prepare HBAR_ABCI_aaaa[a,a1,a2,i] = tpppp[a,a1,a2,i]
endpardo a, a1, a2, i
server_barrier



server_barrier

ENDPROC form_H_MCPT

# ---------------------------------------------------------

PROC form_diag

# ---------------------------------------------------------
#
# VCONV1A  JNB verified A3
# VCONV2AB JNB verified A3
# VCONV2AA JNB verified A3
#
# ---------------------------------------------------------

print "-- Forming diagonals"
server_barrier

pardo a, a1, i, i1
    taiai[a,i,a1,i1]            = 0.0
    prepare VCONV2AA[a,i,a1,i1] = taiai[a,i,a1,i1]
endpardo a, a1, i, i1

pardo a, b, i, j
    taibj[a,i,b,j]            = 0.0 
    prepare VCONV2AB[a,i,b,j] = taibj[a,i,b,j]
endpardo a, b, i, j
server_barrier

pardo mu, nu, lambda, sigma 

    execute compute_integral_batch aoint[mu,nu,lambda,sigma] 

    do a 
	Txxxp[mu,nu,lambda,a] = aoint[mu,nu,lambda,sigma]*ca[sigma,a] 
	do a1 
	if a == a1 
	    Txxpp[mu,nu,a1,a] = Txxxp[mu,nu,lambda,a]*ca[lambda,a1] 
	    prepare Vxxaa[mu,nu,a1,a] += Txxpp[mu,nu,a1,a] 
	endif 
	enddo a1 
    enddo a 

    do b 
	Txxxq[mu,nu,lambda,b] = aoint[mu,nu,lambda,sigma]*ca[sigma,b] 
	do b1 
	if b == b1 
	    Txxqq[mu,nu,b1,b] = Txxxq[mu,nu,lambda,b]*ca[lambda,b1] 
	    prepare Gxxbb[mu,nu,b1,b] += Txxqq[mu,nu,b1,b] 
	endif 
	enddo b1 
    enddo b 

endpardo mu, nu, lambda, sigma 

pardo mu, nu, lambda, sigma 

    execute compute_integral_batch            aoint[mu,sigma,lambda,nu] 
    txxxx[mu,nu,lambda,sigma]  = aoint[mu,sigma,lambda,nu] 
    txxxx[mu,nu,lambda,sigma] *= -1.0  

    do a 
	Txxxp[mu,nu,lambda,a] = txxxx[mu,nu,lambda,sigma]*ca[sigma,a] 
	do a1 
	if a == a1 
	    Txxpp[mu,nu,a1,a] = Txxxp[mu,nu,lambda,a]*ca[lambda,a1] 
	    prepare Vxxaa[mu,nu,a1,a] += Txxpp[mu,nu,a1,a] 
	endif 
	enddo a1 
    enddo a 

endpardo mu, nu, lambda, sigma 

server_barrier

pardo mu, nu, a, a1 
WHERE a == a1 
    request Vxxaa[mu,nu,a1,a]             
    do a2 
	Txppp[mu,a2,a1,a] = Vxxaa[mu,nu,a1,a]*ca[nu,a2] 
	do a3 
	if a2 == a3 
	    Tpppp[a3,a2,a1,a] = Txppp[mu,a2,a1,a]*ca[mu,a3] 
	    prepare Vaaaa[a3,a2,a1,a] += Tpppp[a3,a2,a1,a] 
	endif 
	enddo a3 
    enddo a2 
endpardo mu, nu, a, a1 

pardo mu, nu, b, b1 
WHERE b == b1 
    request Gxxbb[mu,nu,b1,b]             
    do a2 
	Txpqq[mu,a2,b1,b] = Gxxbb[mu,nu,b1,b]*ca[nu,a2] 
	do a3 
	if a2 == a3 
	    Tppqq[a3,a2,b1,b] = Txpqq[mu,a2,b1,b]*ca[mu,a3] 
	    prepare Vaabb[a3,a2,b1,b] += Tppqq[a3,a2,b1,b] 
	endif 
	enddo a3 
    enddo a2 
endpardo mu, nu, b, b1 

server_barrier

# -----prepare f_aa diagonal = Sdaa

pardo a, a1, a2, a3   
WHERE a  == a1 
WHERE a2 == a3 

    request Vaaaa[a,a1,a2,a3] 
    Tpppp[a,a1,a2,a3]  = Vaaaa[a,a1,a2,a3]
    execute return_diagonal_elements Tpppp[a,a1,a2,a3]
    taa[a3,a1]         = 1.0
    t1aa[a,a2]         = Tpppp[a,a1,a2,a3]*taa[a3,a1]

    PUT Faa[a,a2]     += t1aa[a,a2]

endpardo a, a1, a2, a3  

pardo a, a1, b2, b3   
WHERE a  == a1 
WHERE b2 == b3 

    request Vaabb[a,a1,b2,b3] 
    Tppqq[a,a1,b2,b3]  = Vaabb[a,a1,b2,b3]
    execute return_diagonal_elements Tppqq[a,a1,b2,b3]
    tba[b3,a1]         = 1.0
    tab[a,b2]          = Tppqq[a,a1,b2,b3]*tba[b3,a1]

    PUT Fab[a,b2]     += tab[a,b2]

endpardo a, a1, b2, b3  

pardo a, a1
WHERE a==a1 

    taa[a,a1]      = LHBAR_aa[a,a1]
    execute return_diagonal_elements taa[a,a1]
    put DDaa[a,a1] = taa[a,a1]

endpardo a, a1

# -----prepare f_ii diagonal = Sdii

pardo i, i1
WHERE i==i1 

    tii[i1,i]      = LHBAR_ii[i1,i]
    execute return_diagonal_elements tii[i1,i]
    put DDii[i1,i] = tii[i1,i]

endpardo i, i1

# -----prepare f_jj diagonal = DDjj

#pardo j, j1
#WHERE j==j1 
#
#    tjj[j1,j]      = LHBAR_ii[j1,j]
#    execute return_diagonal_elements tjj[j1,j]
#    put DDjj[j1,j] = tjj[j1,j]
#
#endpardo j, j1

server_barrier

# -----prepare Hbar_aiai diagonal

pardo a, i

    tai[a,i]=0.0

    do a1
    do i1
	where a==a1
	where i==i1

	request HBAR_AJIB_aaaa[i1,a1,a,i] 
	Taaii[a,a1,i,i1] = HBAR_AJIB_aaaa[i1,a1,a,i]
	execute return_diagonal_elements Taaii[a,a1,i,i1]
	tia[i1,a1]       = 1.0
	t1ai[a,i]        = Taaii[a,a1,i,i1]*tia[i1,a1]
	tai[a,i]        += t1ai[a,i]

    enddo i1
    enddo a1

    PUT VCONV1A[a,i] = tai[a,i]

endpardo a, i

# -----prepare Hbar_bjbj diagonal

server_barrier

pardo a, a1, i, i1

    get                            VCONV1A[a,i1]
    get                            VCONV1A[a1,i]
    tia[i1,a]                    = 1.0
    t1ia[i,a1]                   = 1.0
    tai[a,i1]                    = VCONV1A[a,i1]
    t2ai[a1,i]                   = VCONV1A[a1,i]
    t1aiai[a,i,a1,i1]            = tai[a,i1]^t1ia[i,a1]
    t2aiai[a,i,a1,i1]            = t2ai[a1,i]^tia[i1,a]

    prepare VCONV2AA[a,i,a1,i1] += t1aiai[a,i,a1,i1]
    prepare VCONV2AA[a,i,a1,i1] += t2aiai[a,i,a1,i1]

endpardo a, a1, i, i1

server_barrier


# -----prepare Hbar_aiai diagonal

pardo a, i

    tai[a,i]=0.0

    do a1
    do i1
	where a==a1
	where i==i1

	request HBAR_AJIB_aaaa[i1,a1,a,i] 
	Taaii[a,a1,i,i1] = HBAR_AJIB_aaaa[i1,a1,a,i]
	execute return_diagonal_elements Taaii[a,a1,i,i1]
	tia[i1,a1]       = 1.0
	t1ai[a,i]        = Taaii[a,a1,i,i1]*tia[i1,a1]
	tai[a,i]        += t1ai[a,i]

    enddo i1
    enddo a1

    PUT VCONV1A[a,i] = tai[a,i]

endpardo a, i

# -----prepare Hbar_bjbj diagonal

server_barrier

# ---------compute T(a,i)=F(a,a)-f(i,i)-v(a,i,a,i)

pardo a, i

    tai[a,i]=0.0

    do a1
	where a==a1

	get         DDaa[a,a1]
	tia[i,a1] = 1.0
	taa[a1,a] = DDaa[a,a1]
	execute return_diagonal_elements taa[a1,a]

	t2ai[a,i] = tia[i,a1]*taa[a1,a]
	tai[a,i] += t2ai[a,i]

    enddo a1

    do i1
	where i==i1

	get          DDii[i1,i]
	t2ia[i1,a] = 1.0
	tii[i,i1]  = DDii[i1,i]
	execute return_diagonal_elements Tii[i,i1]

	t2ai[a,i]  = tii[i,i1]*t2ia[i1,a]
	t2ai[a,i] *= -1.0
	tai[a,i]  += t2ai[a,i]

    enddo i1

    PUT VCONV1A[a,i] += tai[a,i]

endpardo a, i

# ---------compute T(b,j)=F(b,b)-f(j,j)

server_barrier

pardo a, a1, i, i1

    get                 VCONV1A[a,i]
    get                 VCONV1A[a1,i1]
    tia[i,a]          = 1.0
    t1ia[i1,a1]       = 1.0
    tai[a,i]          = VCONV1A[a,i]
    t2ai[a1,i1]       = VCONV1A[a1,i1]
    t1aiai[a,i,a1,i1] = tai[a,i]^t1ia[i1,a1]
    t2aiai[a,i,a1,i1] = t2ai[a1,i1]^tia[i,a]

    taiai[a,i,a1,i1]  = t1aiai[a,i,a1,i1]
    taiai[a,i,a1,i1] += t2aiai[a,i,a1,i1]

    do i2
    do i3
	where  i==i2
	where i1==i3

	request             HBAR_iiii[i,i2,i1,i3] 
	tiiii[i,i2,i1,i3] = HBAR_iiii[i,i2,i1,i3]
	execute return_diagonal_elements Tiiii[i,i2,i1,i3]
	t1aiai[a,i2,a1,i3]=1.0
	t2aiai[a,i,a1,i1] = Tiiii[i,i2,i1,i3]*t1aiai[a,i2,a1,i3]
	taiai[a,i,a1,i1] += t2aiai[a,i,a1,i1]

    enddo i3
    enddo i2

    get                 Faa[a,a1]
    tii[i,i1]         = 1.0
    t1aiai[a,i,a1,i1] = Faa[a,a1]^tii[i,i1]
    taiai[a,i,a1,i1] += t1aiai[a,i,a1,i1]

    prepare VCONV2AA[a,i,a1,i1] += taiai[a,i,a1,i1]

endpardo a, a1, i, i1

# alpha/beta contribution 
# ----------------------- 

pardo a, i, b, j

    get               VCONV1A[b,j]
    get               VCONV1A[a,i]
    t1ai[a,i]       = 1.0
    t1bj[b,j]       = 1.0

    tbj[b,j]        = VCONV1A[b,j]
    tai[a,i]        = VCONV1A[a,i]
    t1aibj[a,i,b,j] = t1ai[a,i]^tbj[b,j]
    t2aibj[a,i,b,j] = tai[a,i]^t1bj[b,j]

    taibj[a,i,b,j]  = 0.0  
    taibj[a,i,b,j]  = t1aibj[a,i,b,j]
    taibj[a,i,b,j] += t2aibj[a,i,b,j]

    do i1
    do j1
	where i==i1
	where j==j1

	request                   HBAR_iijj[i,i1,j,j1] 
	Tiijj[i,i1,j,j1]        = HBAR_iijj[i,i1,j,j1]
	execute return_diagonal_elements  Tiijj[i,i1,j,j1]
	t2aibj[a,i1,b,j1]       = 1.0
	t1aibj[a,i,b,j]         = Tiijj[i,i1,j,j1]*t2aibj[a,i1,b,j1]
	taibj[a,i,b,j]         += t1aibj[a,i,b,j]

    enddo j1
    enddo i1

    get Fab[a,b]
    tij[i,j]=1.0
    t1aibj[a,i,b,j]=Fab[a,b]^tij[i,j]
    taibj[a,i,b,j]+=t1aibj[a,i,b,j]

    do i1
    do b1
	where i==i1
	where b==b1

	request HBAR_AJIB_iibb[i1,i,b,b1] 
	Tiibb[i1,i,b,b1]=HBAR_AJIB_iibb[i1,i,b,b1]
	execute return_diagonal_elements Tiibb[i1,i,b,b1]
	t2aibj[a,i1,b1,j]=1.0
	t1aibj[a,i,b,j]=Tiibb[i1,i,b,b1]*t2aibj[a,i1,b1,j]
	taibj[a,i,b,j]+=t1aibj[a,i,b,j]

    enddo b1
    enddo i1

    do j1
    do a1
	where j==j1
	where a==a1

	request HBAR_AJIB_iibb[j1,j,a,a1] 
	Tjjaa[j1,j,a,a1]=HBAR_AJIB_iibb[j1,j,a,a1]
	execute return_diagonal_elements Tjjaa[j1,j,a,a1]
	t2aibj[a1,i,b,j1]=1.0
	t1aibj[a,i,b,j]=Tjjaa[j1,j,a,a1]*t2aibj[a1,i,b,j1]
	taibj[a,i,b,j]+=t1aibj[a,i,b,j]

    enddo a1
    enddo j1

    prepare VCONV2AB[a,i,b,j] = taibj[a,i,b,j]

endpardo a, i, b, j

server_barrier

pardo a,a1
put Faa[a,a1] = 0.0
endpardo a,a1
pardo a,b
put Fab[a,b] = 0.0
endpardo a,b

server_barrier

ENDPROC form_diag

#------------------------------------------------------------------------

PROC FACTORS_NEW_MCPT
#     ---------------- 
#print "Forming intermediates"

pardo i, i1, j, b 
    prepare Niibj[i1,b,i,j] = 0.0
endpardo i, i1, j, b 

pardo i, i1, j, b 
    prepare Njjai[i1,b,i,j] = 0.0
endpardo i, i1, j, b 

pardo i, i1, i2, a 
    prepare Niiai[i1,a,i,i2] = 0.0
endpardo i, i1, i2, a 

pardo i, i1, j, j1 
    put Niijj[i,i1,j,j1] = 0.0
endpardo i, i1, j, j1 

pardo i, i1, i2, i3 
    PUT Niiii[i,i1,i2,i3] = 0.0
endpardo i, i1, i2, i3 

pardo a1, i, b, j 
    request VCACT2AB[a1,i,b,j]  
    tpqpq[a1,b,i,j]         = VCACT2AB[a1,i,b,j] 
    prepare VFLAB[a1,b,i,j] = tpqpq[a1,b,i,j]  
endpardo a1,i,b,j 

pardo a2, i, a1, i2 
    request VCACT2AA[a2,i,a1,i2] 
    tpppp[a2,a1,i,i2]         = VCACT2AA[a2,i,a1,i2]
    prepare VFLAA[a2,a1,i,i2] = tpppp[a2,a1,i,i2]  
endpardo a2,i,a1,i2 

server_barrier 

pardo a, i1, a2, i
WHERE i < i1
    request VCACT2AA[a,i,a2,i1] 
    do a1
	request VSpipi[a2,i1,a1,i] 
	taa[a,a1]        = VCACT2AA[a,i,a2,i1]*VSpipi[a2,i1,a1,i]
	taa[a,a1]       *= -1.0
	LFae_a[a,a1] += taa[a,a1]
    enddo a1
endpardo a, i1, a2, i

pardo a, i1, a2, i
WHERE i == i1
    request VCACT2AA[a,i,a2,i1] 
    do a1
	request VSpipi[a2,i1,a1,i] 
	taa[a,a1]        = VCACT2AA[a,i,a2,i1]*VSpipi[a2,i1,a1,i]
	taa[a,a1]       *= -0.5
	LFae_a[a,a1] += taa[a,a1]
    enddo a1
endpardo a, i1, a2, i

pardo a, i, b, j
request VCACT2AB[a,i,b,j] 
    do a1  
	request Vpiqj[a1,i,b,j] 
	taa[a,a1]        = VCACT2AB[a,i,b,j]*Vpiqj[a1,i,b,j]
	taa[a,a1]       *= -1.0
	LFae_a[a,a1] += taa[a,a1]
    enddo a1  
endpardo a, i, b, j

#    Fmi_a

pardo i, i1, i2, a
    request VSpipi[a,i2,i,i1] 
    GET                VCACT1A[a,i2]
    tii[i1,i]        = VSpipi[a,i2,i,i1]*VCACT1A[a,i2]
    LFmi_a[i1,i] += tii[i1,i]
endpardo i, i1, i2, a

pardo i, a1, i2, a
WHERE a == a1
    request VCACT2AA[a,i,a1,i2] 
    do i1
	request VSpipi[a,i1,a1,i2] 
	tii[i1,i]        = VCACT2AA[a,i,a1,i2]*VSpipi[a,i1,a1,i2]
	tii[i1,i]       *= 0.5
	LFmi_a[i1,i] += tii[i1,i]
    enddo i1
endpardo i, a1, i2, a

pardo i, a1, i2, a
WHERE a < a1
    request VCACT2AA[a,i,a1,i2] 
    do i1
	request VSpipi[a,i1,a1,i2] 
	tii[i1,i]        = VCACT2AA[a,i,a1,i2]*VSpipi[a,i1,a1,i2]
	LFmi_a[i1,i] += tii[i1,i]
    enddo i1
endpardo i, a1, i2, a

pardo i, i1, j, b
    request Vpiqj[i,i1,b,j] 
    GET                VCACT1A[b,j]
    tii[i1,i]        = Vpiqj[i,i1,b,j]*VCACT1A[b,j]
    LFmi_a[i1,i] += tii[i1,i]
endpardo i, i1, j, b

pardo i, a, j, b
    request VCACT2AB[a,i,b,j] 
    do i1  
	request Vpiqj[a,i1,b,j] 
	tii[i1,i]        = VCACT2AB[a,i,b,j]*Vpiqj[a,i1,b,j]
	LFmi_a[i1,i] += tii[i1,i]
    enddo i1  
endpardo i, a, j, b

#     Fmi_b

pardo j, j1, j2, b
    request VSpipi[b,j2,j,j1] 
    GET                VCACT1A[b,j2]
    tjj[j1,j]        = VSpipi[b,j2,j,j1]*VCACT1A[b,j2]
    LFmi_b[j1,j] += tjj[j1,j]
endpardo j, j1, j2, b

pardo j, b1, j2, b
WHERE b < b1
    request VCACT2AA[b,j,b1,j2] 
    do j1
	request VSpipi[b,j1,b1,j2] 
	tjj[j1,j]        = VCACT2AA[b,j,b1,j2]*VSpipi[b,j1,b1,j2]
	LFmi_b[j1,j] += tjj[j1,j]
    enddo j1
endpardo j, b1, j2, b

pardo j, b1, j2, b
WHERE b == b1
    request VCACT2AA[b,j,b1,j2] 
    do j1
	request VSpipi[b,j1,b1,j2] 
	tjj[j1,j]        = VCACT2AA[b,j,b1,j2]*VSpipi[b,j1,b1,j2]
	tjj[j1,j]       *= 0.5
	LFmi_b[j1,j] += tjj[j1,j]
    enddo j1
endpardo j, b1, j2, b

pardo j, j1, i, a
    request Vpiqj[a,i,j,j1] 
    GET                VCACT1A[a,i]
    tjj[j1,j]        = Vpiqj[a,i,j,j1]*VCACT1A[a,i]
    LFmi_b[j1,j] += tjj[j1,j]
endpardo j, j1, i, a

pardo j, b, i, a
    request VCACT2AB[a,i,b,j] 
    do j1  
	request Vpiqj[a,i,b,j1] 
	tjj[j1,j]        = VCACT2AB[a,i,b,j]*Vpiqj[a,i,b,j1]
	LFmi_b[j1,j] += tjj[j1,j]
    enddo j1  
endpardo j, b, i, a

pardo j1, a, b, a1

    request Vaaai[a,a1,b,j1] 
    GET             VCACT1A[b,j1]
    tqppq[j1,a,a1,b] = Vaaai[a,a1,b,j1]

    t1aa[a1,a]    = Vaaai[a,a1,b,j1]*VCACT1A[b,j1]
    LFae_a[a1,a] += t1aa[a1,a]

    do i
    do j

	request                    VFLAB[a1,b,i,j] 
	T1qppq[j1,a,i,j]         = tqppq[j1,a,a1,b]*VFLAB[a1,b,i,j]
	prepare Njjai[j1,a,i,j] += T1qppq[j1,a,i,j]

    enddo j
    enddo i

endpardo j1, a, b, a1

pardo i1, b, a, b1  

    request Vaaai[b,b1,a,i1] 
    tpqpq[i1,b,a,b1] = Vaaai[b,b1,a,i1] 

    do i
    do j
	request                    VFLAB[a,b1,i,j] 
	T1pqpq[i1,b,i,j]         = tpqpq[i1,b,a,b1]*VFLAB[a,b1,i,j]
	prepare Niibj[i1,b,i,j] += T1pqpq[i1,b,i,j]
    enddo j
    enddo i

endpardo i1, b, a, b1  

pardo i1, a, a1, a2  

    request VSaaai[a1,a,a2,i1] 
    GET                 VCACT1A[a2,i1]
    tpppp[i1,a,a2,a1] = VSaaai[a1,a,a2,i1] 

    t1aa[a,a1]        = VSaaai[a1,a,a2,i1]*VCACT1A[a2,i1]
    LFae_a[a,a1]  += t1aa[a,a1]

    do i
    do i2

	request                     VFLAA[a2,a1,i,i2] 
	T1pppp[i1,a,i,i2]         = tpppp[i1,a,a2,a1]*VFLAA[a2,a1,i,i2]
	T1pppp[i1,a,i,i2]        *= 0.5
	prepare Niiai[i1,a,i,i2] += T1pppp[i1,a,i,i2]

    enddo i2
    enddo i

endpardo i1, a, a1, a2  

pardo i1, j1, a, b 

    request            Vpiqj[a,i1,b,j1] 
    tpqpq[i1,j1,a,b] = Vpiqj[a,i1,b,j1] 

    do i
    do j
	request                 VFLAB[a,b,i,j] 
	tiijj[i,i1,j,j1]      = tpqpq[i1,j1,a,b]*VFLAB[a,b,i,j]
	put Niijj[i,i1,j,j1] += tiijj[i,i1,j,j1]
    enddo j
    enddo i

endpardo i1, j1, a, b  

pardo i1, i3, a, a1  

    request             VSpipi[a,i1,a1,i3] 
    tpppp[i1,i3,a,a1] = VSpipi[a,i1,a1,i3]  

    do i  
    do i2  
	request                  VFLAA[a,a1,i,i2] 
	tiiii[i1,i,i3,i2]      = tpppp[i1,i3,a,a1]*VFLAA[a,a1,i,i2]  
	tiiii[i1,i,i3,i2]     *= 0.5
	put Niiii[i1,i,i3,i2] += tiiii[i1,i,i3,i2]
    enddo i2  
    enddo i

endpardo i1, i3, a, a1  

#    Form Half back transformed cluster arrays  
#    -----------------------------------------

pardo a1, i1, i   

    allocate LLaiai[*,i,a1,i1] 

    do a  
	request VCACT2AA[a,i,a1,i1]  
	LLaiai[a,i,a1,i1]  = VCACT2AA[a, i,a1,i1] 
	LLaiai[a,i,a1,i1] *= 2.0  
    enddo a  

    do lambda   
	Zaa[lambda,i,a1,i1] = 0.0 
	do a  
	    Txiai[lambda,i,a1,i1] = LLaiai[a,i,a1,i1]*ca[lambda,a]
	    Zaa[lambda,i,a1,i1]  += Txiai[lambda,i,a1,i1] 
	enddo a 
	prepare T1AO_aa[lambda,i,a1,i1] = Zaa[lambda,i,a1,i1] 
    enddo lambda  

    deallocate LLaiai[*,i,a1,i1] 

endpardo a1, i1, i   

pardo b, j, i   

    allocate LLaibj[*,i,b,j] 

    do a  
	request VCACT2AB[a,i,b,j]  
	LLaibj[a,i,b,j] = VCACT2AB[a,i,b,j] 
    enddo a  

    do lambda   
	Zab[lambda,i,b,j] = 0.0 
	do a  
	    Txibj[lambda,i,b,j] = LLaibj[a,i,b,j]*ca[lambda,a]
	    Zab[lambda,i,b,j]  += Txibj[lambda,i,b,j] 
	enddo a 
	prepare T1AO_ab[lambda,i,b,j] = Zab[lambda,i,b,j] 
    enddo lambda  

    deallocate LLaibj[*,i,b,j] 

endpardo b, j, i   

server_barrier 
do i 
do i1 
    tii[i,i1]        = LFmi_a[i,i1] 
    PUT Fmi_a[i,i1] += tii[i,i1] 
enddo i1 
enddo i 
do j 
do j1 
    tjj[j,j1]        = LFmi_b[j,j1] 
    PUT Fmi_b[j,j1] += tjj[j,j1] 
enddo j1 
enddo j 
do a 
do a1 
    taa[a,a1]        = LFae_a[a,a1] 
    PUT Fae_a[a,a1] += taa[a,a1] 
enddo a1 
enddo a 
server_barrier 
do a 
do a1 
    GET            Fae_a[a,a1] 
    taa[a,a1] = Fae_a[a,a1]  
    LFae_a[a,a1] = taa[a,a1] # Fae_a(a,a1) 
enddo a1 
enddo a 
do i 
do i1 
    GET            Fmi_a[i,i1] 
    tii[i,i1] =  Fmi_a[i,i1]    
    LFmi_a[i,i1] = tii[i,i1] # Fmi_a(i,i1) 
enddo i1 
enddo i 
do j 
do j1 
    GET            Fmi_b[j,j1] 
    tjj[j,j1] = Fmi_b[j,j1] 
    LFmi_b[j,j1] = tjj[j,j1] # Fmi_b(j,j1) 
enddo j1 
enddo j 
server_barrier 

ENDPROC FACTORS_NEW_MCPT

PROC R2AALIN_NEW_MCPT
#    ---------------- 
#print "Starting Q2*H*B _aa"

create D2aa 
server_barrier 

pardo a, a1, i2, i3
WHERE i2 < i3

    request VCACT2AA[a,i2,a1,i3] 
    request T2AA[a,i2,a1,i3] 

    T2aiai[a,i2,a1,i3] = T2AA[a,i2,a1,i3]

    do i
    do i1
	request HBAR_iiii[i2,i,i3,i1] 
	GET                             Niiii[i2,i,i3,i1]

	T1aiai[a,i,a1,i1]             = HBAR_iiii[i2,i,i3,i1]*VCACT2AA[a,i2,a1,i3]
	T1aiai[a,i,a1,i1]            *= 0.25
	Taiai[a,i,a1,i1]              = T1aiai[a,i,a1,i1]
#   
	T1aiai[a,i,a1,i1]             = Niiii[i2,i,i3,i1]*T2aiai[a,i2,a1,i3]
	T1aiai[a,i,a1,i1]            *= 0.25
	Taiai[a,i,a1,i1]             += T1aiai[a,i,a1,i1]

	PUT D2aa[a,i,a1,i1] += Taiai[a,i,a1,i1]

    enddo i1
    enddo i

endpardo a, a1, i2, i3

pardo a, a1, i2, i3
WHERE i2 == i3

    request VCACT2AA[a,i2,a1,i3] 
    request T2AA[a,i2,a1,i3] 

    T2aiai[a,i2,a1,i3] = T2AA[a,i2,a1,i3]

    do i
    do i1
	request HBAR_iiii[i2,i,i3,i1] 
	GET                             Niiii[i2,i,i3,i1]

	T1aiai[a,i,a1,i1]             = HBAR_iiii[i2,i,i3,i1]*VCACT2AA[a,i2,a1,i3]
	T1aiai[a,i,a1,i1]            *= 0.125
	Taiai[a,i,a1,i1]              = T1aiai[a,i,a1,i1]
#   
	T1aiai[a,i,a1,i1]             = Niiii[i2,i,i3,i1]*T2aiai[a,i2,a1,i3]
	T1aiai[a,i,a1,i1]            *= 0.125
	Taiai[a,i,a1,i1]             += T1aiai[a,i,a1,i1]

	PUT D2aa[a,i,a1,i1] += Taiai[a,i,a1,i1]

    enddo i1
    enddo i

endpardo a, a1, i2, i3

pardo i1, a1, i2, a2  

    request HBAR_AJIB_aaaa[i2,a2,a1,i1] 
    t1aiai[a2,i2,a1,i1] = HBAR_AJIB_aaaa[i2,a2,a1,i1] 

    do a
    do i
	request VCACT2AA[a,i,a2,i2] 
	Taiai[a,i,a1,i1] = VCACT2AA[a,i,a2,i2]*t1aiai[a2,i2,a1,i1]

	PUT D2aa[a,i,a1,i1] += Taiai[a,i,a1,i1]

    enddo i
    enddo a

endpardo i1, a1, i2, a2  

pardo a1, i1, b, j 

    request HBAR_AJIB_aabb[j,b,a1,i1] 
    tbjai[b,j,a1,i1] = HBAR_AJIB_aabb[j,b,a1,i1] 

    do a
    do i
	request VCACT2AB[a,i,b,j] 
	Taiai[a,i,a1,i1] = VCACT2AB[a,i,b,j]*tbjai[b,j,a1,i1]

	PUT D2aa[a,i,a1,i1] += Taiai[a,i,a1,i1]

    enddo i
    enddo a

endpardo a1, i1, b, j 

pardo i, i1, a, a2 

    request VCACT2AA[a,i,a2,i1] 
    request T2AA[a,i,a2,i1] 

    do a1

	T1aiai[a,i,a1,i1]             = VCACT2AA[a,i,a2,i1]*LHBAR_aa[a1,a2]
	Taiai[a,i,a1,i1]              = T1aiai[a,i,a1,i1]

	T1aiai[a,i,a1,i1]             = T2AA[a,i,a2,i1]*LFae_a[a1,a2]
	Taiai[a,i,a1,i1]             += T1aiai[a,i,a1,i1]
	Taiai[a,i,a1,i1]             *= 0.5

	PUT D2aa[a,i,a1,i1] += Taiai[a,i,a1,i1]

    enddo a1

endpardo i, i1, a, a2 

pardo a, a1, i, i2

    request VCACT2AA[a,i,a1,i2] 
    request T2AA[a,i,a1,i2] 

    do i1

	T1aiai[a,i,a1,i1]             = VCACT2AA[a,i,a1,i2]*LHBAR_ii[i2,i1]
	Taiai[a,i,a1,i1]              = T1aiai[a,i,a1,i1]

	T1aiai[a,i,a1,i1]             = T2AA[a,i,a1,i2]*LFmi_a[i2,i1]
	Taiai[a,i,a1,i1]             += T1aiai[a,i,a1,i1]
	Taiai[a,i,a1,i1]             *= -0.5

	PUT D2aa[a,i,a1,i1] += Taiai[a,i,a1,i1]

    enddo i1

endpardo a, a1, i, i2

#  PART       <2|HT1|0>

pardo a, i, i1

    allocate Liiai[*,i,a,i1]
    allocate L2iiai[i,*,a,i1]

    do i2

	request HBAR_IAJK_aaaa[i2,i,a,i1] 
	Liiai[i2,i,a,i1]  = HBAR_IAJK_aaaa[i2,i,a,i1]
	request Niiai[i2,a,i,i1]   
	L2iiai[i,i2,a,i1] = Niiai[i2,a,i,i1]  

    enddo i2

    do a1
	Taiai[a,i,a1,i1] = 0.0
	do i2
	    get                 VCACT1A[a1,i2]
#get                 T1A(a1,i2)
	    T1aiai[a,i,a1,i1] = Liiai[i2,i,a,i1]*VCACT1A[a1,i2]
	    Taiai[a,i,a1,i1] += T1aiai[a,i,a1,i1]

	    T1aiai[a,i,a1,i1] = L2iiai[i,i2,a,i1]*St1a[a1,i2]
	    Taiai[a,i,a1,i1] += T1aiai[a,i,a1,i1]
	enddo i2

	T3aiai[a1,i,a,i1]             = Taiai[a,i,a1,i1]
	T3aiai[a1,i,a,i1]            *= -1.0

	prepare VCHACT2AA[a,i,a1,i1] += Taiai[a,i,a1,i1]
	prepare VCHACT2AA[a1,i,a,i1] += T3aiai[a1,i,a,i1]

    enddo a1

    deallocate Liiai[*,i,a,i1]
    deallocate L2iiai[i,*,a,i1]

endpardo a, i, i1

pardo a, a1, a2, i
WHERE a < a1 

    request HBAR_ABCI_aaaa[a,a2,a1,i] 

    do i1

	GET                            VCACT1A[a2,i1]
	T1aiai[a,i,a1,i1]            = HBAR_ABCI_aaaa[a,a2,a1,i]*VCACT1A[a2,i1]
	T1aiai[a,i,a1,i1]           *= -1.0

	PUT D2aa[a,i,a1,i1] += T1aiai[a,i,a1,i1]

    enddo i1

endpardo a, a1, a2, i

pardo a, a1, a2, i
WHERE a == a1 

    request HBAR_ABCI_aaaa[a,a2,a1,i] 

    do i1

	GET                             VCACT1A[a2,i1]
	T1aiai[a,i,a1,i1]             = HBAR_ABCI_aaaa[a,a2,a1,i]*VCACT1A[a2,i1]
	T3aiai[a,i1,a1,i]             = T1aiai[a,i,a1,i1]
	T1aiai[a,i,a1,i1]            *= -1.0

	prepare VCHACT2AA[a,i,a1,i1] += T1aiai[a,i,a1,i1]
	prepare VCHACT2AA[a,i1,a1,i] += T3aiai[a,i1,a1,i]

    enddo i1

endpardo a, a1, a2, i

server_barrier 
pardo a, i, a1, i1 
    GET                 D2aa[a,i,a1,i1] 
    T2aiai[a1,i1,a,i] = D2aa[a,i,a1,i1]  
    T3aiai[a1,i,a,i1] = D2aa[a,i,a1,i1]  
    T4aiai[a,i1,a1,i] = D2aa[a,i,a1,i1]  
    T3aiai[a1,i,a,i1] *= -1.0  
    T4aiai[a,i1,a1,i] *= -1.0  

    prepare VCHACT2AA[a,i,a1,i1] += D2aa[a,i,a1,i1]
    prepare VCHACT2AA[a1,i1,a,i] += T2aiai[a1,i1,a,i]
    prepare VCHACT2AA[a1,i,a,i1] += T3aiai[a1,i,a,i1]
    prepare VCHACT2AA[a,i1,a1,i] += T4aiai[a,i1,a1,i]
endpardo a, i, a1, i1 
server_barrier 
pardo a,i,a1,i1
put D2aa[a,i,a1,i1] = 0.0
endpardo a,i,a1,i1
server_barrier 

ENDPROC R2AALIN_NEW_MCPT

PROC R2ABLIN_NEW_MCPT
#    ---------------- 
#print "Starting Q2*H*B _ab"

pardo i, j, b, a1  

    request VCACT2AB[a1,i,b,j] 
    request T2AB[a1,i,b,j] 

    do a
	Taibj[a,i,b,j]              = VCACT2AB[a1,i,b,j]*LHBAR_aa[a,a1]
	T1aibj[a,i,b,j]             = T2AB[a1,i,b,j]*LFae_a[a,a1]
	Taibj[a,i,b,j]             += T1aibj[a,i,b,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    enddo a

endpardo i, j, b, a1 

pardo j, a, a1, j1  

    request HBAR_AJIB_iibb[j1,j,a,a1] 

    do i
    do b

    if a < b 
	request VCACT2AB[a1,i,b,j1] 
	Taibj[a,i,b,j]              = HBAR_AJIB_iibb[j1,j,a,a1]*VCACT2AB[a1,i,b,j1]
	T1aibj[b,j,a,i]             = Taibj[a,i,b,j] 
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
	prepare VCHACT2AB[b,j,a,i] += T1aibj[b,j,a,i]
    endif 

    if a == b 
	request VCACT2AB[a1,i,b,j1] 
	Taibj[a,i,b,j]              = HBAR_AJIB_iibb[j1,j,a,a1]*VCACT2AB[a1,i,b,j1]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    endif 

    enddo b
    enddo i

endpardo j, a, a1, j1  

pardo j, b, i1, a1  

    request VCACT2AB[a1,i1,b,j] 
    request HBAR_AJIB_aabb[i1,a1,b,j] 

    do i
    do a

    if a < b 
	request VCACT2AA[a,i,a1,i1] 
	request HBAR_AJIB_aaaa[i1,a1,a,i] 
	T1aibj[a,i,b,j]             = HBAR_AJIB_aaaa[i1,a1,a,i]*VCACT2AB[a1,i1,b,j]
	T2aibj[a,i,b,j]             = HBAR_AJIB_aabb[i1,a1,b,j]*VCACT2AA[a,i,a1,i1]
	Taibj[a,i,b,j]              = T1aibj[a,i,b,j]
	Taibj[a,i,b,j]             += T2aibj[a,i,b,j]
	T3aibj[b,j,a,i]             = Taibj[a,i,b,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
	prepare VCHACT2AB[b,j,a,i] += T3aibj[b,j,a,i]
    endif 

    if a == b 
	request VCACT2AA[a,i,a1,i1] 
	request HBAR_AJIB_aaaa[i1,a1,a,i] 
	T1aibj[a,i,b,j]             = HBAR_AJIB_aaaa[i1,a1,a,i]*VCACT2AB[a1,i1,b,j]
	T2aibj[a,i,b,j]             = HBAR_AJIB_aabb[i1,a1,b,j]*VCACT2AA[a,i,a1,i1]
	Taibj[a,i,b,j]              = T1aibj[a,i,b,j]
	Taibj[a,i,b,j]             += T2aibj[a,i,b,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    endif 

    enddo a
    enddo i

endpardo j, b, i1, a1  

pardo i, a, j, b1 

    request VCACT2AB[a,i,b1,j] 
    request T2AB[a,i,b1,j] 

    do b
	Taibj[a,i,b,j]              = VCACT2AB[a,i,b1,j]*LHBAR_aa[b,b1]
	T1aibj[a,i,b,j]             = T2AB[a,i,b1,j]*LFae_a[b,b1]
	Taibj[a,i,b,j]             += T1aibj[a,i,b,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    enddo  b

endpardo i, a, j, b1 

pardo i, b, i1, b1 

    request HBAR_AJIB_iibb[i1,i,b,b1] 

    do j
    do a

    if a < b 
	request VCACT2AB[a,i1,b1,j] 
	Taibj[a,i,b,j]              = HBAR_AJIB_iibb[i1,i,b,b1]*VCACT2AB[a,i1,b1,j]
	T1aibj[b,j,a,i]             = taibj[a,i,b,j]  
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
	prepare VCHACT2AB[b,j,a,i] += T1aibj[b,j,a,i]
    endif 

    if a == b 
	request VCACT2AB[a,i1,b1,j] 
	Taibj[a,i,b,j]              = HBAR_AJIB_iibb[i1,i,b,b1]*VCACT2AB[a,i1,b1,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    endif 

    enddo a
    enddo j

endpardo i, b, i1, b1 

pardo i, a, j1, b1  

    request VCACT2AB[a,i,b1,j1] 
    request HBAR_AJIB_aabb[j1,b1,a,i] 

    do j
    do b

    if a < b 
	request VCACT2AA[b,j,b1,j1] 
	request HBAR_AJIB_aaaa[j1,b1,b,j] 
	T1aibj[a,i,b,j]             = HBAR_AJIB_aaaa[j1,b1,b,j]*VCACT2AB[a,i,b1,j1]
	T2aibj[a,i,b,j]             = HBAR_AJIB_aabb[j1,b1,a,i]*VCACT2AA[b,j,b1,j1]
	Taibj[a,i,b,j]              = T1aibj[a,i,b,j]
	Taibj[a,i,b,j]             += T2aibj[a,i,b,j]
	T3aibj[b,j,a,i]             = Taibj[a,i,b,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
	prepare VCHACT2AB[b,j,a,i] += T3aibj[b,j,a,i]
    endif 

    if a == b 
	request VCACT2AA[b,j,b1,j1] 
	request HBAR_AJIB_aaaa[j1,b1,b,j] 
	T1aibj[a,i,b,j]             = HBAR_AJIB_aaaa[j1,b1,b,j]*VCACT2AB[a,i,b1,j1]
	T2aibj[a,i,b,j]             = HBAR_AJIB_aabb[j1,b1,a,i]*VCACT2AA[b,j,b1,j1]
	Taibj[a,i,b,j]              = T1aibj[a,i,b,j]
	Taibj[a,i,b,j]             += T2aibj[a,i,b,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    endif 

    enddo b
    enddo j

endpardo i, a, j1, b1 

pardo j, b, a, i1  

    request VCACT2AB[a,i1,b,j] 
    request T2AB[a,i1,b,j] 

    do i
	Taibj[a,i,b,j]              = VCACT2AB[a,i1,b,j]*LHBAR_ii[i1,i]
	T1aibj[a,i,b,j]             = T2AB[a,i1,b,j]*LFmi_a[i1,i]
	Taibj[a,i,b,j]             += T1aibj[a,i,b,j]
	Taibj[a,i,b,j]             *= -1.0  
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    enddo i

endpardo j, b, a, i1  

pardo i1, j1, a, b 
WHERE a < b 

    request VCACT2AB[a,i1,b,j1] 
    request T2AB[a,i1,b,j1] 
    t2aibj[a,i1,b,j1] = T2AB[a,i1,b,j1]

    do i
    do j
	request HBAR_iijj[i1,i,j1,j] 
	GET                           Niijj[i,i1,j,j1]
	Taibj[a,i,b,j]              = HBAR_iijj[i1,i,j1,j]*VCACT2AB[a,i1,b,j1]
	T1aibj[a,i,b,j]             = Niijj[i,i1,j,j1]*t2aibj[a,i1,b,j1]
	Taibj[a,i,b,j]             += T1aibj[a,i,b,j]
	T3aibj[b,j,a,i]             = Taibj[a,i,b,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
	prepare VCHACT2AB[b,j,a,i] += T3aibj[b,j,a,i]
    enddo j
    enddo i

endpardo i1, j1, a, b  

pardo i1, j1, a, b 
WHERE a == b 

    request VCACT2AB[a,i1,b,j1] 
    request T2AB[a,i1,b,j1] 
    t2aibj[a,i1,b,j1] = T2ab[a,i1,b,j1]

    do i
    do j
	request HBAR_iijj[i1,i,j1,j] 
	GET                           Niijj[i,i1,j,j1]
	Taibj[a,i,b,j]              = HBAR_iijj[i1,i,j1,j]*VCACT2AB[a,i1,b,j1]
	T1aibj[a,i,b,j]             = Niijj[i,i1,j,j1]*t2aibj[a,i1,b,j1]
	Taibj[a,i,b,j]             += T1aibj[a,i,b,j]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    enddo j
    enddo i

endpardo i1, j1, a, b  

pardo j1, i, a, b  

    request VCACT2AB[a,i,b,j1] 
    request T2AB[a,i,b,j1] 

    do j
	Taibj[a,i,b,j]              = VCACT2AB[a,i,b,j1]*LHBAR_ii[j1,j]
	T1aibj[a,i,b,j]             = T2AB[a,i,b,j1]*LFmi_b[j1,j]
	Taibj[a,i,b,j]             += T1aibj[a,i,b,j]
	Taibj[a,i,b,j]             *= -1.0  
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    enddo j

endpardo j1, i, a, b  

#  PART       <2|HT1|0>

pardo a, i, j

    allocate Laijj[a,i,*,j]

    do j1
	request HBAR_IAJK_aabb[j1,j,a,i] 
	Laijj[a,i,j1,j] = HBAR_IAJK_aabb[j1,j,a,i]
    enddo j1

    do b
	Taibj[a,i,b,j]=0.0
	do j1
	    GET               VCACT1A[b,j1]
	    T1aibj[a,i,b,j] = Laijj[a,i,j1,j]*VCACT1A[b,j1]
	    Taibj[a,i,b,j] -= T1aibj[a,i,b,j]
	enddo j1
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    enddo b

    deallocate Laijj[a,i,*,j]

endpardo a, i, j

pardo a, i, j

    allocate Laijj[a,i,*,j]

    do j1
	request Njjai[j1,a,i,j] 
	Laijj[a,i,j1,j] = Njjai[j1,a,i,j]
    enddo j1

    do b
	Taibj[a,i,b,j]=0.0
	do j1
	    T1aibj[a,i,b,j] = Laijj[a,i,j1,j]*St1a[b,j1]
	    Taibj[a,i,b,j] -= T1aibj[a,i,b,j]
	enddo j1
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    enddo b

    deallocate Laijj[a,i,*,j]

endpardo a, i, j

pardo i, j, b

    allocate Liibj[*,i,b,j]
    allocate L2iibj[*,i,b,j]

    do i1
	request HBAR_IAJK_aabb[i1,i,b,j] 
	Liibj[i1,i,b,j]  = HBAR_IAJK_aabb[i1,i,b,j]
    enddo i1

    do i1
	request Niibj[i1,b,i,j]   
	L2iibj[i1,i,b,j] = Niibj[i1,b,i,j]
    enddo i1

    do a
	Taibj[a,i,b,j]=0.0
	do i1
	    GET               VCACT1A[a,i1]
	    T1aibj[a,i,b,j] = Liibj[i1,i,b,j]*VCACT1A[a,i1]
	    Taibj[a,i,b,j] -= T1aibj[a,i,b,j]

	    T1aibj[a,i,b,j] = L2iibj[i1,i,b,j]*St1a[a,i1]
	    Taibj[a,i,b,j] -= T1aibj[a,i,b,j]
	enddo i1
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j]
    enddo a

    deallocate Liibj[*,i,b,j]
    deallocate L2iibj[*,i,b,j]

endpardo i, j, b

pardo a, b1, i

    allocate Lbbai[b1,*,a,i]

    do b
	request HBAR_ABCI_aabb[b1,b,a,i] 
	Lbbai[b1,b,a,i] = HBAR_ABCI_aabb[b1,b,a,i]
    enddo b

    do j
	Taibj[a,i,b1,j]=0.0
	do b
	    GET               VCACT1A[b,j]
	    T1aibj[a,i,b1,j] = Lbbai[b1,b,a,i]*VCACT1A[b,j]
	    Taibj[a,i,b1,j] += T1aibj[a,i,b1,j]
	enddo b
	prepare VCHACT2AB[a,i,b1,j] += Taibj[a,i,b1,j]
    enddo j

    deallocate Lbbai[b1,*,a,i]

endpardo a, b1, i

pardo a1, b, j

    allocate Laabj[a1,*,b,j]

    do a
	request HBAR_ABCI_aabb[a1,a,b,j] 
	Laabj[a1,a,b,j] = HBAR_ABCI_aabb[a1,a,b,j]
    enddo a

    do i
	Taibj[a1,i,b,j] = 0.0
	do a
	    GET               VCACT1A[a,i]
	    T1aibj[a1,i,b,j] = Laabj[a1,a,b,j]*VCACT1A[a,i]
	    Taibj[a1,i,b,j] += T1aibj[a1,i,b,j]
	enddo a
	prepare VCHACT2AB[a1,i,b,j] += Taibj[a1,i,b,j]
    enddo i

    deallocate Laabj[a1,*,b,j]

endpardo a1, b, j

ENDPROC R2ABLIN_NEW_MCPT

#    -------------------- 
PROC AOLADDER_NEW  

#    ------------------------------------------------------------------------ 
server_barrier 

pardo lambda, i, i1  

    allocate Lxiai[lambda,i,*,i1] 

    do a1 
	request T1AO_aa[lambda,i,a1,i1]   
	Lxiai[lambda,i,a1,i1] = T1AO_aa[lambda,i,a1,i1] 
    enddo a1 

    do sigma 
	ZZaa[lambda,i,sigma,i1]  = 0.0 
	prepare T2AO_aa[lambda,i,sigma,i1] = ZZaa[lambda,i,sigma,i1]
	do a1 
	    Txixi[lambda,i,sigma,i1] = Lxiai[lambda,i,a1,i1]*ca[sigma,a1]
	    ZZaa[lambda,i,sigma,i1] += Txixi[lambda,i,sigma,i1]  
	enddo a1 
	prepare TAO_aa[lambda,i,sigma,i1] = ZZaa[lambda,i,sigma,i1]
    enddo sigma 

    deallocate Lxiai[lambda,i,*,i1] 

endpardo lambda, i, i1   

pardo lambda, i, j  

    allocate Lxibj[lambda,i,*,j] 

    do b 
	request T1AO_ab[lambda,i,b,j]   
	Lxibj[lambda,i,b,j] = T1AO_ab[lambda,i,b,j] 
    enddo b 

    do sigma 
	ZZab[lambda,i,sigma,j]  = 0.0 
	prepare T2AO_ab[lambda,i,sigma,j] = ZZab[lambda,i,sigma,j]
	do b 
	    Txixj[lambda,i,sigma,j] = Lxibj[lambda,i,b,j]*ca[sigma,b]
	    ZZab[lambda,i,sigma,j] += Txixj[lambda,i,sigma,j]  
	enddo b 
	prepare TAO_ab[lambda,i,sigma,j] = ZZab[lambda,i,sigma,j]
    enddo sigma 

    deallocate Lxibj[lambda,i,*,j] 

endpardo lambda, i, j   

server_barrier   

#    Contract AOINT with half back transformed Amplitudes 
#    ----------------------------------------------------    

#pardo mu, nu, lambda, sigma
#where mu < nu
#
#    execute compute_integral_batch aoint[lambda,mu,sigma,nu]
#
#    do i
#    do i1
#    if i <= i1 
#	request TAO_aa[lambda,i,sigma,i1] 
#	Yaa[mu,i,nu,i1]              = aoint[lambda,mu,sigma,nu]*TAO_aa[lambda,i,sigma,i1]
#	if i < i1 
#	    Y1aa[nu,i1,mu,i]             = Yaa[mu,i,nu,i1]  
#	endif 
#	prepare T2AO_aa[mu,i,nu,i1] += Yaa[mu,i,nu,i1]
#	if i < i1 
#	    prepare T2AO_aa[nu,i1,mu,i] += Y1aa[nu,i1,mu,i]
#	endif 
#    endif 
#    enddo i1
#    enddo i
#
#endpardo mu, nu, lambda, sigma
#
#pardo mu, nu, lambda, sigma
#where mu == nu
#
#    execute compute_integral_batch aoint[lambda,mu,sigma,nu]
#
#    do i
#    do i1
#    if i <= i1 
#	request TAO_aa[lambda,i,sigma,i1] 
#	Yaa[mu,i,nu,i1]              = aoint[lambda,mu,sigma,nu]*TAO_aa[lambda,i,sigma,i1]
#	if i < i1 
#	    Y1aa[nu,i1,mu,i]             = Yaa[mu,i,nu,i1]  
#	endif 
#	prepare T2AO_aa[mu,i,nu,i1] += Yaa[mu,i,nu,i1]
#	if i < i1 
#	    prepare T2AO_aa[nu,i1,mu,i] += Y1aa[nu,i1,mu,i]
#	endif 
#    endif 
#    enddo i1
#    enddo i
#
#endpardo mu, nu, lambda, sigma
#
#pardo mu, nu, lambda, sigma
#where mu < nu
#
#    execute compute_integral_batch aoint[lambda,mu,sigma,nu]
#
#    do i
#    do i1
#    if i <= i1 
#	request TAO_ab[lambda,i,sigma,i1] 
#	Yaa[mu,i,nu,i1]              = aoint[lambda,mu,sigma,nu]*TAO_ab[lambda,i,sigma,i1]
#	if i < i1 
#	    Y1aa[nu,i1,mu,i]             = Yaa[mu,i,nu,i1]  
#	endif 
#	prepare T2AO_ab[mu,i,nu,i1] += Yaa[mu,i,nu,i1]
#	if i < i1 
#	    prepare T2AO_ab[nu,i1,mu,i] += Y1aa[nu,i1,mu,i]
#	endif 
#    endif 
#    enddo i1
#    enddo i
#
#endpardo mu, nu, lambda, sigma
#
#pardo mu, nu, lambda, sigma
#where mu == nu
#
#    execute compute_integral_batch aoint[lambda,mu,sigma,nu]
#
#    do i
#    do i1
#    if i <= i1 
#	request TAO_ab[lambda,i,sigma,i1] 
#	Yaa[mu,i,nu,i1]              = aoint[lambda,mu,sigma,nu]*TAO_ab[lambda,i,sigma,i1]
#	if i < i1 
#	    Y1aa[nu,i1,mu,i]             = Yaa[mu,i,nu,i1]  
#	endif 
#	prepare T2AO_ab[mu,i,nu,i1] += Yaa[mu,i,nu,i1]
#	if i < i1 
#	    prepare T2AO_ab[nu,i1,mu,i] += Y1aa[nu,i1,mu,i]
#	endif 
#    endif 
#    enddo i1
#    enddo i
#
#endpardo mu, nu, lambda, sigma

pardo mu, nu, lambda, sigma
where mu <= nu

    execute compute_integral_batch aoint[lambda,mu,sigma,nu]

    do i
    do i1
    if i <= i1 
	request TAO_aa[lambda,i,sigma,i1] 
	Yaa[mu,i,nu,i1]              = aoint[lambda,mu,sigma,nu]*TAO_aa[lambda,i,sigma,i1]
	if i < i1 
	    Y1aa[nu,i1,mu,i]             = Yaa[mu,i,nu,i1]  
	    prepare T2AO_aa[nu,i1,mu,i] += Y1aa[nu,i1,mu,i]
	endif 
	prepare T2AO_aa[mu,i,nu,i1] += Yaa[mu,i,nu,i1]
    endif 
    enddo i1
    enddo i

    do i
    do i1
    if i <= i1 
	request TAO_ab[lambda,i,sigma,i1] 
	Yaa[mu,i,nu,i1]              = aoint[lambda,mu,sigma,nu]*TAO_ab[lambda,i,sigma,i1]
	if i < i1 
	    Y1aa[nu,i1,mu,i]             = Yaa[mu,i,nu,i1]  
	    prepare T2AO_ab[nu,i1,mu,i] += Y1aa[nu,i1,mu,i]
	endif 
	prepare T2AO_ab[mu,i,nu,i1] += Yaa[mu,i,nu,i1]
    endif 
    enddo i1
    enddo i

endpardo mu, nu, lambda, sigma

server_barrier  

#    Perform final transformation 
#    ---------------------------- 

pardo nu, i, i1
    allocate LLaa[*,i,nu,i1]
    do mu
	request T2AO_aa[mu,i,nu,i1] 
	do a
	    Taixi[a,i,nu,i1] = T2AO_aa[mu,i,nu,i1]*ca[mu,a]
	    LLaa[a,i,nu,i1] += Taixi[a,i,nu,i1]
	enddo a
    enddo mu
    do a
	LLaa[a,i,nu,i1] *= 0.5
	do a1
	    Taiai[a,i,a1,i1]             = LLaa[a,i,nu,i1]*ca[nu,a1]
	    prepare VCHACT2AA[a,i,a1,i1] += Taiai[a,i,a1,i1] 
	enddo a1
    enddo a
    deallocate LLaa[*,i,nu,i1]
endpardo nu, i, i1

pardo nu, i, j
    allocate LLab[*,i,nu,j]
    do mu
	request T2AO_ab[mu,i,nu,j] 
	do a
	    Taixj[a,i,nu,j] = T2AO_ab[mu,i,nu,j]*ca[mu,a]
	    LLab[a,i,nu,j] += Taixj[a,i,nu,j]
	enddo a
    enddo mu
    do a
    do b
	Taibj[a,i,b,j]             = LLab[a,i,nu,j]*ca[nu,b]
	prepare VCHACT2AB[a,i,b,j] += Taibj[a,i,b,j] 
    enddo b
    enddo a
    deallocate LLab[*,i,nu,j]
endpardo nu, i, j

#    ------------------------------------------------------------------------ 

ENDPROC AOLADDER_NEW  

#    ------------------------------------------------------------------------ 

PROC R1ANEW_MCPT
#     ----------- 

#print "Starting Q1*H*B"

pardo a, i, i1  
#     
    GET                  VCACT1A[a,i1]
    tai[a,i]           = VCACT1A[a,i1]*LHBAR_ii[i1,i]
    tai[a,i]          *= -1.0
    PUT VCHACT1A[a,i] += tai[a,i]

endpardo a, i, i1 

pardo a, i, b, j  
#     
    request HBAR_AJIB_aabb[j,b,a,i] 
    GET                  VCACT1A[b,j]
    tai[a,i]           = HBAR_AJIB_aabb[j,b,a,i]*VCACT1A[b,j]
    PUT VCHACT1A[a,i] += tai[a,i]

endpardo a, i, b, j 

pardo a, i, b, j  

    request VCACT2AB[a,i,b,j] 
    tai[a,i]           = VCACT2AB[a,i,b,j]*LHBAR_jb[j,b]
    PUT VCHACT1A[a,i] += tai[a,i]

endpardo a, i, b, j 

pardo i, a, a1  
#     
    GET                  VCACT1A[a1,i]
    tai[a,i]           = VCACT1A[a1,i]*LHBAR_aa[a,a1]
    PUT VCHACT1A[a,i] += tai[a,i]

endpardo i, a, a1  

pardo a, i, a1, i1  
#     
    request HBAR_AJIB_aaaa[i1,a1,a,i] 
    GET                  VCACT1A[a1,i1]
    tai[a,i]           = HBAR_AJIB_aaaa[i1,a1,a,i]*VCACT1A[a1,i1]
    PUT VCHACT1A[a,i] += tai[a,i]

endpardo a, i, a1, i1 

pardo a, i, a1, i1  

    request VCACT2AA[a,i,a1,i1] 
    tai[a,i]           = VCACT2AA[a,i,a1,i1]*LHBAR_ia[i1,a1]
    PUT VCHACT1A[a,i] += tai[a,i]

endpardo a, i, a1, i1 

#     <ai|WT2|0>

pardo a1, a2, i1

    allocate Laiai[a1,*,a2,i1]

    if a1 == a2

	do i
	    request VCACT2AA[a1,i,a2,i1] 
	    Laiai[a1,i,a2,i1] = VCACT2AA[a1,i,a2,i1]
	enddo i

	do a
	    request HBAR_AIBC_aaaa[a,a1,i1,a2] 
	    do i
		tai[a,i]  = HBAR_AIBC_aaaa[a,a1,i1,a2]*Laiai[a1,i,a2,i1]
		tai[a,i] *= 0.5
		PUT VCHACT1A[a,i] += tai[a,i]
	    enddo i
	enddo a

    endif

    if a1 < a2

    do i
	request VCACT2AA[a1,i,a2,i1] 
	Laiai[a1,i,a2,i1] = VCACT2AA[a1,i,a2,i1]
    enddo i

    do a
	request HBAR_AIBC_aaaa[a,a1,i1,a2] 
	do i
	    tai[a,i]  = HBAR_AIBC_aaaa[a,a1,i1,a2]*Laiai[a1,i,a2,i1]
	    PUT VCHACT1A[a,i] += tai[a,i]
	enddo i
    enddo a

    endif

    deallocate Laiai[a1,*,a2,i1]

endpardo a1, a2, i1


pardo a1, i1, i2

    allocate Laiii[a1,i2,*,i1]

    if i1 == i2

	do i
	    request HBAR_JKIA_aaaa[i1,i,i2,a1] 
	    Laiii[a1,i2,i,i1] = HBAR_JKIA_aaaa[i1,i,i2,a1]
	enddo i

	do a
	    request VCACT2AA[a,i1,a1,i2] 
	    do i
		tai[a,i]  = Laiii[a1,i2,i,i1]*VCACT2AA[a,i1,a1,i2]
		tai[a,i] *= -0.5
		PUT VCHACT1A[a,i] += tai[a,i]
	    enddo i
	enddo a

    endif

    if i1 < i2

	do i
	    request HBAR_JKIA_aaaa[i1,i,i2,a1] 
	    Laiii[a1,i2,i,i1] = HBAR_JKIA_aaaa[i1,i,i2,a1]
	enddo i

	do a
	    request VCACT2AA[a,i1,a1,i2] 
	    do i
		tai[a,i]  = Laiii[a1,i2,i,i1]*VCACT2AA[a,i1,a1,i2]
		tai[a,i] *= -1.0
		PUT VCHACT1A[a,i] += tai[a,i]
	    enddo i
	enddo a

    endif

    deallocate Laiii[a1,i2,*,i1]

endpardo a1, i1, i2

pardo a1, b, j

    allocate Laibj[a1,*,b,j]

    do i
	request VCACT2AB[a1,i,b,j] 
	Laibj[a1,i,b,j] = VCACT2AB[a1,i,b,j]
    enddo i

    do a
	request HBAR_AIBC_aabb[a,a1,j,b] 
	do i
	    tai[a,i]  = HBAR_AIBC_aabb[a,a1,j,b]*Laibj[a1,i,b,j]
	    PUT VCHACT1A[a,i] += tai[a,i]
	enddo i
    enddo a

    deallocate Laibj[a1,*,b,j]

endpardo a1, b, j

pardo b, j, i1

    allocate L1iibj[*,i1,b,j]

    do i
	request HBAR_JKIA_aabb[i1,i,j,b] 
	L1iibj[i,i1,b,j] = HBAR_JKIA_aabb[i1,i,j,b]
    enddo i

    do a
	request VCACT2AB[a,i1,b,j] 
	do i
	    tai[a,i]  = L1iibj[i,i1,b,j]*VCACT2AB[a,i1,b,j]
	    tai[a,i] *= -1.0
	    PUT VCHACT1A[a,i] += tai[a,i]
	enddo i
    enddo a

    deallocate L1iibj[*,i1,b,j]

endpardo b, j, i1

ENDPROC R1ANEW_MCPT

#     --------------
proc  l2ab_opt_CCPT
#     --------------
#
#
#
#              _                 _
#           a1,j  a1   _      a1,b         _ _
#          g   _ l   + h     l   _ - (i,a1|j,b) f
#           a ,b  i     a1,a  i ,j               a,a1
#
#
#
pardo  a1, b, j

 allocate  l1aabj [*,a1,b,j]

 do a
    request             hbar_aibc_aabb [a1,a,j,b] 
    taabj  [a,a1,b,j] = hbar_aibc_aabb [a1,a,j,b]
    l1aabj [a,a1,b,j] = taabj [a,a1,b,j]
 enddo a

 do i
    get      vcact1a  [a1,i]
    do a
       taibj [a,i,b,j] = l1aabj [a,a1,b,j] * vcact1a [a1,i]
       prepare  vchact2ab [a,i,b,j] += taibj [a,i,b,j]
    enddo a
 enddo i

 deallocate  l1aabj [*,a1,b,j]

endpardo  a1, b, j

pardo  a1, b, j

 do i
    request  vcact2ab [a1,i,b,j] 
    request  vpiqj    [a1,i,b,j] 
    get      vcact1a  [a1,i]
    do a
       t1aibj [a,i,b,j]  = lhbar_aa [a1,a] * vcact2ab [a1,i,b,j]
       taibj  [a,i,b,j]  = t1aibj [a,i,b,j]

       t2aibj [a,i,b,j]  = vpiqj [a1,i,b,j] * lfae_a [a1,a]
       taibj  [a,i,b,j] += t2aibj [a,i,b,j]

       prepare  vchact2ab [a,i,b,j] += taibj [a,i,b,j]
    enddo a
 enddo i

endpardo  a1, b, j
#
#
#           __    __            __          
#           b1,i  b1   _      a,b1        _ __
#          g_    l_  + h__ _ l   _ - (i,a|j,b1) f_ __
#           b ,a  j     b1,b  i, j               b,b1
#
#
#
pardo  b1, a, i

 allocate  laibb [a,i,*,b1]

 do b
    request            hbar_aibc_aabb [b1,b,i,a] 
    laibb [a,i,b,b1] = hbar_aibc_aabb [b1,b,i,a]
 enddo b

 do j
    request  vcact2ab [a,i,b1,j] 
    request  vpiqj    [a,i,b1,j] 
    get      vcact1a  [b1,j]
    do b
       t1aibj [a,i,b,j]  = laibb [a,i,b,b1] * vcact1a [b1,j]
       taibj  [a,i,b,j]  = t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = vcact2ab [a,i,b1,j] * lhbar_aa [b1,b]
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = vpiqj [a,i,b1,j] * lfae_a [b1,b]
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       prepare  vchact2ab [a,i,b,j] += taibj [a,i,b,j]
    enddo b
 enddo j

 deallocate  laibb [a,i,*,b1]

endpardo  b1, a, i
#     
#
#              _                 _           
#           i ,j  a    _      a ,b         _ _
#         -g   _ l   - h     l   _ - (i1,a|j,b) f
#           i1,b  i1    i,i1  i1,j               i,i1
#
#
#
pardo  i1, b, j
    
 allocate  liibj [i1,*,b,j]  

 do i
    request            hbar_jkia_aabb [i,i1,j,b] 
    liibj [i1,i,b,j] = hbar_jkia_aabb [i,i1,j,b]
 enddo i

 do a
    request  vcact2ab [a,i1,b,j] 
    request  vpiqj    [a,i1,b,j] 
    get      vcact1a  [a,i1]
    do i
       t1aibj [a,i,b,j]  = vcact1a [a,i1] * liibj [i1,i,b,j]
       taibj  [a,i,b,j]  = t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = vpiqj [a,i1,b,j] * lfmi_a [i1,i]
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = lhbar_ii [i,i1] * vcact2ab [a,i1,b,j]
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       taibj [a,i,b,j] *= -1.0
       prepare  vchact2ab [a,i,b,j] += taibj [a,i,b,j]
    enddo i
 enddo a

 deallocate  liibj [i1,*,b,j]

endpardo  i1, b, j
#     
#
#           _     _             _           
#           j ,i  b    _      a,b         __ _
#         -g__   l__ - h_ __ l  __ - (i,a|j1,b) f_ __
#           j1,a  j1    j,j1  i,j1               j,j1
#
#
#
pardo  a, i, j1

 allocate  laijj [a,i,j1,*]

 do j
    request  hbar_jkia_aabb [j,j1,i,a] 
    laijj [a,i,j1,j] = hbar_jkia_aabb [j,j1,i,a]
 enddo j

 do b
    request  vcact2ab [a,i,b,j1] 
    request  vpiqj    [a,i,b,j1] 
    get      vcact1a  [b,j1]
    do j
       t1aibj [a,i,b,j]  = laijj [a,i,j1,j] * vcact1a [b,j1]
       taibj  [a,i,b,j]  = t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = vpiqj [a,i,b,j1] * lfmi_b [j1,j]
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = vcact2ab [a,i,b,j1] * lhbar_ii [j,j1]
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       taibj [a,i,b,j] *= -1.0
       prepare  vchact2ab [a,i,b,j] += taibj [a,i,b,j]
    enddo j
 enddo b

 deallocate  laijj [a,i,j1,*]

endpardo  a, i, j1
#
#                    _       _
#           a1,i  a1,b    a1,j  a,a1
#          g     l   _ + g   _ l
#           i1,a  i1,j    i1,b  i,i1
#
#
pardo  a, i, b, a1

 allocate  laibj [a,i,b,*]

 do i1
    request             hbar_ajib_aaaa [i,a,a1,i1] 
    request             vcact2aa       [a,i,a1,i1] 
    taiai [a,i,a1,i1] = hbar_ajib_aaaa [i,a,a1,i1]
    do j
       request              hbar_ajib_aabb [j,b,a1,i1] 
       request              vcact2ab       [a1,i1,b,j] 
       t1aibj [a1,i1,b,j] = hbar_ajib_aabb [j,b,a1,i1]

       t2aibj [a,i,b,j]  = vcact2aa [a,i,a1,i1] * t1aibj [a1,i1,b,j]
       taibj  [a,i,b,j]  = t2aibj [a,i,b,j]

       t2aibj [a,i,b,j]  = taiai [a,i,a1,i1] * vcact2ab [a1,i1,b,j]
       taibj  [a,i,b,j] += t2aibj [a,i,b,j]

       laibj [a,i,b,j] += taibj [a,i,b,j]
    enddo j
 enddo i1

 do j
    prepare  vchact2ab [a,i,b,j] += laibj [a,i,b,j]
 enddo j

 deallocate  laibj [a,i,b,*]

endpardo  a, i, b, a1
#
#           __ _    __    __    _ __
#           b1,j  a,b1    b1,i  b,b1
#          g__ _ l  __ + g__   l_ __
#           j1,b  i,j1    j1,a  j,j1
#        
#
pardo  a, j, b, b1

 allocate  laibj [a,*,b,j]

 do j1
    request  hbar_ajib_aaaa [j,b,b1,j1] 
    request  vcact2aa       [b,j,b1,j1] 
    tbjbj  [b1,j1,b,j] = vcact2aa [b,j,b1,j1]
    t1bjbj [b1,j1,b,j] = hbar_ajib_aaaa [j,b,b1,j1]
    do i
       request  hbar_ajib_aabb [i,a,b1,j1] 
       request  vcact2ab       [a,i,b1,j1] 

       t1aibj [a,i,b,j]  = hbar_ajib_aabb [i,a,b1,j1] * tbjbj [b1,j1,b,j]
       taibj  [a,i,b,j]  = t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = vcact2ab [a,i,b1,j1] * t1bjbj [b1,j1,b,j]
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       laibj [a,i,b,j] += taibj [a,i,b,j]
    enddo i
 enddo j1

 do i
    prepare  vchact2ab [a,i,b,j] += laibj [a,i,b,j]
 enddo i

 deallocate  laibj [a,*,b,j] 

endpardo  a, j, b, b1
#
#             __    __                   __
#           i,b1  a,b1         _ __   i1,b1
#         -g   _ l   _ - (a,i1|b,b1) n  _
#           i1,b  i1,j                i,j
#        
#
pardo  a, i, b, b1

 allocate  laibj [a,i,b,*]

 do i1
    request             hbar_ajib_iibb [i,i1,b1,b] 
    request             vaaai          [b1,b,a,i1] 
    tpqpq [a,b,i1,b1] = vaaai          [b1,b,a,i1]
    do j
       request  vcact2ab [a,i1,b1,j] 
       request  niibj    [i1,b1,i,j] 
       t1aibj [a,i,b,j]  = hbar_ajib_iibb [i,i1,b1,b] * vcact2ab [a,i1,b1,j]
       taibj  [a,i,b,j]  = t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = tpqpq [a,b,i1,b1] * niibj [i1,b1,i,j]
       t1aibj [a,i,b,j] *= -1.0
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       laibj [a,i,b,j] += taibj [a,i,b,j]
    enddo j
 enddo i1

 do j
    prepare  vchact2ab [a,i,b,j] += laibj [a,i,b,j]
 enddo j

 deallocate  laibj [a,i,b,*]

endpardo  a, i, b, b1
#
#           _        __                __   
#           j,a1  a1,b1         _ __   j1,a1
#         -g__   l  __  - (a1,a|b,j1) n_  
#           j1,a  i,j1                 j,i
#        
#
pardo  a, j, b, a1

 allocate  laibj [a,*,b,j]

 do j1
    request             hbar_ajib_iibb [j,j1,a1,a] 
    request             vaaai          [a1,a,b,j1] 
    tpqpq [a,b,a1,j1] = vaaai          [a1,a,b,j1]
    do i
       request              vcact2ab [a1,i,b,j1] 
       request              njjai    [j,a1,i,j1] 
       t1pqpq [a1,j1,i,j] = njjai    [j,a1,i,j1]

       t1aibj [a,i,b,j]  = hbar_ajib_iibb [j,j1,a1,a] * vcact2ab [a1,i,b,j1]
       taibj  [a,i,b,j]  = t1aibj [a,i,b,j]

       t1aibj [a,i,b,j]  = tpqpq [a,b,a1,j1] * t1pqpq [a1,j1,i,j]
       t1aibj [a,i,b,j] *= -1.0
       taibj  [a,i,b,j] += t1aibj [a,i,b,j]

       laibj [a,i,b,j] += taibj [a,i,b,j]
    enddo i
 enddo j1

 do i
    prepare  vchact2ab [a,i,b,j] += laibj [a,i,b,j]
 enddo i

 deallocate  laibj [a,*,b,j]

endpardo  a, j, b, a1
#
#
#             _      _                      _
#           i,j    a,b             _ __   i,j
#          g   __ l   __  +  (a,i1|b,j1) n   __
#           i1,j1  i1,j1                  i1,j1
#
#
pardo  a, i, b, j1

 allocate  laibj [a,i,b,*]

 do i1
    request  vcact2ab [a,i1,b,j1] 
    request  vpiqj    [a,i1,b,j1] 
    do j
       request  hbar_iijj [i,i1,j,j1] 
       get      niijj     [i,i1,j,j1]

       taibj [a,i,b,j]  = hbar_iijj [i,i1,j,j1] * vcact2ab [a,i1,b,j1]
       laibj [a,i,b,j] += taibj [a,i,b,j]

       taibj [a,i,b,j]  = vpiqj [a,i1,b,j1] * niijj [i,i1,j,j1]
       laibj [a,i,b,j] += taibj [a,i,b,j]
    enddo j
 enddo i1

 do j
    prepare  vchact2ab [a,i,b,j] += laibj [a,i,b,j]
 enddo j

 deallocate  laibj [a,i,b,*]

endpardo  a, i, b, j1
#
#
#          _   b   _   a
#          h  l_ + h__l
#           ia j    jb i
#
#
pardo  a, i, b, j

 get         vcact1a  [b,j]
 get         vcact1a  [a,i]
 tai [a,i] = lhbar_ia [i,a]
 tbj [b,j] = lhbar_ia [j,b]

 taibj  [a,i,b,j]  = tai [a,i] ^ vcact1a [b,j]
 t1aibj [a,i,b,j]  = vcact1a [a,i] ^ tbj [b,j]
 taibj  [a,i,b,j] += t1aibj [a,i,b,j]

 prepare  vchact2ab [a,i,b,j] += taibj [a,i,b,j]

endpardo  a, i, b, j
#
#
#          ...ready!
#
#
#     -----------------
endproc  l2ab_opt_CCPT
#-------------------------------------------------------------------------



#-------------------------------------------------------------------------
#
#     --------------
proc  l2aa_opt_CCPT
#     --------------
#
#
#           1   i ,i1  i2,i3     1                i ,i1
#          --- g      l       + --- (a,i2|a1,i3) n
#           2   i2,i3  a ,a1     2                i2,i3
#
#
pardo  a, a1, i2, i3

 where i2 < i3

    request  vcact2aa [a,i2,a1,i3] 
    request  vspipi   [a,i2,a1,i3] 

    do i
    do i1
       request  hbar_iiii [i,i2,i1,i3] 
       get      niiii     [i,i2,i1,i3]

       taiai  [a,i,a1,i1]  = hbar_iiii [i,i2,i1,i3] * vcact2aa [a,i2,a1,i3]
       taiai  [a,i,a1,i1] *= 0.25
       t1aiai [a,i,a1,i1]  = taiai [a,i,a1,i1]

       taiai  [a,i,a1,i1]  = vspipi [a,i2,a1,i3] * niiii [i,i2,i1,i3]
       taiai  [a,i,a1,i1] *= 0.25
       t1aiai [a,i,a1,i1] += taiai [a,i,a1,i1]

       put  d2aa [a,i,a1,i1] += t1aiai [a,i,a1,i1]
    enddo i1
    enddo i

endpardo  a, a1, i2, i3

pardo  a, a1, i2, i3

 where i2 == i3

    request  vcact2aa [a,i2,a1,i3] 
    request  vspipi   [a,i2,a1,i3] 
 
    do i
    do i1
       request  hbar_iiii [i,i2,i1,i3] 
       get      niiii     [i,i2,i1,i3]
    
       taiai  [a,i,a1,i1]  = hbar_iiii [i,i2,i1,i3] * vcact2aa [a,i2,a1,i3]
       taiai  [a,i,a1,i1] *= 0.125
       t1aiai [a,i,a1,i1]  = taiai [a,i,a1,i1]

       taiai  [a,i,a1,i1]  = vspipi [a,i2,a1,i3] * niiii [i,i2,i1,i3]
       taiai  [a,i,a1,i1] *= 0.125
       t1aiai [a,i,a1,i1] += taiai [a,i,a1,i1]

       put  d2aa [a,i,a1,i1] += t1aiai [a,i,a1,i1] 
    enddo i1  
    enddo i

endpardo  a, a1, i2, i3
#
#
#                        -                          -
#                       |  a2,i1  i,i2    b,i1  i,j  |
#          p(i,i1|a,a1) | g      l     + g     l     |
#                       |  i2,a1  a,a2    j,a1  a,b  |
#                        -                          -
#
#
pardo  a1, i1, a2, i2

 request                hbar_ajib_aaaa [i1,a1,a2,i2] 
 t1aiai [a2,i2,a1,i1] = hbar_ajib_aaaa [i1,a1,a2,i2]

 do i
 do a
    request             vcact2aa [a,i,a2,i2] 
    taiai [a,i,a1,i1] = vcact2aa [a,i,a2,i2] * t1aiai [a2,i2,a1,i1]
    put  d2aa [a,i,a1,i1] += taiai [a,i,a1,i1]
 enddo a
 enddo i

endpardo  a1, i1, a2, i2

pardo  a1, i1, b, j

 request             hbar_ajib_aabb [i1,a1,b,j] 
 tbjai [b,j,a1,i1] = hbar_ajib_aabb [i1,a1,b,j]

 do i
 do a
    request             vcact2ab [a,i,b,j] 
    taiai [a,i,a1,i1] = vcact2ab [a,i,b,j] * tbjai [b,j,a1,i1]
    put  d2aa [a,i,a1,i1] += taiai [a,i,a1,i1]
 enddo a
 enddo i

endpardo  a1, i1, b, j
#
#
#                   -                                             -
#                  |  a2,i  i1          i,i2                       |
#          p(i,i1) | g     l  - h      l     - (a,i|a1,i2) f       |
#                  |  a1,a  a2   i1,i2  a,a1                i2,i1  |
#                   -                                             -
#
#
pardo  a, a1, a2, i
where a < a1

 request             hbar_aibc_aaaa [a2,a1,i,a] 
 tpppp [a,i,a1,a2] = hbar_aibc_aaaa [a2,a1,i,a]

 do i1
    get  vcact1a [a2,i1]
    taiai  [a,i,a1,i1]  = tpppp [a,i,a1,a2] * vcact1a [a2,i1]
    put  d2aa [a,i,a1,i1] += taiai [a,i,a1,i1]
 enddo i1
 
endpardo  a, a1, a2, i

pardo  a, a1, a2, i
where a == a1

 request             hbar_aibc_aaaa [a2,a1,i,a] 
 tpppp [a,i,a1,a2] = hbar_aibc_aaaa [a2,a1,i,a]

 do i1
    get  vcact1a [a2,i1]

    taiai  [a,i,a1,i1]  = tpppp [a,i,a1,a2] * vcact1a [a2,i1]
    t1aiai [a,i1,a1,i]  = taiai [a,i,a1,i1]
    t1aiai [a,i1,a1,i] *= -1.0

    prepare  vchact2aa [a,i,a1,i1] += taiai  [a,i,a1,i1]
    prepare  vchact2aa [a,i1,a1,i] += t1aiai [a,i1,a1,i]
 enddo i1

endpardo  a, a1, a2, i

pardo  a, i, a1, i2

 request  vcact2aa [a,i,a1,i2] 
 request  vspipi   [a,i,a1,i2] 

 do i1
    t1aiai [a,i,a1,i1]  = vcact2aa [a,i,a1,i2] * lhbar_ii [i1,i2]
    taiai  [a,i,a1,i1]  = t1aiai [a,i,a1,i1]

    t1aiai [a,i,a1,i1]  = vspipi [a,i,a1,i2] * lfmi_a [i2,i1]
    taiai  [a,i,a1,i1] += t1aiai [a,i,a1,i1]

    taiai  [a,i,a1,i1] *= -0.50
    put  d2aa [a,i,a1,i1] += taiai [a,i,a1,i1]
 enddo i1

endpardo  a, i, a1, i2
#
#
#                   -                                             -
#                  |  i1,i  i2          i,i1                       |
#          p(a,a1) |-g     l  + h      l     - (a,i|a2,i1) f       |
#                  |  i2,a  a1   a2,a1  a,a2                a2,a1  |
#                   -                                             -
#
#
pardo  a, i, i1, i2

 request             hbar_jkia_aaaa [i1,i2,i,a] 
 tpppp [a,i,i2,i1] = hbar_jkia_aaaa [i1,i2,i,a]

 do a1
    get  vcact1a [a1,i2]
    taiai  [a,i,a1,i1]  = tpppp [a,i,i2,i1] * vcact1a [a1,i2]
    t1aiai [a1,i,a,i1]  = taiai [a,i,a1,i1]
    taiai  [a,i,a1,i1] *= -1.0

    prepare  vchact2aa [a,i,a1,i1] += taiai  [a,i,a1,i1]
    prepare  vchact2aa [a1,i,a,i1] += t1aiai [a1,i,a,i1]
 enddo a1

endpardo  a, i, i1, i2

pardo  a, i, a2, i1

 request  vcact2aa [a,i,a2,i1] 
 request  vspipi   [a,i,a2,i1] 

 do a1
    t1aiai [a,i,a1,i1]  = vcact2aa [a,i,a2,i1] * lhbar_aa [a2,a1]
    taiai  [a,i,a1,i1]  = t1aiai [a,i,a1,i1]

    t1aiai [a,i,a1,i1]  = vspipi [a,i,a2,i1] * lfae_a [a2,a1]
    taiai  [a,i,a1,i1] += t1aiai [a,i,a1,i1]

    taiai  [a,i,a1,i1] *=  0.50
    put  d2aa [a,i,a1,i1] += taiai [a,i,a1,i1]
 enddo a1

endpardo  a, i, a2, i1
#
#
#                          a2,i2
#          - (a,i2|a1,a2) n
#                          i1,i 
#
#
pardo  a, i, a1, a2

 allocate  llaiai [a,i,a1,*]

 do i2
    request  vsaaai [a1,a2,a,i2] 
    tpppp [a,a2,a1,i2] = vsaaai [a1,a2,a,i2]
    do i1
       request  niiai [i1,a2,i,i2] 
       t1pppp [a2,i,i2,i1] = niiai [i1,a2,i,i2]
       taiai [a,i,a1,i1]  = tpppp [a,a2,a1,i2] * t1pppp [a2,i,i2,i1]
       llaiai [a,i,a1,i1] -= taiai [a,i,a1,i1]
    enddo i1
 enddo i2

 do i1
    prepare  vchact2aa [a,i,a1,i1] += llaiai [a,i,a1,i1]
 enddo i1

 deallocate  llaiai [a,i,a1,*]

endpardo  a, i, a1, a2
#
#
#                       _   i
#          p(i,i1|a,a1) h  l
#                        ia a1
#
#
pardo  a, i, a1, i1

 get         vcact1a  [a1,i1]
 tai [a,i] = lhbar_ia [i,a]

 taiai [a,i,a1,i1] = tai [a,i] ^ vcact1a [a1,i1]

 put  d2aa [a,i,a1,i1] += taiai [a,i,a1,i1]

endpardo  a, i, a1, i1
#
#
#          ...ready!
#
#
#     -----------------
endproc  l2aa_opt_CCPT
#
#-------------------------------------------------------------------------
#
#     ------------
proc  l1anew_CCPT
#     ------------
#
#
#           j  bi
#          l  g
#           b  ja
#
#
#               alpha - alpha part check
#
#
pardo  i, i1, a, a1

 request             hbar_ajib_aaaa [i,a,a1,i1] 
 get                 vcact1a        [a1,i1]
 taiai [a,i,a1,i1] = hbar_ajib_aaaa [i,a,a1,i1]

 tai [a,i]  = taiai [a,i,a1,i1] * vcact1a [a1,i1]
 put  vchact1a [a,i] += tai [a,i]

endpardo  i, i1, a, a1
#
#
#               alpha - beta part check
#
#
pardo  a, i, b, j

 request           hbar_ajib_aabb [i,a,b,j] 
 get               vcact1a        [b,j]
 taibj [a,i,b,j] = hbar_ajib_aabb [i,a,b,j]

 tai [a,i]  = taibj [a,i,b,j] * vcact1a [b,j]
 put  vchact1a [a,i] += tai [a,i]

endpardo  a, i, b, j
#
#
#          _    i   _    a
#          h   l  - h   l    check
#           ba  b    ij  j
#
#
pardo  a, a1, i

 get         vcact1a [a1,i]
 tai [a,i] = lhbar_aa [a1,a] * vcact1a [a1,i]
 put  vchact1a [a,i] += tai [a,i]

endpardo  a, a1, i

pardo  i, i1, a

 get          vcact1a [a,i1]
 tai [a,i]  = vcact1a [a,i1] * lhbar_ii [i,i1]
 tai [a,i] *= -1.0
 put  vchact1a [a,i] += tai [a,i]

endpardo  i, i1, a
#     
#     
#           1   cb  ij
#          --- g   l    check
#           2   aj  cb
#
#
#               alpha - alpha part
#     
#
pardo  i1, a1, a2

 allocate  laaai [*,a2,a1,i1]
    
 do a
    request              hbar_abci_aaaa [a2,a,a1,i1] 
    laaai [a,a2,a1,i1] = hbar_abci_aaaa [a2,a,a1,i1]
 enddo a
    
 do i
    request              vcact2aa [a2,i,a1,i1] 
    taaii [a2,a1,i1,i] = vcact2aa [a2,i,a1,i1]
    do a
       tai [a,i]  = laaai [a,a2,a1,i1] * taaii [a2,a1,i1,i]
       tai [a,i] *= 0.5
       put  vchact1a [a,i] += tai [a,i]
    enddo a
 enddo i

 deallocate  laaai [*,a2,a1,i1]

endpardo  i1, a1, a2
#
#
#               alpha - beta part check
#
#
pardo  a1, b, j

 allocate  l1aabj [*,a1,b,j]

 do a
    request             hbar_abci_aabb [a1,a,b,j] 
    l1aabj [a,a1,b,j] = hbar_abci_aabb [a1,a,b,j]
 enddo a

 do i
    request            vcact2ab [a1,i,b,j] 
    tpqqp [a1,b,j,i] = vcact2ab [a1,i,b,j]
    do a
       tai [a,i]  = l1aabj [a,a1,b,j] * tpqqp [a1,b,j,i]
       put  vchact1a [a,i] += tai [a,i]
    enddo a
 enddo i

 deallocate  l1aabj [*,a1,b,j]

endpardo  a1, b, j
#           
#        
#          -1   ib  jk
#          --- g   l
#           2   jk  ab
#        
#
#               alpha - alpha part  check
#
#
pardo  i1, i2, a1

 allocate  l1aiai [*,i2,a1,i1]

 do a
    request              vcact2aa [a,i2,a1,i1] 
    l1aiai [a,i2,a1,i1] = vcact2aa [a,i2,a1,i1]
 enddo a

 do i
    request              hbar_iajk_aaaa [i,i2,a1,i1] 
    tpppp [i2,a1,i1,i] = hbar_iajk_aaaa [i,i2,a1,i1]
    do a
       tai [a,i]  = l1aiai [a,i2,a1,i1] * tpppp [i2,a1,i1,i]
       tai [a,i] *= -0.5
       put  vchact1a [a,i] += tai [a,i]
    enddo a
 enddo i

 deallocate  l1aiai [*,i2,a1,i1]

endpardo  i1, i2, a1
#
#
#               alpha - beta part  check
#
#
pardo  i1, j, b

 allocate  l2aibj [*,i1,b,j]

 do a
    request  vcact2ab [a,i1,b,j] 
    l2aibj [a,i1,b,j] = vcact2ab [a,i1,b,j]
 enddo a

 do i
    request            hbar_iajk_aabb [i,i1,b,j] 
    tpqqp [i1,b,j,i] = hbar_iajk_aabb [i,i1,b,j]
    do a
       tai [a,i]  = l2aibj [a,i1,b,j] * tpqqp [i1,b,j,i]
       tai [a,i] *= -1.0
       put  vchact1a [a,i] += tai [a,i]
    enddo a
 enddo i

 deallocate  l2aibj [*,i1,b,j]

endpardo  i1, j, b
#           
#        
#          -1   bc  li  jk     li
#          --- t   g   l   =  g   f
#           2   jl  ka  bc     ka  ji
#        
#
#               alpha - alpha part
#
#
pardo  i, i1, i2, a

 request  hbar_jkia_aaaa [i1,i2,i,a] 
 tpppp [a,i,i1,i2] = hbar_jkia_aaaa [i1,i2,i,a]

 tai [a,i]  = tpppp [a,i,i1,i2] * lfmi_a [i1,i2]
 tai [a,i] *= -1.0
 put  vchact1a [a,i] += tai [a,i]

endpardo  i, i1, i2, a
#
#
#               alpha - beta part
#
#
pardo  a, i, j, j1

 request  hbar_jkia_aabb [j,j1,i,a] 
 tppqq [a,i,j,j1] = hbar_jkia_aabb [j,j1,i,a]

 tai [a,i]  = tppqq [a,i,j,j1] * lfmi_b [j,j1]
 tai [a,i] *= -1.0
 put  vchact1a [a,i] += tai [a,i]

endpardo  a, i, j, j1
#           
#        
#           1   bd  ci  jk     ci
#          --- t   g   l   =  g   f
#           2   jk  da  bc     da  dc
#        
#
#               alpha - alpha part
#
#
pardo  i, a, a1, a2

 request             hbar_aibc_aaaa [a1,a2,i,a] 
 tpppp [a,i,a2,a1] = hbar_aibc_aaaa [a1,a2,i,a]

 tai [a,i]  = tpppp [a,i,a2,a1] * lfae_a [a2,a1]
 tai [a,i] *= -1.0
 put  vchact1a [a,i] += tai [a,i]

endpardo  i, a, a1, a2
#
#
#               alpha - beta part
#
#
pardo  i, a, b, b1

 request            hbar_aibc_aabb [b1,b,i,a] 
 tppqq [a,i,b1,b] = hbar_aibc_aabb [b1,b,i,a]

 tai [a,i]  = tppqq [a,i,b1,b] * lfae_a [b1,b]
 tai [a,i] *= -1.0
 put  vchact1a [a,i] += tai [a,i]

endpardo  i, a, b, b1
#
#
#          ...ready!
#
#
#     ---------------
endproc  l1anew_CCPT
#-------------------------------------------------------------------------



#-------------------------------------------------------------------------
#
#     --------------------
proc  left_factorize_CCPT
#     --------------------
#
#
pardo i1, b, i, j 
   prepare njjai[i1,b,i,j] = 0.0
   prepare niibj[i1,b,i,j] = 0.0
endpardo i1, b, i, j 

pardo i, i1, i2, a 
   prepare niiai[i1,a,i,i2] = 0.0
endpardo i, i1, i2, a 

pardo i, i1, j, j1 
   put niijj[i,i1,j,j1] = 0.0
endpardo i, i1, j, j1 

pardo i, i1, i2, i3 
   put niiii[i,i1,i2,i3] = 0.0
endpardo i, i1, i2, i3 

sip_barrier
#
#    form half back transformed cluster arrays  
#    -----------------------------------------
#
pardo a1, i1, i   
#
   allocate llaiai[*,i,a1,i1] 
#
   do a  
      request              vcact2aa[a,i,a1,i1]  
      llaiai[a,i,a1,i1]  = vcact2aa[a, i,a1,i1] 
      llaiai[a,i,a1,i1] *= 2.0  
   enddo a  
#
   do lambda   
      zaa[lambda,i,a1,i1] = 0.0 
      do a  
	 txiai[lambda,i,a1,i1] = llaiai[a,i,a1,i1]*ca[lambda,a]
	 zaa[lambda,i,a1,i1]  += txiai[lambda,i,a1,i1] 
      enddo a 
      prepare t1ao_aa[lambda,i,a1,i1] = zaa[lambda,i,a1,i1] 
   enddo lambda  
#
   deallocate llaiai[*,i,a1,i1] 
#
endpardo a1, i1, i   
#
pardo b, j, i   
#
   allocate llaibj[*,i,b,j] 
#
   do a  
      request           vcact2ab[a,i,b,j]  
      llaibj[a,i,b,j] = vcact2ab[a,i,b,j] 
   enddo a  
#
   do lambda   
      zab[lambda,i,b,j] = 0.0 
      do a  
	 txibj[lambda,i,b,j] = llaibj[a,i,b,j]*ca[lambda,a]
	 zab[lambda,i,b,j]  += txibj[lambda,i,b,j] 
      enddo a 
      prepare t1ao_ab[lambda,i,b,j] = zab[lambda,i,b,j] 
   enddo lambda  
#
   deallocate llaibj[*,i,b,j] 
#
endpardo b, j, i   
#
#
#                 cb  ij
#     form f   = t   l
#           ab    ij  ca
#
#
#       alpha
#       -----
#
#          alpha - alpha part
#
#
pardo  i, i1, a1, a2

 request              vcact2aa [a2,i,a1,i1] 
 tpppp [i1,a2,i,a1] = vcact2aa [a2,i,a1,i1]

 do a
    request          t2aa [a,i1,a2,i] 
    taa    [a,a1]  = t2aa [a,i1,a2,i] * tpppp [i1,a2,i,a1]
    taa    [a,a1] *= 0.5
    lfae_a [a,a1] -= taa [a,a1]
 enddo a

endpardo  i, i1, a1, a2
#
#
#          alpha - beta part
#
#
pardo  i, j, a1, b

 request            vcact2ab [a1,i,b,j] 
 tpqqp [i,b,j,a1] = vcact2ab [a1,i,b,j]

 do a
    request          t2ab [a,i,b,j] 
    taa    [a,a1]  = t2ab [a,i,b,j] * tpqqp [i,b,j,a1]
    lfae_a [a,a1] -= taa [a,a1]
 enddo a

endpardo  i, j, a1, b
#
#
#                 ab  ij
#     form f   = t   l
#           ij    ij  ab
#
#
#       alpha
#       -----
#
#          alpha - alpha part
#
#
pardo  i1, i2, a, a1

 request             vcact2aa [a,i2,a1,i1] 
 do i
    request             t2aa [a,i2,a1,i] 
    tpppp [i,a,i2,a1] = t2aa [a,i2,a1,i]

    tii    [i,i1]  = tpppp [i,a,i2,a1] * vcact2aa [a,i2,a1,i1]
    tii    [i,i1] *= 0.5
    lfmi_a [i,i1] += tii [i,i1]
 enddo i

endpardo  i1, i2, a, a1
#
#
#          alpha - beta part
#
#
pardo  i1, j, a, b

 request            vcact2ab [a,i1,b,j] 
 tpqqp [a,b,j,i1] = vcact2ab [a,i1,b,j]

 do i
    request            t2ab [a,i,b,j] 
    tiabj  [i,a,b,j] = t2ab [a,i,b,j]
    tii    [i,i1]    = tiabj [i,a,b,j] * tpqqp [a,b,j,i1]
    lfmi_a [i,i1]   += tii [i,i1]
 enddo i

endpardo  i1, j, a, b
#
#
#       beta 
#       ----
#
#          beta - beta part
#
#
pardo  j1, j2, b, b1

 request  vcact2aa [b,j2,b1,j1] 
 do j
    request              t2bb [b,j2,b1,j] 
    tqqqq  [j,b,j2,b1] = t2bb [b,j2,b1,j]
    tjj    [j,j1]      = tqqqq [j,b,j2,b1] * vcact2aa [b,j2,b1,j1]
    tjj    [j,j1]     *= 0.5
    lfmi_b [j,j1]     += tjj [j,j1]
 enddo j

endpardo  j1, j2, b, b1
#     
#
#          beta - alpha part
#
#
pardo  i, j1, a, b

 request  vcact2ab [a,i,b,j1] 
 do j
    request            t2ab [a,i,b,j] 
    tqppq  [j,a,i,b] = t2ab [a,i,b,j]
    tjj    [j,j1]    = tqppq [j,a,i,b] * vcact2ab [a,i,b,j1]
    lfmi_b [j,j1]   += tjj [j,j1]
 enddo j
 
endpardo  i, j1, a, b
#
#
#                     -               -
#           ij    ij |  1   cd    c d  |
#     form n   = l   | --- t   + t t   |
#           kl    cd |  2   kl    k l  |
#                     -               -
#
#       alpha - alpha
#       -------------
#
pardo  i2, i3, a, a1

 allocate l2aiai [a,i2,a1,i3]
 request  t2aa  [a,i2,a1,i3] 

 l2aiai  [a,i2,a1,i3]  = t2aa [a,i2,a1,i3]

 do i
 do i1
    request              vcact2aa [a,i,a1,i1] 
    tiiii [i,i2,i1,i3] = vcact2aa [a,i,a1,i1] * l2aiai [a,i2,a1,i3]
    put  niiii [i,i2,i1,i3] += tiiii [i,i2,i1,i3]
 enddo i1
 enddo i

 deallocate l2aiai [a,i2,a1,i3]

endpardo  i2, i3, a, a1
#
#       alpha - beta
#       ------------
#        
pardo  i2, j1, a, b

 request  t2ab [a,i2,b,j1] 
 
 do i
 do j
    request             vcact2ab [a,i,b,j] 
    tiijj [i,i2,j,j1] = vcact2ab [a,i,b,j] * t2ab [a,i2,b,j1]
    put  niijj [i,i2,j,j1] += tiijj [i,i2,j,j1]
 enddo j
 enddo i

endpardo  i2, j1, a, b
#     
#
#
#           ck    d  ij
#     form n   = t  l
#           ij    k  cd
#
#
#       alpha - alpha
#       -------------  
#
pardo  i, i1, i2, a

 do a1
    request  vcact2aa [a,i,a1,i1] 
    get      t1a      [a1,i2]

    tpppp [i,a,i1,i2] = t1a [a1,i2] * vcact2aa [a,i,a1,i1]
    prepare  niiai [i,a,i1,i2] += tpppp [i,a,i1,i2]
 enddo a1

endpardo  i, i1, i2, a
#
#
#       alpha - beta
#       ------------  
#
pardo  i, j, j1, a

 do b
    get               t1b      [b,j1]
    request           vcact2ab [a,i,b,j] 

    tqppq [j,a,i,j1] = vcact2ab [a,i,b,j] * t1b [b,j1]
    prepare  njjai [j,a,i,j1] += tqppq [j,a,i,j1]
 enddo b

endpardo  i, j, j1, a

pardo  i, j, b, a

 request  vcact2ab [a,i,b,j] 

 do i2
    get                t1a [a,i2]
    tpqpq [i2,b,i,j] = t1a [a,i2] * vcact2ab [a,i,b,j]
    prepare  niibj [i2,b,i,j] += tpqpq [i2,b,i,j]
 enddo i2

endpardo  i, j, b, a
#
#
#          done computing the intermediates!
#
#
do i 
do i1 
 tii[i,i1]        = lfmi_a[i,i1] 
 put fmi_a[i,i1] += tii[i,i1] 
enddo i1 
enddo i 
do j 
do j1 
 tjj[j,j1]        = lfmi_b[j,j1] 
 put fmi_b[j,j1] += tjj[j,j1] 
enddo j1 
enddo j 
do a 
do a1 
 taa[a,a1]        = lfae_a[a,a1] 
 put fae_a[a,a1] += taa[a,a1] 
enddo a1 
enddo a 
sip_barrier 
sip_barrier 
do a 
do a1 
 get            fae_a[a,a1] 
 taa[a,a1]    = fae_a[a,a1]  
 lfae_a[a,a1] = taa[a,a1] # fae_a(a,a1) 
enddo a1 
enddo a 
do i 
do i1 
 get            fmi_a[i,i1] 
 tii[i,i1]    = fmi_a[i,i1]    
 lfmi_a[i,i1] = tii[i,i1] # fmi_a(i,i1) 
enddo i1 
enddo i 
do j 
do j1 
 get            fmi_b[j,j1] 
 tjj[j,j1]    = fmi_b[j,j1] 
 lfmi_b[j,j1] = tjj[j,j1] # fmi_b(j,j1) 
enddo j1 
enddo j 
sip_barrier 
#
#
#     -----------------------
endproc  left_factorize_CCPT
#

PROC SYMMETRHC_A

#print "Anti-symmetrizing Q2*H*B _aa"

server_barrier
pardo a,i,a1,i1
    put DRNaiai[a,i,a1,i1] = 0.0
endpardo a,i,a1,i1
pardo a,i,a1,i1
    put D2RNaiai[a,i,a1,i1] = 0.0
endpardo a,i,a1,i1
server_barrier
     PARDO  a, a1, i, i1
     where a == a1
          REQUEST            VCHACT2AA[a,i,a1,i1]
          Raiai[a,i,a1,i1] = VCHACT2AA[a,i,a1,i1]
          execute anti_symm_v Raiai[a,i,a1,i1]
#
          put DRNaiai[a,i,a1,i1] += Raiai[a,i,a1,i1]
     ENDPARDO a, a1, i, i1
#
     PARDO  a, a1, i, i1
     where a < a1
          REQUEST            VCHACT2AA[a,i,a1,i1]
#
	  Raiai[a,i,a1,i1]   = VCHACT2AA[a,i,a1,i1]
	  R3aiai[a1,i,a,i1]  = VCHACT2AA[a,i,a1,i1]
	  R3aiai[a1,i,a,i1] *= -1.0
#
          put DRNaiai[a,i,a1,i1] += Raiai[a,i,a1,i1]
          put DRNaiai[a1,i,a,i1] += R3aiai[a1,i,a,i1]
     ENDPARDO a, a1, i, i1
server_barrier
     PARDO a, a1, i, i1
     where i == i1
           get DRNaiai[a,i,a1,i1]
           Raiai[a,i,a1,i1] = DRNaiai[a,i,a1,i1]
           execute anti_symm_o Raiai[a,i,a1,i1]
#
           put D2RNaiai[a,i,a1,i1]+=Raiai[a,i,a1,i1]
     ENDPARDO  a, a1, i, i1
#
     PARDO a, a1, i, i1
     where i < i1
           get DRNaiai[a,i,a1,i1]
           Raiai[a,i,a1,i1]  = DRNaiai[a,i,a1,i1]
           R2aiai[a,i1,a1,i] = DRNaiai[a,i,a1,i1]
           R2aiai[a,i1,a1,i] *=-1.0
#
           put D2RNaiai[a,i,a1,i1]+=Raiai[a,i,a1,i1]
           put D2RNaiai[a,i1,a1,i]+=R2aiai[a,i1,a1,i]
#
     ENDPARDO  a, a1, i, i1
server_barrier
pardo a,i,a1,i1
    get D2RNaiai[a,i,a1,i1]
    Taiai[a,i,a1,i1] = D2RNaiai[a,i,a1,i1]
    prepare VCHACT2AA[a,i,a1,i1] = Taiai[a,i,a1,i1]
endpardo a,i,a1,i1
server_barrier
pardo a,i,a1,i1
put DRNaiai[a,i,a1,i1] = 0.0
endpardo a,i,a1,i1
pardo a,i,a1,i1
put D2RNaiai[a,i,a1,i1] = 0.0
endpardo a,i,a1,i1
server_barrier
ENDPROC SYMMETRHC_A

PROC HB_zero

pardo a,i,ksub
    prepare HB1_a[ksub,a,i] = 0.0
endpardo a,i,ksub

pardo a,i,a1,i1,ksub
    prepare HB2_aa[ksub,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,ksub

pardo a,i,b,j,ksub
    prepare HB2_ab[ksub,a,i,b,j] = 0.0
endpardo a,i,b,j,ksub

server_barrier

ENDPROC HB_zero

PROC LH_zero

pardo a,i,ksub
    prepare LH1_a[ksub,a,i] = 0.0
endpardo a,i,ksub

pardo a,i,a1,i1,ksub
    prepare LH2_aa[ksub,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,ksub

pardo a,i,b,j,ksub
    prepare LH2_ab[ksub,a,i,b,j] = 0.0
endpardo a,i,b,j,ksub

server_barrier

ENDPROC LH_zero

PROC VCHACT_ZERO
pardo a,i
    put VCHACT1A[a,i] = 0.0
endpardo a,i

pardo a,i,a1,i1
    prepare VCHACT2AA[a,i,a1,i1] = 0.0
endpardo a,i,a1,i1

pardo a,i,b,j
    prepare VCHACT2AB[a,i,b,j] = 0.0
endpardo a,i,b,j

pardo a,i,a1,i1
    put d2aa[a,i,a1,i1] = 0.0
endpardo a,i,a1,i1

server_barrier
ENDPROC VCHACT_ZERO

PROC place_VCACT
#
# in loops taken from ACESIII eom we go over 1 subspace vector at a time in H.B so strip ksub out.
#
server_barrier
Tk[ksub] = 1.0
pardo a,i,a1,i1
    request RB2_aa[ksub,a,i,a1,i1]
    Taiai[a,i,a1,i1] = Tk[ksub]*RB2_aa[ksub,a,i,a1,i1]
    prepare VCACT2AA[a,i,a1,i1] = Taiai[a,i,a1,i1]
endpardo a,i,a1,i1

pardo a,i,b,j
    request RB2_ab[ksub,a,i,b,j]
    Taibj[a,i,b,j] = Tk[ksub]*RB2_ab[ksub,a,i,b,j]
    prepare VCACT2AB[a,i,b,j] = Taibj[a,i,b,j]
endpardo a,i,b,j

pardo a,i
    request RB1_a[ksub,a,i]
    Tai[a,i] = Tk[ksub]*RB1_a[ksub,a,i]
    put VCACT1A[a,i] = Tai[a,i]
endpardo a,i

server_barrier
ENDPROC place_VCACT

PROC place_VCACT_L
#
# in loops taken from ACESIII eom we go over 1 subspace vector at a time in H.B so strip ksub out.
#
server_barrier
Tk[ksub] = 1.0
pardo a,i,a1,i1
    request LB2_aa[ksub,a,i,a1,i1]
    Taiai[a,i,a1,i1] = Tk[ksub]*LB2_aa[ksub,a,i,a1,i1]
    prepare VCACT2AA[a,i,a1,i1] = Taiai[a,i,a1,i1]
endpardo a,i,a1,i1

pardo a,i,b,j
    request LB2_ab[ksub,a,i,b,j]
    Taibj[a,i,b,j] = Tk[ksub]*LB2_ab[ksub,a,i,b,j]
    prepare VCACT2AB[a,i,b,j] = Taibj[a,i,b,j]
endpardo a,i,b,j

pardo a,i
    request LB1_a[ksub,a,i]
    Tai[a,i] = Tk[ksub]*LB1_a[ksub,a,i]
    put VCACT1A[a,i] = Tai[a,i]
endpardo a,i

server_barrier
ENDPROC place_VCACT_L

PROC place_HB
server_barrier
Tk[ksub] = 1.0
pardo a,i
    get VCHACT1A[a,i]
    Tkai[ksub,a,i] = Tk[ksub]*VCHACT1A[a,i]
    prepare HB1_a[ksub,a,i] = Tkai[ksub,a,i]
endpardo a,i

pardo a,i,a1,i1
    request VCHACT2AA[a,i,a1,i1]
    Tkaiai[ksub,a,i,a1,i1] = Tk[ksub]*VCHACT2AA[a,i,a1,i1]
    prepare HB2_aa[ksub,a,i,a1,i1] = Tkaiai[ksub,a,i,a1,i1]
endpardo a,i,a1,i1

pardo a,i,b,j
    request VCHACT2AB[a,i,b,j]
    Tkaibj[ksub,a,i,b,j] = Tk[ksub]*VCHACT2AB[a,i,b,j]
    prepare HB2_ab[ksub,a,i,b,j] = Tkaibj[ksub,a,i,b,j]
endpardo a,i,b,j
server_barrier
ENDPROC place_HB

PROC place_LH
server_barrier
Tk[ksub] = 1.0
pardo a,i
    get VCHACT1A[a,i]
    Tkai[ksub,a,i] = Tk[ksub]*VCHACT1A[a,i]
    prepare LH1_a[ksub,a,i] = Tkai[ksub,a,i]
endpardo a,i

pardo a,i,a1,i1
    request VCHACT2AA[a,i,a1,i1]
    Tkaiai[ksub,a,i,a1,i1] = Tk[ksub]*VCHACT2AA[a,i,a1,i1]
    prepare LH2_aa[ksub,a,i,a1,i1] = Tkaiai[ksub,a,i,a1,i1]
endpardo a,i,a1,i1

pardo a,i,b,j
    request VCHACT2AB[a,i,b,j]
    Tkaibj[ksub,a,i,b,j] = Tk[ksub]*VCHACT2AB[a,i,b,j]
    prepare LH2_ab[ksub,a,i,b,j] = Tkaibj[ksub,a,i,b,j]
endpardo a,i,b,j
server_barrier
ENDPROC place_LH
#
#------------------------------------------------------------------------

PROC diag_G
#
server_barrier

execute get_my_rank rank
myrank = (int)rank
if myrank == root
    do ksub
    do ksub1
	request Gmat[ksub1,ksub]
	Tkk[ksub1,ksub] = Gmat[ksub1,ksub]
	GSmat[ksub1,ksub] = Tkk[ksub1,ksub]
    enddo ksub1
    enddo ksub

    do ksub
        SEk[ksub] = 0.0
    enddo ksub

    execute gen_eigen_calc GSmat SAlphaL SAlphaR SEk

    do kstate
	SEk0[kstate] = SEk[kstate]
    enddo kstate
    print "-- EOM-CCSD excited state energies --"

    do kstate
	allocate contiguous EOM_EE_Energy[kstate:kstate]
	EOM_EE_Energy[kstate:kstate] = SEk0[kstate]
	print EOM_EE_Energy[kstate:kstate]
	deallocate contiguous EOM_EE_Energy[kstate:kstate]
    enddo kstate

endif
broadcast_from root SAlphaL
broadcast_from root SAlphaR
broadcast_from root SEk
broadcast_from root SEk0

server_barrier
#
ENDPROC diag_G

#------------------------------------------------------------------------

PROC move_by_one_RK1
#
pardo a,i,kstate
    request R1k1_a[kstate,a,i]
    prepare R0k1_a[kstate,a,i] = R1k1_a[kstate,a,i]
endpardo a,i,kstate
#
ENDPROC move_by_one_RK1

PROC move_by_one_RK2aa
#
pardo a,i,a1,i1,kstate
    request R1k2_aa[kstate,a,i,a1,i1]
    prepare R0k2_aa[kstate,a,i,a1,i1] = R1k2_aa[kstate,a,i,a1,i1]
endpardo a,i,a1,i1,kstate
#
ENDPROC move_by_one_RK2aa

PROC move_by_one_RK2ab
#
pardo a,i,b,j,kstate
    request R1k2_ab[kstate,a,i,b,j]
    prepare R0k2_ab[kstate,a,i,b,j] = R1k2_ab[kstate,a,i,b,j]
endpardo a,i,b,j,kstate
#
ENDPROC move_by_one_RK2ab

PROC move_by_one_LK1
#
pardo a,i,kstate
    request L1k1_a[kstate,a,i]
    prepare L0k1_a[kstate,a,i] = L1k1_a[kstate,a,i]
endpardo a,i,kstate
#
ENDPROC move_by_one_LK1

PROC move_by_one_LK2aa
#
pardo a,i,a1,i1,kstate
    request L1k2_aa[kstate,a,i,a1,i1]
    prepare L0k2_aa[kstate,a,i,a1,i1] = L1k2_aa[kstate,a,i,a1,i1]
endpardo a,i,a1,i1,kstate
#
ENDPROC move_by_one_LK2aa

PROC move_by_one_LK2ab
#
pardo a,i,b,j,kstate
    request L1k2_ab[kstate,a,i,b,j]
    prepare L0k2_ab[kstate,a,i,b,j] = L1k2_ab[kstate,a,i,b,j]
endpardo a,i,b,j,kstate
#
ENDPROC move_by_one_LK2ab

PROC form_new_RK1
#
pardo a,i,kstate
Tkai[kstate,a,i] = 0.0
do ksub
    request RB1_a[ksub,a,i]
    T1kai[kstate,a,i] = RB1_a[ksub,a,i]*SalphaR[ksub,kstate]
    Tkai[kstate,a,i] += T1kai[kstate,a,i]
enddo ksub
prepare R1k1_a[kstate,a,i] = Tkai[kstate,a,i]
endpardo a,i,kstate
#
#
ENDPROC form_new_RK1

PROC form_new_RK2aa
#
pardo a,i,a1,i1,kstate
Tkaiai[kstate,a,i,a1,i1] = 0.0
do ksub
    request RB2_aa[ksub,a,i,a1,i1]
    T1kaiai[kstate,a,i,a1,i1] = RB2_aa[ksub,a,i,a1,i1]*SalphaR[ksub,kstate]
    Tkaiai[kstate,a,i,a1,i1] += T1kaiai[kstate,a,i,a1,i1]
enddo ksub
prepare R1k2_aa[kstate,a,i,a1,i1] = Tkaiai[kstate,a,i,a1,i1]
endpardo a,i,a1,i1,kstate
#
#
ENDPROC form_new_RK2aa

PROC form_new_RK2ab
#
pardo a,i,b,j,kstate
Tkaibj[kstate,a,i,b,j] = 0.0
do ksub
    request RB2_ab[ksub,a,i,b,j]
    T1kaibj[kstate,a,i,b,j] = RB2_ab[ksub,a,i,b,j]*SalphaR[ksub,kstate]
    Tkaibj[kstate,a,i,b,j] += T1kaibj[kstate,a,i,b,j]
enddo ksub
prepare R1k2_ab[kstate,a,i,b,j] = Tkaibj[kstate,a,i,b,j]
endpardo a,i,b,j,kstate
#
ENDPROC form_new_RK2ab

PROC form_new_LK1
#
pardo a,i,kstate
Tkai[kstate,a,i] = 0.0
do ksub
    request LB1_a[ksub,a,i]
    T1kai[kstate,a,i] = LB1_a[ksub,a,i]*SalphaL[ksub,kstate]
    Tkai[kstate,a,i] += T1kai[kstate,a,i]
enddo ksub
prepare L1k1_a[kstate,a,i] = Tkai[kstate,a,i]
endpardo a,i,kstate
#
#
ENDPROC form_new_LK1

PROC form_new_LK2aa
#
pardo a,i,a1,i1,kstate
Tkaiai[kstate,a,i,a1,i1] = 0.0
do ksub
    request LB2_aa[ksub,a,i,a1,i1]
    T1kaiai[kstate,a,i,a1,i1] = LB2_aa[ksub,a,i,a1,i1]*SalphaL[ksub,kstate]
    Tkaiai[kstate,a,i,a1,i1] += T1kaiai[kstate,a,i,a1,i1]
enddo ksub
prepare L1k2_aa[kstate,a,i,a1,i1] = Tkaiai[kstate,a,i,a1,i1]
endpardo a,i,a1,i1,kstate
#
#
ENDPROC form_new_LK2aa

PROC form_new_LK2ab
#
pardo a,i,b,j,kstate
Tkaibj[kstate,a,i,b,j] = 0.0
do ksub
    request LB2_ab[ksub,a,i,b,j]
    T1kaibj[kstate,a,i,b,j] = LB2_ab[ksub,a,i,b,j]*SalphaL[ksub,kstate]
    Tkaibj[kstate,a,i,b,j] += T1kaibj[kstate,a,i,b,j]
enddo ksub
prepare L1k2_ab[kstate,a,i,b,j] = Tkaibj[kstate,a,i,b,j]
endpardo a,i,b,j,kstate
#
ENDPROC form_new_LK2ab

PROC form_residual_R1
#
pardo a,i

    get VCONV1A[a,i]

do kstate
    etemp = SEk[kstate]
    etemp *= -1.0
    Tkai[kstate,a,i] = 0.0

    do ksub
        request HB1_a[ksub,a,i]
        request RB1_a[ksub,a,i]

# a*HB
        T1kai[kstate,a,i] = HB1_a[ksub,a,i]*SalphaR[ksub,kstate]

        Tkai[kstate,a,i] += T1kai[kstate,a,i]
# a*E*B
        T2kai[kstate,a,i]  = RB1_a[ksub,a,i]*SalphaR[ksub,kstate]
        T2kai[kstate,a,i] *= etemp

        Tkai[kstate,a,i] += T2kai[kstate,a,i]
    enddo ksub

    Tk[kstate] = 1.0
    Tai[a,i]   = 1.0

    T3kai[kstate,a,i] = Tk[kstate]^VCONV1A[a,i]

    T4kai[kstate,a,i] = etemp
    T3kai[kstate,a,i] += T4kai[kstate,a,i]

    execute invert_diagonal Tkai[kstate,a,i] T3kai[kstate,a,i]
    Tkai[kstate,a,i] *= -1.0

    T2kai[kstate,a,i] = Tkai[kstate,a,i]
    etemp2 = T2kai[kstate,a,i]*Tkai[kstate,a,i]
    if etemp2 < davidson_thresh
	Tkai[kstate,a,i] = 0.0
    endif

    prepare cRk1_a[kstate,a,i] = Tkai[kstate,a,i]

enddo kstate
endpardo a,i
#
ENDPROC form_residual_R1

PROC form_residual_R2aa
#
pardo a,i,a1,i1

    request VCONV2AA[a,i,a1,i1]

do kstate
    etemp = SEk[kstate]
    etemp *= -1.0
    Tkaiai[kstate,a,i,a1,i1] = 0.0

    do ksub
        request HB2_aa[ksub,a,i,a1,i1]
        request RB2_aa[ksub,a,i,a1,i1]

# a*HB
        T1kaiai[kstate,a,i,a1,i1] = HB2_aa[ksub,a,i,a1,i1]*SalphaR[ksub,kstate]

        Tkaiai[kstate,a,i,a1,i1] += T1kaiai[kstate,a,i,a1,i1]
# a*E*B
        T2kaiai[kstate,a,i,a1,i1]  = RB2_aa[ksub,a,i,a1,i1]*SalphaR[ksub,kstate]
        T2kaiai[kstate,a,i,a1,i1] *= etemp

        Tkaiai[kstate,a,i,a1,i1] += T2kaiai[kstate,a,i,a1,i1]
    enddo ksub

    Tk[kstate] = 1.0
    Taiai[a,i,a1,i1]   = 1.0

    T3kaiai[kstate,a,i,a1,i1] = Tk[kstate]^VCONV2AA[a,i,a1,i1]
    T4kaiai[kstate,a,i,a1,i1] = etemp
    T3kaiai[kstate,a,i,a1,i1] += T4kaiai[kstate,a,i,a1,i1]

    execute invert_diagonal_asym Tkaiai[kstate,a,i,a1,i1] T3kaiai[kstate,a,i,a1,i1]
    Tkaiai[kstate,a,i,a1,i1] *= -1.0

    T2kaiai[kstate,a,i,a1,i1] = Tkaiai[kstate,a,i,a1,i1]
    etemp2 = T2kaiai[kstate,a,i,a1,i1]*Tkaiai[kstate,a,i,a1,i1]
    if etemp2 < davidson_thresh
	Tkaiai[kstate,a,i,a1,i1] = 0.0
    endif

    prepare cRk2_aa[kstate,a,i,a1,i1] = Tkaiai[kstate,a,i,a1,i1]

enddo kstate
endpardo a,i,a1,i1
#
ENDPROC form_residual_R2aa

PROC form_residual_R2ab
#
pardo a,i,b,j

    request VCONV2AB[a,i,b,j]

do kstate
    etemp = SEk[kstate]
    etemp *= -1.0
    Tkaibj[kstate,a,i,b,j] = 0.0

    do ksub
        request HB2_ab[ksub,a,i,b,j]
        request RB2_ab[ksub,a,i,b,j]

# a*HB
        T1kaibj[kstate,a,i,b,j] = HB2_ab[ksub,a,i,b,j]*SalphaR[ksub,kstate]

        Tkaibj[kstate,a,i,b,j] += T1kaibj[kstate,a,i,b,j]
# a*E*B
        T2kaibj[kstate,a,i,b,j]  = RB2_ab[ksub,a,i,b,j]*SalphaR[ksub,kstate]
        T2kaibj[kstate,a,i,b,j] *= etemp

        Tkaibj[kstate,a,i,b,j] += T2kaibj[kstate,a,i,b,j]
    enddo ksub

    Tk[kstate] = 1.0
    Taibj[a,i,b,j]   = 1.0

    T3kaibj[kstate,a,i,b,j] = Tk[kstate]^VCONV2AB[a,i,b,j]
    T4kaibj[kstate,a,i,b,j] = etemp
    T3kaibj[kstate,a,i,b,j] += T4kaibj[kstate,a,i,b,j]

    execute invert_diagonal Tkaibj[kstate,a,i,b,j] T3kaibj[kstate,a,i,b,j]
    Tkaibj[kstate,a,i,b,j] *= -1.0

    T2kaibj[kstate,a,i,b,j] = Tkaibj[kstate,a,i,b,j]
    etemp2 = T2kaibj[kstate,a,i,b,j]*Tkaibj[kstate,a,i,b,j]
    if etemp2 < davidson_thresh
	Tkaibj[kstate,a,i,b,j] = 0.0
    endif

    prepare cRk2_ab[kstate,a,i,b,j] = Tkaibj[kstate,a,i,b,j]

enddo kstate
endpardo a,i,b,j
#
ENDPROC form_residual_R2ab

PROC form_residual_L1
#
pardo a,i

    get VCONV1A[a,i]

do kstate
    etemp = SEk[kstate]
    etemp *= -1.0
    Tkai[kstate,a,i] = 0.0

    do ksub
        request LH1_a[ksub,a,i]
        request LB1_a[ksub,a,i]

# a*HB
        T1kai[kstate,a,i] = LH1_a[ksub,a,i]*SalphaL[ksub,kstate]

        Tkai[kstate,a,i] += T1kai[kstate,a,i]
# a*E*B
        T2kai[kstate,a,i]  = LB1_a[ksub,a,i]*SalphaL[ksub,kstate]
        T2kai[kstate,a,i] *= etemp

        Tkai[kstate,a,i] += T2kai[kstate,a,i]
    enddo ksub

    Tk[kstate] = 1.0
    Tai[a,i]   = 1.0

    T3kai[kstate,a,i] = Tk[kstate]^VCONV1A[a,i]

    T4kai[kstate,a,i] = etemp
    T3kai[kstate,a,i] += T4kai[kstate,a,i]
    
    execute invert_diagonal Tkai[kstate,a,i] T3kai[kstate,a,i]
    Tkai[kstate,a,i] *= -1.0

    T2kai[kstate,a,i] = Tkai[kstate,a,i]
    etemp2 = T2kai[kstate,a,i]*Tkai[kstate,a,i]
    if etemp2 < davidson_thresh
	Tkai[kstate,a,i] = 0.0
    endif

    prepare cLk1_a[kstate,a,i] = Tkai[kstate,a,i]

enddo kstate
endpardo a,i
#
ENDPROC form_residual_L1

PROC form_residual_L2aa
#
pardo a,i,a1,i1

    request VCONV2AA[a,i,a1,i1]

do kstate
    etemp = SEk[kstate]
    etemp *= -1.0
    Tkaiai[kstate,a,i,a1,i1] = 0.0

    do ksub
        request LH2_aa[ksub,a,i,a1,i1]
        request LB2_aa[ksub,a,i,a1,i1]

# a*HB
        T1kaiai[kstate,a,i,a1,i1] = LH2_aa[ksub,a,i,a1,i1]*SalphaL[ksub,kstate]

        Tkaiai[kstate,a,i,a1,i1] += T1kaiai[kstate,a,i,a1,i1]
# a*E*B
        T2kaiai[kstate,a,i,a1,i1]  = LB2_aa[ksub,a,i,a1,i1]*SalphaL[ksub,kstate]
        T2kaiai[kstate,a,i,a1,i1] *= etemp

        Tkaiai[kstate,a,i,a1,i1] += T2kaiai[kstate,a,i,a1,i1]
    enddo ksub

    Tk[kstate] = 1.0
    Taiai[a,i,a1,i1]   = 1.0

    T3kaiai[kstate,a,i,a1,i1] = Tk[kstate]^VCONV2AA[a,i,a1,i1]
    T4kaiai[kstate,a,i,a1,i1] = etemp
    T3kaiai[kstate,a,i,a1,i1] += T4kaiai[kstate,a,i,a1,i1]

    execute invert_diagonal_asym Tkaiai[kstate,a,i,a1,i1] T3kaiai[kstate,a,i,a1,i1]
    Tkaiai[kstate,a,i,a1,i1] *= -1.0

    T2kaiai[kstate,a,i,a1,i1] = Tkaiai[kstate,a,i,a1,i1]
    etemp2 = T2kaiai[kstate,a,i,a1,i1]*Tkaiai[kstate,a,i,a1,i1]
    if etemp2 < davidson_thresh
	Tkaiai[kstate,a,i,a1,i1] = 0.0
    endif

    prepare cLk2_aa[kstate,a,i,a1,i1] = Tkaiai[kstate,a,i,a1,i1]

enddo kstate
endpardo a,i,a1,i1
#
ENDPROC form_residual_L2aa

PROC form_residual_L2ab
#
pardo a,i,b,j

    request VCONV2AB[a,i,b,j]

do kstate
    etemp = SEk[kstate]
    etemp *= -1.0
    Tkaibj[kstate,a,i,b,j] = 0.0

    do ksub
        request LH2_ab[ksub,a,i,b,j]
        request LB2_ab[ksub,a,i,b,j]

# a*HB
        T1kaibj[kstate,a,i,b,j] = LH2_ab[ksub,a,i,b,j]*SalphaL[ksub,kstate]

        Tkaibj[kstate,a,i,b,j] += T1kaibj[kstate,a,i,b,j]
# a*E*B
        T2kaibj[kstate,a,i,b,j]  = LB2_ab[ksub,a,i,b,j]*SalphaL[ksub,kstate]
        T2kaibj[kstate,a,i,b,j] *= etemp

        Tkaibj[kstate,a,i,b,j] += T2kaibj[kstate,a,i,b,j]
    enddo ksub

    Tk[kstate] = 1.0
    Taibj[a,i,b,j]   = 1.0

    T3kaibj[kstate,a,i,b,j] = Tk[kstate]^VCONV2AB[a,i,b,j]
    T4kaibj[kstate,a,i,b,j] = etemp
    T3kaibj[kstate,a,i,b,j] += T4kaibj[kstate,a,i,b,j]

    execute invert_diagonal Tkaibj[kstate,a,i,b,j] T3kaibj[kstate,a,i,b,j]
    Tkaibj[kstate,a,i,b,j] *= -1.0

    T2kaibj[kstate,a,i,b,j] = Tkaibj[kstate,a,i,b,j]
    etemp2 = T2kaibj[kstate,a,i,b,j]*Tkaibj[kstate,a,i,b,j]
    if etemp2 < davidson_thresh
	Tkaibj[kstate,a,i,b,j] = 0.0
    endif

    prepare cLk2_ab[kstate,a,i,b,j] = Tkaibj[kstate,a,i,b,j]

enddo kstate
endpardo a,i,b,j
#
ENDPROC form_residual_L2ab

PROC update_RB1
#
pardo a,i
    allocate contiguous CLRB1_a[1:subspc,a:a,i:i]
    do kstate
        request R1k1_a[kstate,a,i]
        request R0k1_a[kstate,a,i]
        request cRk1_a[kstate,a,i]

# davidson space 1
        kstart = kstate
        CLRB1_a[kstart:kstart,a:a,i:i] = R0k1_a[kstate,a,i]
# davidson space 2
        kstart = kstate + roots
        CLRB1_a[kstart:kstart,a:a,i:i] = R1k1_a[kstate,a,i]
# davidson space 3
        kstart = kstate + 2*roots
        CLRB1_a[kstart:kstart,a:a,i:i] = cRk1_a[kstate,a,i]
    enddo kstate
    do ksub
        Tkai[ksub,a,i] = CLRB1_a[ksub:ksub,a:a,i:i]
        prepare RB1_a[ksub,a,i] = Tkai[ksub,a,i]
    enddo ksub

    deallocate contiguous CLRB1_a[1:subspc,a:a,i:i]
endpardo a,i
#
ENDPROC update_RB1

PROC update_RB2aa
#
pardo a,i,a1,i1
    allocate contiguous CLRB2_aa[1:subspc,a:a,i:i,a1:a1,i1:i1]
    do kstate
        request R1k2_aa[kstate,a,i,a1,i1]
        request R0k2_aa[kstate,a,i,a1,i1]
        request cRk2_aa[kstate,a,i,a1,i1]

# davidson space 1
        kstart = kstate
        CLRB2_aa[kstart:kstart,a:a,i:i,a1:a1,i1:i1] = R0k2_aa[kstate,a,i,a1,i1]
# davidson space 2
        kstart = kstate + roots
        CLRB2_aa[kstart:kstart,a:a,i:i,a1:a1,i1:i1] = R1k2_aa[kstate,a,i,a1,i1]
# davidson space 3
        kstart = kstate + 2*roots
        CLRB2_aa[kstart:kstart,a:a,i:i,a1:a1,i1:i1] = cRk2_aa[kstate,a,i,a1,i1]
    enddo kstate
    do ksub
        Tkaiai[ksub,a,i,a1,i1] = CLRB2_aa[ksub:ksub,a:a,i:i,a1:a1,i1:i1]
        prepare RB2_aa[ksub,a,i,a1,i1] = Tkaiai[ksub,a,i,a1,i1]
    enddo ksub

    deallocate contiguous CLRB2_aa[1:subspc,a:a,i:i,a1:a1,i1:i1]
endpardo a,i,a1,i1
#
ENDPROC update_RB2aa

PROC update_RB2ab
#
pardo a,i,b,j
    allocate contiguous CLRB2_ab[1:subspc,a:a,i:i,b:b,j:j]
    do kstate
        request R1k2_ab[kstate,a,i,b,j]
        request R0k2_ab[kstate,a,i,b,j]
        request cRk2_ab[kstate,a,i,b,j]

# davidson space 1
        kstart = kstate
        CLRB2_ab[kstart:kstart,a:a,i:i,b:b,j:j] = R0k2_ab[kstate,a,i,b,j]
# davidson space 2
        kstart = kstate + roots
        CLRB2_ab[kstart:kstart,a:a,i:i,b:b,j:j] = R1k2_ab[kstate,a,i,b,j]
# davidson space 3
        kstart = kstate + 2*roots
        CLRB2_ab[kstart:kstart,a:a,i:i,b:b,j:j] = cRk2_ab[kstate,a,i,b,j]
    enddo kstate
    do ksub
        Tkaibj[ksub,a,i,b,j] = CLRB2_ab[ksub:ksub,a:a,i:i,b:b,j:j]
        prepare RB2_ab[ksub,a,i,b,j] = Tkaibj[ksub,a,i,b,j]
    enddo ksub

    deallocate contiguous CLRB2_ab[1:subspc,a:a,i:i,b:b,j:j]
endpardo a,i,b,j
#
ENDPROC update_RB2ab

PROC update_LB1
#
pardo a,i
    allocate contiguous CLLB1_a[1:subspc,a:a,i:i]
    do kstate
        request L1k1_a[kstate,a,i]
        request L0k1_a[kstate,a,i]
        request cLk1_a[kstate,a,i]

# davidson space 1
        kstart = kstate
        CLLB1_a[kstart:kstart,a:a,i:i] = L0k1_a[kstate,a,i]
# davidson space 2
        kstart = kstate + roots
        CLLB1_a[kstart:kstart,a:a,i:i] = L1k1_a[kstate,a,i]
# davidson space 3
        kstart = kstate + 2*roots
        CLLB1_a[kstart:kstart,a:a,i:i] = cLk1_a[kstate,a,i]
    enddo kstate
    do ksub
        Tkai[ksub,a,i] = CLLB1_a[ksub:ksub,a:a,i:i]
        prepare LB1_a[ksub,a,i] = Tkai[ksub,a,i]
    enddo ksub

    deallocate contiguous CLLB1_a[1:subspc,a:a,i:i]
endpardo a,i
#
ENDPROC update_LB1

PROC update_LB2aa
#
pardo a,i,a1,i1
    allocate contiguous CLLB2_aa[1:subspc,a:a,i:i,a1:a1,i1:i1]
    do kstate
        request L1k2_aa[kstate,a,i,a1,i1]
        request L0k2_aa[kstate,a,i,a1,i1]
        request cLk2_aa[kstate,a,i,a1,i1]

# davidson space 1
        kstart = kstate
        CLLB2_aa[kstart:kstart,a:a,i:i,a1:a1,i1:i1] = L0k2_aa[kstate,a,i,a1,i1]
# davidson space 2
        kstart = kstate + roots
        CLLB2_aa[kstart:kstart,a:a,i:i,a1:a1,i1:i1] = L1k2_aa[kstate,a,i,a1,i1]
# davidson space 3
        kstart = kstate + 2*roots
        CLLB2_aa[kstart:kstart,a:a,i:i,a1:a1,i1:i1] = cLk2_aa[kstate,a,i,a1,i1]
    enddo kstate
    do ksub
        Tkaiai[ksub,a,i,a1,i1] = CLLB2_aa[ksub:ksub,a:a,i:i,a1:a1,i1:i1]
        prepare LB2_aa[ksub,a,i,a1,i1] = Tkaiai[ksub,a,i,a1,i1]
    enddo ksub

    deallocate contiguous CLLB2_aa[1:subspc,a:a,i:i,a1:a1,i1:i1]
endpardo a,i,a1,i1
#
ENDPROC update_LB2aa

PROC update_LB2ab
#
pardo a,i,b,j
    allocate contiguous CLLB2_ab[1:subspc,a:a,i:i,b:b,j:j]
    do kstate
        request L1k2_ab[kstate,a,i,b,j]
        request L0k2_ab[kstate,a,i,b,j]
        request cLk2_ab[kstate,a,i,b,j]

# davidson space 1
        kstart = kstate
        CLLB2_ab[kstart:kstart,a:a,i:i,b:b,j:j] = L0k2_ab[kstate,a,i,b,j]
# davidson space 2
        kstart = kstate + roots
        CLLB2_ab[kstart:kstart,a:a,i:i,b:b,j:j] = L1k2_ab[kstate,a,i,b,j]
# davidson space 3
        kstart = kstate + 2*roots
        CLLB2_ab[kstart:kstart,a:a,i:i,b:b,j:j] = cLk2_ab[kstate,a,i,b,j]
    enddo kstate
    do ksub
        Tkaibj[ksub,a,i,b,j] = CLLB2_ab[ksub:ksub,a:a,i:i,b:b,j:j]
        prepare LB2_ab[ksub,a,i,b,j] = Tkaibj[ksub,a,i,b,j]
    enddo ksub

    deallocate contiguous CLLB2_ab[1:subspc,a:a,i:i,b:b,j:j]
endpardo a,i,b,j
#
ENDPROC update_LB2ab

PROC all_GS
#
#---------------------------------------------------------------
# we do Left | Right biorthogonalization.
# when coded this paper was open
#ROCKY MOUNTAIN JOURNAL OF MATHEMATICS Volume 44, Number 4, 2014
#INTRODUCTION TO A GRAM-SCHMIDT-TYPE BIORTHOGONALIZATION METHOD
#L. KOHAUPT
# modification to the scheme by having L and R scaled by 1/norm**0.5 
#  this is done for numerical stability concerns due to imballanced 
#  weighting of L and R within the above algorithm
#---------------------------------------------------------------
#
do ksub
where ksub == 1
#######################
# get k=k'=1 overlap
    normS   = 0.0
    Tk[ksub] = 1.0
    pardo a,i
	request RB1_a[ksub,a,i]
	request LB1_a[ksub,a,i]
	normT  = LB1_a[ksub,a,i]*RB1_a[ksub,a,i]
	normT *= 2.0
	normS += normT
    endpardo a,i
    pardo a,i,a1,i1
	request RB2_aa[ksub,a,i,a1,i1]
	request LB2_aa[ksub,a,i,a1,i1]
	normT  = LB2_aa[ksub,a,i,a1,i1]*RB2_aa[ksub,a,i,a1,i1]
	normT *= 0.5
	normS += normT
    endpardo a,i,a1,i1

    pardo a,i,b,j
	request RB2_ab[ksub,a,i,b,j]
	request LB2_ab[ksub,a,i,b,j]
	normT  = LB2_ab[ksub,a,i,b,j]*RB2_ab[ksub,a,i,b,j]
	normS += normT
    endpardo a,i,b,j
    server_barrier
    norm1   = 0.0
    collective norm1   += normS
    etemp = 1.0
    if norm1 < 0.0
	etemp = -1.0
    endif
    norm1 *= etemp
    norm2 = (norm1)**(-0.5)
    if norm1 < (10.0)**(-12.0)
	norm2 = 0.0
    endif
#######################
    pardo a,i
        prepare RB1_a[ksub,a,i] *= norm2
    endpardo a,i
    pardo a,i,a1,i1
        prepare RB2_aa[ksub,a,i,a1,i1] *= norm2
    endpardo a,i,a1,i1
    pardo a,i,b,j
        prepare RB2_ab[ksub,a,i,b,j] *= norm2
    endpardo a,i,b,j
#
# flip sign of left vector for negative bi-norm
    server_barrier
    norm2 *= etemp
#
    pardo a,i
        prepare LB1_a[ksub,a,i] *= norm2
    endpardo a,i
    pardo a,i,a1,i1
        prepare LB2_aa[ksub,a,i,a1,i1] *= norm2
    endpardo a,i,a1,i1
    pardo a,i,b,j
        prepare LB2_ab[ksub,a,i,b,j] *= norm2
    endpardo a,i,b,j
enddo ksub
server_barrier

# loop over "k+1"
do qsub
#######################
# make copy of Ak+1
    Tk[qsub] = 1.0
    pardo a,i
	request LB1_a[qsub,a,i]
	Tai[a,i] = Tk[qsub]*LB1_a[qsub,a,i]
	put DLNai[a,i] = Tai[a,i]
    endpardo a,i
    pardo a,i,a1,i1
	request LB2_aa[qsub,a,i,a1,i1]
	Taiai[a,i,a1,i1] = Tk[qsub]*LB2_aa[qsub,a,i,a1,i1]
	put DLNaiai[a,i,a1,i1] = Taiai[a,i,a1,i1]
    endpardo a,i,a1,i1
    pardo a,i,b,j
	request LB2_ab[qsub,a,i,b,j]
	Taibj[a,i,b,j] = Tk[qsub]*LB2_ab[qsub,a,i,b,j]
	put DLNaibj[a,i,b,j] = Taibj[a,i,b,j]
    endpardo a,i,b,j
# make copy of Fk+1
    pardo a,i
	request RB1_a[qsub,a,i]
	Tai[a,i] = Tk[qsub]*RB1_a[qsub,a,i]
	put DRNai[a,i] = Tai[a,i]
    endpardo a,i
    pardo a,i,a1,i1
	request RB2_aa[qsub,a,i,a1,i1]
	Taiai[a,i,a1,i1] = Tk[qsub]*RB2_aa[qsub,a,i,a1,i1]
	put DRNaiai[a,i,a1,i1] = Taiai[a,i,a1,i1]
    endpardo a,i,a1,i1
    pardo a,i,b,j
	request RB2_ab[qsub,a,i,b,j]
	Taibj[a,i,b,j] = Tk[qsub]*RB2_ab[qsub,a,i,b,j]
	put DRNaibj[a,i,b,j] = Taibj[a,i,b,j]
    endpardo a,i,b,j
    server_barrier

    do ksub
    where ksub < qsub
#######################
# form (Ak+1,Gk) = Loverlap1
	Tk[ksub] = 1.0
        LoverlapS   = 0.0
	pardo a,i
	    get DLNai[a,i]
	    request RB1_a[ksub,a,i]
	    Tai[a,i]    = Tk[ksub]*RB1_a[ksub,a,i]
	    overlapT    = DLNai[a,i]*Tai[a,i]
	    overlapT   *= 2.0
	    LoverlapS  += overlapT
	endpardo a,i
	pardo a,i,a1,i1
	    get DLNaiai[a,i,a1,i1]
	    request RB2_aa[ksub,a,i,a1,i1]
	    Taiai[a,i,a1,i1] = Tk[ksub]*RB2_aa[ksub,a,i,a1,i1]
	    overlapT         = DLNaiai[a,i,a1,i1]*Taiai[a,i,a1,i1]
	    overlapT        *= 0.5
	    LoverlapS       += overlapT
	endpardo a,i,a1,i1
	pardo a,i,b,j
	    get DLNaibj[a,i,b,j]
	    request RB2_ab[ksub,a,i,b,j]
	    Taibj[a,i,b,j] = Tk[ksub]*RB2_ab[ksub,a,i,b,j]
	    overlapT       = DLNaibj[a,i,b,j]*Taibj[a,i,b,j]
	    LoverlapS     += overlapT
	endpardo a,i,b,j
#######################
# form (Ck,Fk+1)
	Tk[ksub] = 1.0
        RoverlapS   = 0.0
	pardo a,i
	    get DRNai[a,i]
	    request LB1_a[ksub,a,i]
	    Tai[a,i]    = Tk[ksub]*LB1_a[ksub,a,i]
	    overlapT    = DRNai[a,i]*Tai[a,i]
	    overlapT   *= 2.0
	    RoverlapS  += overlapT
	endpardo a,i
	pardo a,i,a1,i1
	    get DRNaiai[a,i,a1,i1]
	    request LB2_aa[ksub,a,i,a1,i1]
	    Taiai[a,i,a1,i1] = Tk[ksub]*LB2_aa[ksub,a,i,a1,i1]
	    overlapT         = DRNaiai[a,i,a1,i1]*Taiai[a,i,a1,i1]
	    overlapT        *= 0.5
	    RoverlapS       += overlapT
	endpardo a,i,a1,i1
	pardo a,i,b,j
	    get DRNaibj[a,i,b,j]
	    request LB2_ab[ksub,a,i,b,j]
	    Taibj[a,i,b,j] = Tk[ksub]*LB2_ab[ksub,a,i,b,j]
	    overlapT       = DRNaibj[a,i,b,j]*Taibj[a,i,b,j]
	    RoverlapS     += overlapT
	endpardo a,i,b,j
	server_barrier
	Loverlap1   = 0.0
	Roverlap1   = 0.0
	collective Loverlap1   += LoverlapS
	collective Roverlap1   += RoverlapS
#######################
# do in place sum Bk+1 -= Loverlap1 * Ck
	Tkk[qsub,ksub] = -1.0*Loverlap1
	pardo a,i
	    request LB1_a[ksub,a,i]
	    Tkai[qsub,a,i] = Tkk[qsub,ksub]*LB1_a[ksub,a,i]
	    prepare LB1_a[qsub,a,i] += Tkai[qsub,a,i]
	endpardo a,i
	pardo a,i,a1,i1
	    request LB2_aa[ksub,a,i,a1,i1]
	    Tkaiai[qsub,a,i,a1,i1] = Tkk[qsub,ksub]*LB2_aa[ksub,a,i,a1,i1]
	    prepare LB2_aa[qsub,a,i,a1,i1] += Tkaiai[qsub,a,i,a1,i1]
	endpardo a,i,a1,i1
	pardo a,i,b,j
	    request LB2_ab[ksub,a,i,b,j]
	    Tkaibj[qsub,a,i,b,j] = Tkk[qsub,ksub]*LB2_ab[ksub,a,i,b,j]
	    prepare LB2_ab[qsub,a,i,b,j] += Tkaibj[qsub,a,i,b,j]
	endpardo a,i,b,j
#######################
# do in place sum Gk+1 -= Roverlap1 * Gk
	Tkk[qsub,ksub] = -1.0*Roverlap1
	pardo a,i
	    request RB1_a[ksub,a,i]
	    Tkai[qsub,a,i] = Tkk[qsub,ksub]*RB1_a[ksub,a,i]
	    prepare RB1_a[qsub,a,i] += Tkai[qsub,a,i]
	endpardo a,i
	pardo a,i,a1,i1
	    request RB2_aa[ksub,a,i,a1,i1]
	    Tkaiai[qsub,a,i,a1,i1] = Tkk[qsub,ksub]*RB2_aa[ksub,a,i,a1,i1]
	    prepare RB2_aa[qsub,a,i,a1,i1] += Tkaiai[qsub,a,i,a1,i1]
	endpardo a,i,a1,i1
	pardo a,i,b,j
	    request RB2_ab[ksub,a,i,b,j]
	    Tkaibj[qsub,a,i,b,j] = Tkk[qsub,ksub]*RB2_ab[ksub,a,i,b,j]
	    prepare RB2_ab[qsub,a,i,b,j] += Tkaibj[qsub,a,i,b,j]
	endpardo a,i,b,j
    enddo ksub
    server_barrier

#######################
# scale Ck+1 = 1/(Bk+1,Fk+1)
#######################
    normS   = 0.0
    Tk[qsub] = 1.0
    pardo a,i
	request RB1_a[qsub,a,i]
	request LB1_a[qsub,a,i]
	normT  = LB1_a[qsub,a,i]*RB1_a[qsub,a,i]
	normT *= 2.0
	normS += normT
    endpardo a,i
    pardo a,i,a1,i1
	request RB2_aa[qsub,a,i,a1,i1]
	request LB2_aa[qsub,a,i,a1,i1]
	normT  = LB2_aa[qsub,a,i,a1,i1]*RB2_aa[qsub,a,i,a1,i1]
	normT *= 0.5
	normS += normT
    endpardo a,i,a1,i1
    pardo a,i,b,j
	request RB2_ab[qsub,a,i,b,j]
	request LB2_ab[qsub,a,i,b,j]
	normT  = LB2_ab[qsub,a,i,b,j]*RB2_ab[qsub,a,i,b,j]
	normS += normT
    endpardo a,i,b,j
    server_barrier
    norm1   = 0.0
    collective norm1   += normS
    etemp = 1.0
    if norm1 < 0.0
	etemp = -1.0
    endif
    norm1 *= etemp
    norm2 = (norm1)**(-0.5)
    if norm1 < (10.0)**(-12.0)
	norm2 = 0.0
    endif
#######################
    pardo a,i
        prepare RB1_a[qsub,a,i] *= norm2
    endpardo a,i
    pardo a,i,a1,i1
        prepare RB2_aa[qsub,a,i,a1,i1] *= norm2
    endpardo a,i,a1,i1
    pardo a,i,b,j
        prepare RB2_ab[qsub,a,i,b,j] *= norm2
    endpardo a,i,b,j
#
    server_barrier
    norm2 *= etemp
#
    pardo a,i
        prepare LB1_a[qsub,a,i] *= norm2
    endpardo a,i
    pardo a,i,a1,i1
        prepare LB2_aa[qsub,a,i,a1,i1] *= norm2
    endpardo a,i,a1,i1
    pardo a,i,b,j
        prepare LB2_ab[qsub,a,i,b,j] *= norm2
    endpardo a,i,b,j
    server_barrier
enddo qsub
server_barrier
#
ENDPROC all_GS

PROC update_vecs
#
server_barrier

server_barrier
call move_by_one_RK1
call move_by_one_LK1

call move_by_one_RK2aa
call move_by_one_LK2aa

call move_by_one_RK2ab
call move_by_one_LK2ab
server_barrier

call form_new_RK1
call form_new_LK1

call form_new_RK2aa
call form_new_LK2aa

call form_new_RK2ab
call form_new_LK2ab

call form_residual_R1
call form_residual_R2aa
call form_residual_R2ab

call form_residual_L1
call form_residual_L2aa
call form_residual_L2ab

server_barrier
call update_RB1
call update_LB1

call update_RB2aa
call update_LB2aa

call update_RB2ab
call update_LB2ab
server_barrier
sum1 = 0.0
pardo a,i,kstate
    request cRk1_a[kstate,a,i]
    Tkai[kstate,a,i] = cRk1_a[kstate,a,i]
    etemp = Tkai[kstate,a,i] * cRk1_a[kstate,a,i]
    sum1 += etemp
endpardo a,i,kstate

pardo a,i,a1,i1,kstate
    request cRk2_aa[kstate,a,i,a1,i1]
    Tkaiai[kstate,a,i,a1,i1] = cRk2_aa[kstate,a,i,a1,i1]
    etemp = Tkaiai[kstate,a,i,a1,i1]*cRk2_aa[kstate,a,i,a1,i1]
    sum1 += etemp
endpardo a,i,a1,i1,kstate

pardo a,i,b,j,kstate
    request cRk2_ab[kstate,a,i,b,j]
    Tkaibj[kstate,a,i,b,j] = cRk2_ab[kstate,a,i,b,j]
    etemp = Tkaibj[kstate,a,i,b,j]*cRk2_ab[kstate,a,i,b,j]
    sum1 += etemp
endpardo a,i,b,j,kstate
server_barrier
sum2 = 0.0
collective sum2 += sum1
etemp3 = (scalar)eom_roots
rms_orb_conv = (sum2/etemp3)**(0.5)
server_barrier
assert_same rms_orb_conv
#
ENDPROC update_vecs

PROC form_guess

server_barrier

pardo a,i,ksub
    request RB1_a[ksub,a,i]
    Tkai[ksub,a,i]  = RB1_a[ksub,a,i]
    Tkai[ksub,a,i] *= 0.5
    prepare LB1_a[ksub,a,i] = Tkai[ksub,a,i]
endpardo a,i,ksub

pardo a,i,kstate
    request R1k1_a[kstate,a,i]
    Tkai[kstate,a,i]  = R1k1_a[kstate,a,i]
    Tkai[kstate,a,i] *= 0.5
    prepare L1k1_a[kstate,a,i] = Tkai[kstate,a,i]
endpardo a,i,kstate


pardo a,i,kstate
    prepare R0k1_a[kstate,a,i] = 0.0
endpardo a,i,kstate

pardo a,i,kstate
    prepare cRk1_a[kstate,a,i] = 0.0
endpardo a,i,kstate

pardo a,i,kstate
    prepare L0k1_a[kstate,a,i] = 0.0
endpardo a,i,kstate

pardo a,i,kstate
    prepare cLk1_a[kstate,a,i] = 0.0
endpardo a,i,kstate

pardo a,i,a1,i1,ksub
    prepare RB2_aa[ksub,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,ksub

pardo a,i,a1,i1,ksub
    prepare LB2_aa[ksub,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,ksub

pardo a,i,a1,i1,kstate
    prepare R0k2_aa[kstate,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,kstate

pardo a,i,a1,i1,kstate
    prepare R1k2_aa[kstate,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,kstate

pardo a,i,a1,i1,kstate
    prepare cRk2_aa[kstate,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,kstate

pardo a,i,a1,i1,kstate
    prepare L0k2_aa[kstate,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,kstate

pardo a,i,a1,i1,kstate
    prepare L1k2_aa[kstate,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,kstate

pardo a,i,a1,i1,kstate
    prepare cLk2_aa[kstate,a,i,a1,i1] = 0.0
endpardo a,i,a1,i1,kstate

pardo a,i,b,j,ksub
    prepare RB2_ab[ksub,a,i,b,j] = 0.0
endpardo a,i,b,j,ksub

pardo a,i,b,j,ksub
    prepare LB2_ab[ksub,a,i,b,j] = 0.0
endpardo a,i,b,j,ksub

pardo a,i,b,j,kstate
    prepare R0k2_ab[kstate,a,i,b,j] = 0.0
endpardo a,i,b,j,kstate

pardo a,i,b,j,kstate
    prepare R1k2_ab[kstate,a,i,b,j] = 0.0
endpardo a,i,b,j,kstate

pardo a,i,b,j,kstate
    prepare cRk2_ab[kstate,a,i,b,j] = 0.0
endpardo a,i,b,j,kstate

pardo a,i,b,j,kstate
    prepare L0k2_ab[kstate,a,i,b,j] = 0.0
endpardo a,i,b,j,kstate

pardo a,i,b,j,kstate
    prepare L1k2_ab[kstate,a,i,b,j] = 0.0
endpardo a,i,b,j,kstate

pardo a,i,b,j,kstate
    prepare cLk2_ab[kstate,a,i,b,j] = 0.0
endpardo a,i,b,j,kstate

server_barrier

ENDPROC form_guess



ENDSIAL MOI_eom_elements
